<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>matplotlib实例————线性回归计算房屋面积和总价关系</title>
      <link href="/post/python-matplotlib1/"/>
      <url>/post/python-matplotlib1/</url>
      
        <content type="html"><![CDATA[<h2 id="目标"><a href="#目标" class="headerlink" title="目标"></a>目标</h2><p>利用<code>matplotlib(v3.2)</code>，在链家二手房平台爬取二手房信息，并使用最小二乘法进行线性回归模型建模。</p><h2 id="求解"><a href="#求解" class="headerlink" title="求解"></a>求解</h2><h3 id="爬取并处理数据"><a href="#爬取并处理数据" class="headerlink" title="爬取并处理数据"></a>爬取并处理数据</h3><p>参见 <a href="https://boyinthesun.cn/post/python-scrapy2/">https://boyinthesun.cn/post/python-scrapy2/</a></p><h3 id="绘制图表"><a href="#绘制图表" class="headerlink" title="绘制图表"></a>绘制图表</h3><p>详见注释，这里还用到了numpy和pandas。</p><pre class="line-numbers language-python"><code class="language-python"><span class="token keyword">import</span> matplotlib<span class="token punctuation">.</span>pyplot <span class="token keyword">as</span> plt<span class="token keyword">import</span> pandas <span class="token keyword">as</span> pd<span class="token keyword">import</span> numpy <span class="token keyword">as</span> np<span class="token comment" spellcheck="true"># 为了显示中文，需要更换字体</span>plt<span class="token punctuation">.</span>rcParams<span class="token punctuation">[</span><span class="token string">'font.family'</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">'sans-serif'</span><span class="token punctuation">]</span>plt<span class="token punctuation">.</span>rcParams<span class="token punctuation">[</span><span class="token string">'font.sans-serif'</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">'SimHei'</span><span class="token punctuation">]</span>path <span class="token operator">=</span> <span class="token string">'data\\data_tongzhou.csv'</span>  <span class="token comment" spellcheck="true"># 文件名，请根据情况修改</span>df <span class="token operator">=</span> pd<span class="token punctuation">.</span>read_csv<span class="token punctuation">(</span>path<span class="token punctuation">,</span> usecols<span class="token operator">=</span><span class="token punctuation">[</span><span class="token string">'总价'</span><span class="token punctuation">,</span> <span class="token string">'面积'</span><span class="token punctuation">]</span><span class="token punctuation">)</span>  <span class="token comment" spellcheck="true"># 读取文件中总价和面积两列</span><span class="token comment" spellcheck="true"># 拟合方法</span><span class="token keyword">def</span> <span class="token function">fitSLR</span><span class="token punctuation">(</span>x<span class="token punctuation">,</span>y<span class="token punctuation">)</span><span class="token punctuation">:</span>    dinominator <span class="token operator">=</span> <span class="token number">0</span>    numerator <span class="token operator">=</span> <span class="token number">0</span>    <span class="token keyword">for</span> i <span class="token keyword">in</span> range<span class="token punctuation">(</span>len<span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        numerator <span class="token operator">+=</span> <span class="token punctuation">(</span>x<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">-</span> np<span class="token punctuation">.</span>mean<span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token punctuation">(</span>y<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">-</span> np<span class="token punctuation">.</span>mean<span class="token punctuation">(</span>y<span class="token punctuation">)</span><span class="token punctuation">)</span>        dinominator <span class="token operator">+=</span> <span class="token punctuation">(</span>x<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">-</span> np<span class="token punctuation">.</span>mean<span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">**</span> <span class="token number">2</span>    <span class="token comment" spellcheck="true"># print("numerator = ", numerator)</span>    <span class="token comment" spellcheck="true"># print("dinominator = ", dinominator)</span>    slope <span class="token operator">=</span> numerator<span class="token operator">/</span>float<span class="token punctuation">(</span>dinominator<span class="token punctuation">)</span>    intercept <span class="token operator">=</span> np<span class="token punctuation">.</span>mean<span class="token punctuation">(</span>y<span class="token punctuation">)</span> <span class="token operator">-</span> slope <span class="token operator">*</span> np<span class="token punctuation">.</span>mean<span class="token punctuation">(</span>x<span class="token punctuation">)</span>    <span class="token comment" spellcheck="true"># print("slope = ", slope)</span>    <span class="token comment" spellcheck="true"># print("intercept = ", intercept)</span>    <span class="token keyword">return</span> slope<span class="token punctuation">,</span> interceptslope<span class="token punctuation">,</span> intercept <span class="token operator">=</span> fitSLR<span class="token punctuation">(</span>df<span class="token punctuation">[</span><span class="token string">'面积'</span><span class="token punctuation">]</span><span class="token punctuation">,</span> df<span class="token punctuation">[</span><span class="token string">'总价'</span><span class="token punctuation">]</span><span class="token punctuation">)</span>  <span class="token comment" spellcheck="true"># 拟合，得到直线的斜率和截距</span>plt<span class="token punctuation">.</span>scatter<span class="token punctuation">(</span>df<span class="token punctuation">[</span><span class="token string">'面积'</span><span class="token punctuation">]</span><span class="token punctuation">,</span> df<span class="token punctuation">[</span><span class="token string">'总价'</span><span class="token punctuation">]</span><span class="token punctuation">,</span> color<span class="token operator">=</span><span class="token string">'blue'</span><span class="token punctuation">,</span> s<span class="token operator">=</span><span class="token number">0.2</span><span class="token punctuation">)</span>  <span class="token comment" spellcheck="true"># 绘制散点，并给它一个我喜欢的颜色和大小。单位为磅，下同</span>plt<span class="token punctuation">.</span>plot<span class="token punctuation">(</span>df<span class="token punctuation">[</span><span class="token string">'面积'</span><span class="token punctuation">]</span><span class="token punctuation">,</span> slope <span class="token operator">*</span> df<span class="token punctuation">[</span><span class="token string">'面积'</span><span class="token punctuation">]</span> <span class="token operator">+</span> intercept<span class="token punctuation">,</span> color<span class="token operator">=</span><span class="token string">'red'</span><span class="token punctuation">,</span> linewidth<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">,</span> label<span class="token operator">=</span><span class="token string">'y = {}x + {}'</span><span class="token punctuation">.</span>format<span class="token punctuation">(</span>slope<span class="token punctuation">,</span> intercept<span class="token punctuation">)</span><span class="token punctuation">)</span>  <span class="token comment" spellcheck="true"># 绘制直线，并给它一个我喜欢的颜色和宽度</span>plt<span class="token punctuation">.</span>xlabel<span class="token punctuation">(</span><span class="token string">'房屋面积/平方米'</span><span class="token punctuation">)</span>plt<span class="token punctuation">.</span>ylabel<span class="token punctuation">(</span><span class="token string">'房屋总价/万元'</span><span class="token punctuation">)</span>plt<span class="token punctuation">.</span>legend<span class="token punctuation">(</span>loc<span class="token operator">=</span><span class="token string">'upper left'</span><span class="token punctuation">)</span>  <span class="token comment" spellcheck="true"># 图例位置</span>plt<span class="token punctuation">.</span>title<span class="token punctuation">(</span><span class="token string">'北京市通州区房屋面积和总价关系预测'</span><span class="token punctuation">)</span>plt<span class="token punctuation">.</span>show<span class="token punctuation">(</span><span class="token punctuation">)</span>  <span class="token comment" spellcheck="true"># 显示图表</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="结果展示"><a href="#结果展示" class="headerlink" title="结果展示"></a>结果展示</h2><p><img src="https://boyinthesun.oss-cn-beijing.aliyuncs.com/img/python-matplotlib1.png?x-oss-process=style/watermark" alt=""></p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> 编程实例 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
            <tag> 学堂在线《Python数据分析与可视化》 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>matplotlib实例————绘制链家二手房数据箱型图</title>
      <link href="/post/python-matplotlib/"/>
      <url>/post/python-matplotlib/</url>
      
        <content type="html"><![CDATA[<h2 id="目标"><a href="#目标" class="headerlink" title="目标"></a>目标</h2><p>利用<code>matplotlib(v3.2)</code>，在链家二手房平台爬取自己家乡或者北京的3~4个区域的二手房信息，处理后保存为data.csv，并探究不同的区二手房总价数据。</p><h2 id="求解"><a href="#求解" class="headerlink" title="求解"></a>求解</h2><h3 id="爬取并处理数据"><a href="#爬取并处理数据" class="headerlink" title="爬取并处理数据"></a>爬取并处理数据</h3><p>参见 <a href="https://boyinthesun.cn/post/python-scrapy2/">https://boyinthesun.cn/post/python-scrapy2/</a></p><h3 id="绘制图表"><a href="#绘制图表" class="headerlink" title="绘制图表"></a>绘制图表</h3><pre class="line-numbers language-python"><code class="language-python"><span class="token keyword">import</span> pandas <span class="token keyword">as</span> pd<span class="token keyword">import</span> matplotlib<span class="token punctuation">.</span>pyplot <span class="token keyword">as</span> plt<span class="token comment" spellcheck="true"># 为了显示中文，需要更换字体</span>plt<span class="token punctuation">.</span>rcParams<span class="token punctuation">[</span><span class="token string">'font.family'</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">'sans-serif'</span><span class="token punctuation">]</span>plt<span class="token punctuation">.</span>rcParams<span class="token punctuation">[</span><span class="token string">'font.sans-serif'</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">'SimHei'</span><span class="token punctuation">]</span>path <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">'data\\data_dongcheng.csv'</span><span class="token punctuation">,</span> <span class="token string">'data\\data_xicheng.csv'</span><span class="token punctuation">,</span> <span class="token string">'data\\data_haidian.csv'</span><span class="token punctuation">,</span> <span class="token string">'data\\data_chaoyang.csv'</span><span class="token punctuation">]</span>data <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token keyword">for</span> i <span class="token keyword">in</span> range<span class="token punctuation">(</span>len<span class="token punctuation">(</span>path<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    data<span class="token punctuation">.</span>append<span class="token punctuation">(</span>pd<span class="token punctuation">.</span>read_csv<span class="token punctuation">(</span>path<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">,</span> usecols<span class="token operator">=</span><span class="token punctuation">[</span><span class="token string">'总价'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token string">'总价'</span><span class="token punctuation">]</span><span class="token punctuation">)</span>  <span class="token comment" spellcheck="true"># 仅读取'总价'列，并存入列表</span>plt<span class="token punctuation">.</span>title<span class="token punctuation">(</span><span class="token string">'北京东西海朝二手房总价分析'</span><span class="token punctuation">,</span> fontsize<span class="token operator">=</span><span class="token number">20</span><span class="token punctuation">)</span>  <span class="token comment" spellcheck="true"># 标题，并设定字号大小</span>labels <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">'东城'</span><span class="token punctuation">,</span> <span class="token string">'西城'</span><span class="token punctuation">,</span> <span class="token string">'海淀'</span><span class="token punctuation">,</span> <span class="token string">'朝阳'</span><span class="token punctuation">]</span>  <span class="token comment" spellcheck="true"># 设置行标题</span>plt<span class="token punctuation">.</span>boxplot<span class="token punctuation">(</span>data<span class="token punctuation">,</span> labels<span class="token operator">=</span>labels<span class="token punctuation">)</span>plt<span class="token punctuation">.</span>show<span class="token punctuation">(</span><span class="token punctuation">)</span> <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="结果展示"><a href="#结果展示" class="headerlink" title="结果展示"></a>结果展示</h2><p><img src="https://boyinthesun.oss-cn-beijing.aliyuncs.com/img/python-matplotlib.png?x-oss-process=style/watermark" alt=""></p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> 编程实例 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
            <tag> 学堂在线《Python数据分析与可视化》 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Scrapy实例————爬取链家二手房数据，并处理后存入csv</title>
      <link href="/post/python-scrapy2/"/>
      <url>/post/python-scrapy2/</url>
      
        <content type="html"><![CDATA[<h2 id="目标"><a href="#目标" class="headerlink" title="目标"></a>目标</h2><p>通过<code>Scrapy</code>爬取链家二手房数据，地址 <a href="https://bj.lianjia.com/ershoufang/" target="_blank" rel="noopener">https://bj.lianjia.com/ershoufang/</a> ，并对爬取到的数据进行处理，存储到csv文件中。</p><h2 id="环境"><a href="#环境" class="headerlink" title="环境"></a>环境</h2><p>博主是在<code>Windows</code>平台使用<code>PyCharm</code>基于<code>Python 3.7</code>和<code>Scrapy 2.0.1</code>编写爬虫，不赘述环境配置了。</p><h2 id="建立项目"><a href="#建立项目" class="headerlink" title="建立项目"></a>建立项目</h2><p>右键<code>Scrapy</code>文件夹，选择在终端中打开<br><img src="https://boyinthesun.oss-cn-beijing.aliyuncs.com/img/Python-scrapy(1).png?x-oss-process=style/watermark" alt=""><br>在终端中输入<code>scrapy startproject lianjiaershou</code>，其中<code>lianjiaershou</code>为项目名。</p><h3 id="更改items-py"><a href="#更改items-py" class="headerlink" title="更改items.py"></a>更改<code>items.py</code></h3><pre class="line-numbers language-python"><code class="language-python"><span class="token keyword">import</span> scrapy<span class="token comment" spellcheck="true"># 为增强可读性，直接以中文作为变量名</span><span class="token keyword">class</span> <span class="token class-name">MyItem</span><span class="token punctuation">(</span>scrapy<span class="token punctuation">.</span>Item<span class="token punctuation">)</span><span class="token punctuation">:</span>    标题 <span class="token operator">=</span> scrapy<span class="token punctuation">.</span>Field<span class="token punctuation">(</span><span class="token punctuation">)</span>    小区 <span class="token operator">=</span> scrapy<span class="token punctuation">.</span>Field<span class="token punctuation">(</span><span class="token punctuation">)</span>    区域 <span class="token operator">=</span> scrapy<span class="token punctuation">.</span>Field<span class="token punctuation">(</span><span class="token punctuation">)</span>    户型_室 <span class="token operator">=</span> scrapy<span class="token punctuation">.</span>Field<span class="token punctuation">(</span><span class="token punctuation">)</span>    户型_厅 <span class="token operator">=</span> scrapy<span class="token punctuation">.</span>Field<span class="token punctuation">(</span><span class="token punctuation">)</span>    面积 <span class="token operator">=</span> scrapy<span class="token punctuation">.</span>Field<span class="token punctuation">(</span><span class="token punctuation">)</span>    朝向 <span class="token operator">=</span> scrapy<span class="token punctuation">.</span>Field<span class="token punctuation">(</span><span class="token punctuation">)</span>    装修 <span class="token operator">=</span> scrapy<span class="token punctuation">.</span>Field<span class="token punctuation">(</span><span class="token punctuation">)</span>    楼层 <span class="token operator">=</span> scrapy<span class="token punctuation">.</span>Field<span class="token punctuation">(</span><span class="token punctuation">)</span>    建成年份 <span class="token operator">=</span> scrapy<span class="token punctuation">.</span>Field<span class="token punctuation">(</span><span class="token punctuation">)</span>    建筑结构 <span class="token operator">=</span> scrapy<span class="token punctuation">.</span>Field<span class="token punctuation">(</span><span class="token punctuation">)</span>    关注人数 <span class="token operator">=</span> scrapy<span class="token punctuation">.</span>Field<span class="token punctuation">(</span><span class="token punctuation">)</span>    已发布日 <span class="token operator">=</span> scrapy<span class="token punctuation">.</span>Field<span class="token punctuation">(</span><span class="token punctuation">)</span>    总价 <span class="token operator">=</span> scrapy<span class="token punctuation">.</span>Field<span class="token punctuation">(</span><span class="token punctuation">)</span>    单价 <span class="token operator">=</span> scrapy<span class="token punctuation">.</span>Field<span class="token punctuation">(</span><span class="token punctuation">)</span>    满二 <span class="token operator">=</span> scrapy<span class="token punctuation">.</span>Field<span class="token punctuation">(</span><span class="token punctuation">)</span>    满五 <span class="token operator">=</span> scrapy<span class="token punctuation">.</span>Field<span class="token punctuation">(</span><span class="token punctuation">)</span>    近地铁 <span class="token operator">=</span> scrapy<span class="token punctuation">.</span>Field<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="分析网页"><a href="#分析网页" class="headerlink" title="分析网页"></a>分析网页</h3><p>复制三个<code>标题</code>的xpath，不难找到规律：</p><pre class="line-numbers language-xpath"><code class="language-xpath">/html/body/div[4]/div[1]/ul/li[1]/div[1]/div[1]/a/html/body/div[4]/div[1]/ul/li[2]/div[1]/div[1]/a/html/body/div[4]/div[1]/ul/li[3]/div[1]/div[1]/a<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>只需迭代爬取每个li区块即可。</p><h3 id="新建并更改spider-py"><a href="#新建并更改spider-py" class="headerlink" title="新建并更改spider.py"></a>新建并更改<code>spider.py</code></h3><p>在<code>spider</code>文件夹中新建<code>spider.py</code>，并键入：</p><pre class="line-numbers language-python"><code class="language-python"><span class="token comment" spellcheck="true"># 为了方便更改，设置全局变量</span>page <span class="token operator">=</span> <span class="token number">100</span>  <span class="token comment" spellcheck="true"># 爬取页数</span>area <span class="token operator">=</span> <span class="token string">"haidian"</span>  <span class="token comment" spellcheck="true"># 爬取城区</span><span class="token keyword">import</span> scrapy<span class="token keyword">from</span> lianjiaershou<span class="token punctuation">.</span>items <span class="token keyword">import</span> MyItem<span class="token keyword">class</span> <span class="token class-name">mySpider</span><span class="token punctuation">(</span>scrapy<span class="token punctuation">.</span>spiders<span class="token punctuation">.</span>Spider<span class="token punctuation">)</span><span class="token punctuation">:</span>    name <span class="token operator">=</span> <span class="token string">"lianjiaershou"</span>    allowed_domains <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">"bj.lianjia.com"</span><span class="token punctuation">]</span>    start_urls <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>    <span class="token comment" spellcheck="true"># 依次将第1页到第page页放入开始连接队列</span>    <span class="token keyword">for</span> i <span class="token keyword">in</span> range<span class="token punctuation">(</span><span class="token number">1</span> <span class="token punctuation">,</span> page<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        start_urls<span class="token punctuation">.</span>append<span class="token punctuation">(</span><span class="token string">"https://bj.lianjia.com/ershoufang/{}/pg{}/"</span><span class="token punctuation">.</span>format<span class="token punctuation">(</span>area<span class="token punctuation">,</span> i<span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token keyword">def</span> <span class="token function">parse</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> response<span class="token punctuation">)</span><span class="token punctuation">:</span>        item <span class="token operator">=</span> MyItem <span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token keyword">for</span> each <span class="token keyword">in</span> response<span class="token punctuation">.</span>xpath<span class="token punctuation">(</span><span class="token string">"/html/body/div[4]/div[1]/ul/*"</span><span class="token punctuation">)</span><span class="token punctuation">:</span>            <span class="token comment" spellcheck="true"># item['城区'] = response.url.split('/')[-3]  # 如果你希望一次性爬取多个城区，可以使用该语句，并向start_urls列表添加多个城区的网址</span>            item<span class="token punctuation">[</span><span class="token string">'标题'</span><span class="token punctuation">]</span> <span class="token operator">=</span> each<span class="token punctuation">.</span>xpath<span class="token punctuation">(</span><span class="token string">"div/div[1]/a/text()"</span><span class="token punctuation">)</span><span class="token punctuation">.</span>extract<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>            item<span class="token punctuation">[</span><span class="token string">'小区'</span><span class="token punctuation">]</span> <span class="token operator">=</span> each<span class="token punctuation">.</span>xpath<span class="token punctuation">(</span><span class="token string">"div/div[2]/div/a[1]/text()"</span><span class="token punctuation">)</span><span class="token punctuation">.</span>extract<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>            item<span class="token punctuation">[</span><span class="token string">'区域'</span><span class="token punctuation">]</span> <span class="token operator">=</span> each<span class="token punctuation">.</span>xpath<span class="token punctuation">(</span><span class="token string">"div/div[2]/div/a[2]/text()"</span><span class="token punctuation">)</span><span class="token punctuation">.</span>extract<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>            <span class="token comment" spellcheck="true"># 由于信息以字符串形式存在，并以' | '分隔，故创建临时变量，分割字符串，存为列表</span>            temp <span class="token operator">=</span> each<span class="token punctuation">.</span>xpath<span class="token punctuation">(</span><span class="token string">"div/div[3]/div/text()"</span><span class="token punctuation">)</span><span class="token punctuation">.</span>extract<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>split<span class="token punctuation">(</span><span class="token string">' | '</span><span class="token punctuation">)</span>            <span class="token comment" spellcheck="true"># temp[0]的格式是n室m厅</span>            item<span class="token punctuation">[</span><span class="token string">'户型_室'</span><span class="token punctuation">]</span> <span class="token operator">=</span> temp<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>            item<span class="token punctuation">[</span><span class="token string">'户型_厅'</span><span class="token punctuation">]</span> <span class="token operator">=</span> temp<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">2</span><span class="token punctuation">]</span>            item<span class="token punctuation">[</span><span class="token string">'面积'</span><span class="token punctuation">]</span> <span class="token operator">=</span> temp<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token operator">-</span><span class="token number">2</span><span class="token punctuation">]</span>  <span class="token comment" spellcheck="true"># 去除汉字'平米'</span>            item<span class="token punctuation">[</span><span class="token string">'朝向'</span><span class="token punctuation">]</span> <span class="token operator">=</span> temp<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span>            item<span class="token punctuation">[</span><span class="token string">'装修'</span><span class="token punctuation">]</span> <span class="token operator">=</span> temp<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span>            item<span class="token punctuation">[</span><span class="token string">'楼层'</span><span class="token punctuation">]</span> <span class="token operator">=</span> temp<span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">]</span>            item<span class="token punctuation">[</span><span class="token string">'建成年份'</span><span class="token punctuation">]</span> <span class="token operator">=</span> temp<span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token operator">-</span><span class="token number">2</span><span class="token punctuation">]</span>  <span class="token comment" spellcheck="true"># 去除汉字'年建'</span>            <span class="token keyword">if</span> len<span class="token punctuation">(</span>temp<span class="token punctuation">)</span> <span class="token operator">&lt;=</span> <span class="token number">6</span> <span class="token operator">or</span> temp<span class="token punctuation">[</span><span class="token number">6</span><span class="token punctuation">]</span><span class="token operator">==</span><span class="token string">'暂无数据'</span><span class="token punctuation">:</span>                item<span class="token punctuation">[</span><span class="token string">'建筑结构'</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">'N/A'</span>            <span class="token keyword">else</span><span class="token punctuation">:</span>                item<span class="token punctuation">[</span><span class="token string">'建筑结构'</span><span class="token punctuation">]</span> <span class="token operator">=</span> temp<span class="token punctuation">[</span><span class="token number">6</span><span class="token punctuation">]</span>            temp <span class="token operator">=</span> each<span class="token punctuation">.</span>xpath<span class="token punctuation">(</span><span class="token string">"div/div[4]/text()"</span><span class="token punctuation">)</span><span class="token punctuation">.</span>extract<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>split<span class="token punctuation">(</span><span class="token string">' / '</span><span class="token punctuation">)</span>            item<span class="token punctuation">[</span><span class="token string">'关注人数'</span><span class="token punctuation">]</span> <span class="token operator">=</span> temp<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token operator">-</span><span class="token number">3</span><span class="token punctuation">]</span>            <span class="token comment" spellcheck="true"># 日期格式可分为 n天以前前 n个月以前 一年前</span>            <span class="token keyword">if</span> temp<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token string">'天'</span><span class="token punctuation">:</span>                item<span class="token punctuation">[</span><span class="token string">'已发布日'</span><span class="token punctuation">]</span> <span class="token operator">=</span> int<span class="token punctuation">(</span>temp<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span>            <span class="token keyword">elif</span> temp<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token string">'个'</span><span class="token punctuation">:</span>                item<span class="token punctuation">[</span><span class="token string">'已发布日'</span><span class="token punctuation">]</span> <span class="token operator">=</span> int<span class="token punctuation">(</span>temp<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token number">30</span>            <span class="token keyword">else</span><span class="token punctuation">:</span>                item<span class="token punctuation">[</span><span class="token string">'已发布日'</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">360</span>            <span class="token keyword">if</span> each<span class="token punctuation">.</span>xpath<span class="token punctuation">(</span><span class="token string">"div/div[5]/span[@class='taxfree']/text()"</span><span class="token punctuation">)</span><span class="token punctuation">.</span>extract<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>                item<span class="token punctuation">[</span><span class="token string">'满五'</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token boolean">True</span>            <span class="token keyword">else</span><span class="token punctuation">:</span>                item<span class="token punctuation">[</span><span class="token string">'满五'</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token boolean">False</span>            <span class="token keyword">if</span> each<span class="token punctuation">.</span>xpath<span class="token punctuation">(</span><span class="token string">"div/div[5]/span[@class='five']/text()"</span><span class="token punctuation">)</span><span class="token punctuation">.</span>extract<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>                item<span class="token punctuation">[</span><span class="token string">'满二'</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token boolean">True</span>            <span class="token keyword">else</span><span class="token punctuation">:</span>                item<span class="token punctuation">[</span><span class="token string">'满二'</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token boolean">False</span>            <span class="token keyword">if</span> each<span class="token punctuation">.</span>xpath<span class="token punctuation">(</span><span class="token string">"div/div[5]/span[@class='subway']/text()"</span><span class="token punctuation">)</span><span class="token punctuation">.</span>extract<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>                item<span class="token punctuation">[</span><span class="token string">'近地铁'</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token boolean">True</span>            <span class="token keyword">else</span><span class="token punctuation">:</span>                item<span class="token punctuation">[</span><span class="token string">'近地铁'</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token boolean">False</span>            item<span class="token punctuation">[</span><span class="token string">'总价'</span><span class="token punctuation">]</span> <span class="token operator">=</span> each<span class="token punctuation">.</span>xpath<span class="token punctuation">(</span><span class="token string">"div/div[6]/div[1]/span/text()"</span><span class="token punctuation">)</span><span class="token punctuation">.</span>extract<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>            item<span class="token punctuation">[</span><span class="token string">'单价'</span><span class="token punctuation">]</span> <span class="token operator">=</span> each<span class="token punctuation">.</span>xpath<span class="token punctuation">(</span><span class="token string">"div/div[6]/div[2]/span/text()"</span><span class="token punctuation">)</span><span class="token punctuation">.</span>extract<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">:</span><span class="token operator">-</span><span class="token number">4</span><span class="token punctuation">]</span>  <span class="token comment" spellcheck="true"># 去除汉字'单价*元/平米'</span>            <span class="token keyword">yield</span> item<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="更改setting-py"><a href="#更改setting-py" class="headerlink" title="更改setting.py"></a>更改<code>setting.py</code></h3><pre class="line-numbers language-python"><code class="language-python">BOT_NAME <span class="token operator">=</span> <span class="token string">'lianjiaershou'</span>SPIDER_MODULES <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">'lianjiaershou.spiders'</span><span class="token punctuation">]</span>NEWSPIDER_MODULE <span class="token operator">=</span> <span class="token string">'lianjiaershou.spiders'</span><span class="token comment" spellcheck="true"># 不遵守机器人协议</span>ROBOTSTXT_OBEY <span class="token operator">=</span> <span class="token boolean">False</span><span class="token comment" spellcheck="true"># 客户端伪装</span>USER_AGENT <span class="token operator">=</span> <span class="token string">'Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/75.0.3770.80 Safari/537.36'</span><span class="token comment" spellcheck="true"># 防止ip被封，每页延迟1s爬取</span>DOWNLOAD_DELAY <span class="token operator">=</span> <span class="token number">1</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="新建begin-py"><a href="#新建begin-py" class="headerlink" title="新建begin.py"></a>新建<code>begin.py</code></h3><p><img src="https://boyinthesun.oss-cn-beijing.aliyuncs.com/img/Python-scrapy(2).png?x-oss-process=style/watermark" alt=""><br>在项目文件夹中新建<code>begin.py</code>，内容为：</p><pre class="line-numbers language-python"><code class="language-python"><span class="token keyword">from</span> scrapy <span class="token keyword">import</span> cmdline<span class="token keyword">from</span> lianjiaershou<span class="token punctuation">.</span>spiders <span class="token keyword">import</span> spider  <span class="token comment" spellcheck="true"># 用于从linajiaershou/spiders/spider.py读取area变量，若该处报错请检查文件是否存在</span><span class="token keyword">import</span> os<span class="token keyword">if</span> os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>exists<span class="token punctuation">(</span><span class="token string">"data\data_{}.csv"</span><span class="token punctuation">.</span>format<span class="token punctuation">(</span>spider<span class="token punctuation">.</span>area<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    os<span class="token punctuation">.</span>remove<span class="token punctuation">(</span><span class="token string">"data\data_{}.csv"</span><span class="token punctuation">.</span>format<span class="token punctuation">(</span>spider<span class="token punctuation">.</span>area<span class="token punctuation">)</span><span class="token punctuation">)</span>  <span class="token comment" spellcheck="true"># 为了防止文件已存在导致索引和数据重复，先删除将要生成的文件</span>cmdline<span class="token punctuation">.</span>execute<span class="token punctuation">(</span><span class="token string">"scrapy crawl lianjiaershou -o data\data_{}.csv -t csv"</span><span class="token punctuation">.</span>format<span class="token punctuation">(</span>spider<span class="token punctuation">.</span>area<span class="token punctuation">)</span><span class="token punctuation">.</span>split<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>其中<code>lianjiaershou</code>为爬虫名（无须与项目名相同）。目的是为了方便运行爬虫。（忽略图中代码内容，只看项目结构就好，只是博主懒得再重新截图了）<br>这里直接使用scrapy保存到csv，并且以爬取的区域进行命名。</p><h2 id="运行爬虫"><a href="#运行爬虫" class="headerlink" title="运行爬虫"></a>运行爬虫</h2><p>运行<code>begin.py</code>，成功爬取到数据。这里只列举部分。</p><pre class="line-numbers language-csv"><code class="language-csv">关注人数,区域,单价,小区,已发布日,建成年份,建筑结构,总价,户型_厅,户型_室,朝向,标题,楼层,满二,满五,装修,近地铁,面积119,四季青,106072,美丽园 ,360,2000,板楼,1160,1,2,南 北,美丽园小区一层带花园两居室，位置安静临水系,底层(共6层),False,True,简装,True,109.36147,厂洼,99173,厂洼小区 ,360,1990,塔楼,719,1,3,西南,厂洼小区  西南向三居 带电梯 采光好,中楼层(共20层),True,False,简装,True,72.572,甘家口,93214,国兴家园 ,360,2000,塔楼,1390,1,3,东南,东南向三居室，户型方正，随时可看,低楼层(共24层),False,True,简装,True,149.12149,玉泉路,61400,玉海园二里 ,360,1998,板塔结合,610,2,2,西北,海淀玉泉路 玉海园电梯两居室 满五年商品房 诚意出售,高楼层(共11层),False,True,简装,True,99.35197,田村,78543,雅世合金公寓 ,360,2011,板塔结合,709,1,2,东 西,雅世合金 十大科技系统居住舒适度高 户型好,中楼层(共9层),False,True,精装,True,90.27<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="备注"><a href="#备注" class="headerlink" title="备注"></a>备注</h2><p>由于通过命令行写csv默认是<code>a</code>模式，所以如果多次运行会导致索引和数据重复。该问题已解决，已经修改代码。也可通过<code>pipelines.py</code>实现。</p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> 编程实例 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
            <tag> 学堂在线《Python数据分析与可视化》 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>pyecharts实例————绘制中国各省高考人数和大学数量可视化地图</title>
      <link href="/post/python-pyecharts/"/>
      <url>/post/python-pyecharts/</url>
      
        <content type="html"><![CDATA[<h2 id="目标"><a href="#目标" class="headerlink" title="目标"></a>目标</h2><p>通过提供的csv文件，利用<code>pyecharts(v1.7)</code>，在中国地图上展示各省的高考人数和大学数量。</p><h2 id="分析csv文件"><a href="#分析csv文件" class="headerlink" title="分析csv文件"></a>分析csv文件</h2><p>由于数据较少，直接在此列出</p><pre class="line-numbers language-csv"><code class="language-csv">,高考人数,,大学数量,省/市,2017年,2016年,211&985大学数量,公办本科大学数量河南,86.3万,82万,1,37广东,75.7万,73.3万,4,41山东,58.3万,60.2万,3,44四川,58.3万,57.13万,5,34安徽,49.9万,50.99万,3,30河北,43.6万,42.31万,0,36贵州,41.2万,37.38万,1,19湖南,41.1万,40.16万,3,31广西,36.5万,33万,1,24江西,36.5万,36.06万,1,23湖北,36.2万,36.14万,1,36江苏,33万,36.04万,11,45陕西,31.9万,32.8万,1,34山西,31.7万,33.9万,1,22云南,29.3万,28万,1,22浙江,29.1万,30.74万,1,32甘肃,28.5万,29.6万,1,17重庆,21.1万,24.88万,2,17辽宁,20.8万,21.82万,4,4内蒙古,19.8万,20.11万,1,14福建,18.8万,17.5万,2,22黑龙江,18.8万,19.7万,4,26新疆,18.4万,16.61万,2,13吉林,14.3万,14.85万,3,25宁夏,6.9万,6.9万,1,4北京,6万,6.12万,26,60海南,5.7万,6.04万,1,5天津,5.7万,6万,4,18上海,5万,5.1万,9,31青海,4.6万,4.5万,1,3西藏,2.8万,2.4万,1,3<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><strong>数据从第三行开始</strong>，应以第二行作为真正的表头。<br>对于第二三列中<code>某某万</code>的表述，需进行处理再使用，因为pyecharts是无法将<code>86.3万</code>识别为数的。</p><h2 id="求解"><a href="#求解" class="headerlink" title="求解"></a>求解</h2><p>具体请见注释</p><pre class="line-numbers language-python"><code class="language-python"><span class="token keyword">from</span> pyecharts <span class="token keyword">import</span> options <span class="token keyword">as</span> opts<span class="token keyword">from</span> pyecharts<span class="token punctuation">.</span>charts <span class="token keyword">import</span> Map<span class="token keyword">import</span> pandas <span class="token keyword">as</span> pdFileNameStr <span class="token operator">=</span> <span class="token string">'dataset.csv'</span><span class="token comment" spellcheck="true"># 读取csv，以第二行作为表头</span>df <span class="token operator">=</span> pd<span class="token punctuation">.</span>read_csv<span class="token punctuation">(</span>FileNameStr<span class="token punctuation">,</span> encoding<span class="token operator">=</span><span class="token string">'utf-8'</span><span class="token punctuation">,</span> header<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true"># 新建列表，并将已删除'万'字的数据存入</span>num_2016 <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token keyword">for</span> row <span class="token keyword">in</span> df<span class="token punctuation">[</span><span class="token string">'2016年'</span><span class="token punctuation">]</span><span class="token punctuation">:</span>    num_2016<span class="token punctuation">.</span>append<span class="token punctuation">(</span>row<span class="token punctuation">.</span>strip<span class="token punctuation">(</span><span class="token string">'万'</span><span class="token punctuation">)</span><span class="token punctuation">)</span>num_2017 <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token keyword">for</span> row <span class="token keyword">in</span> df<span class="token punctuation">[</span><span class="token string">'2017年'</span><span class="token punctuation">]</span><span class="token punctuation">:</span>    num_2017<span class="token punctuation">.</span>append<span class="token punctuation">(</span>row<span class="token punctuation">.</span>strip<span class="token punctuation">(</span><span class="token string">'万'</span><span class="token punctuation">)</span><span class="token punctuation">)</span>map0 <span class="token operator">=</span> Map<span class="token punctuation">(</span><span class="token punctuation">)</span>map0<span class="token punctuation">.</span>set_global_opts<span class="token punctuation">(</span>        title_opts<span class="token operator">=</span>opts<span class="token punctuation">.</span>TitleOpts<span class="token punctuation">(</span>title<span class="token operator">=</span><span class="token string">"全国各省份高考人数"</span><span class="token punctuation">,</span> subtitle<span class="token operator">=</span><span class="token string">"2016年至2017年"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>  <span class="token comment" spellcheck="true"># 表格标题</span>        visualmap_opts<span class="token operator">=</span>opts<span class="token punctuation">.</span>VisualMapOpts<span class="token punctuation">(</span>range_text<span class="token operator">=</span><span class="token punctuation">[</span><span class="token string">'单位：万人\n'</span><span class="token punctuation">]</span><span class="token punctuation">,</span> min_<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">,</span> max_<span class="token operator">=</span><span class="token number">80</span><span class="token punctuation">)</span><span class="token punctuation">,</span>  <span class="token comment" spellcheck="true"># 设置图例文本和最大值最小值</span>        legend_opts<span class="token operator">=</span>opts<span class="token punctuation">.</span>LegendOpts<span class="token punctuation">(</span>selected_mode<span class="token operator">=</span><span class="token string">'single'</span><span class="token punctuation">)</span>  <span class="token comment" spellcheck="true"># 设置图例选择模式为单选</span><span class="token punctuation">)</span>map0<span class="token punctuation">.</span>add<span class="token punctuation">(</span><span class="token string">"2016年"</span><span class="token punctuation">,</span> <span class="token punctuation">[</span>list<span class="token punctuation">(</span>z<span class="token punctuation">)</span> <span class="token keyword">for</span> z <span class="token keyword">in</span> zip<span class="token punctuation">(</span>list<span class="token punctuation">(</span>df<span class="token punctuation">[</span><span class="token string">'省/市'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span> num_2016<span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token string">"china"</span><span class="token punctuation">)</span>  <span class="token comment" spellcheck="true"># 添加数据</span>map0<span class="token punctuation">.</span>add<span class="token punctuation">(</span><span class="token string">"2017年"</span><span class="token punctuation">,</span> <span class="token punctuation">[</span>list<span class="token punctuation">(</span>z<span class="token punctuation">)</span> <span class="token keyword">for</span> z <span class="token keyword">in</span> zip<span class="token punctuation">(</span>list<span class="token punctuation">(</span>df<span class="token punctuation">[</span><span class="token string">'省/市'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span> num_2017<span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token string">"china"</span><span class="token punctuation">)</span>  <span class="token comment" spellcheck="true"># 添加数据</span>map0<span class="token punctuation">.</span>render<span class="token punctuation">(</span><span class="token string">"map0.html"</span><span class="token punctuation">)</span>  <span class="token comment" spellcheck="true"># 导出地图</span>map1 <span class="token operator">=</span> Map<span class="token punctuation">(</span><span class="token punctuation">)</span>map1<span class="token punctuation">.</span>set_global_opts<span class="token punctuation">(</span>        title_opts<span class="token operator">=</span>opts<span class="token punctuation">.</span>TitleOpts<span class="token punctuation">(</span>title<span class="token operator">=</span><span class="token string">"全国各省份大学数量"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>        visualmap_opts<span class="token operator">=</span>opts<span class="token punctuation">.</span>VisualMapOpts<span class="token punctuation">(</span>                <span class="token comment" spellcheck="true"># 由于数据分布较为集中，线性无法形象反映，故设置为分段显示</span>                is_piecewise<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">,</span>                <span class="token comment" spellcheck="true"># 自定义分段区间、描述和颜色</span>                pieces<span class="token operator">=</span><span class="token punctuation">[</span>                        <span class="token punctuation">{</span><span class="token string">"min"</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token string">"max"</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token string">"label"</span><span class="token punctuation">:</span> <span class="token string">"0所"</span><span class="token punctuation">,</span> <span class="token string">"color"</span><span class="token punctuation">:</span> <span class="token string">"#FFFFFF"</span><span class="token punctuation">}</span><span class="token punctuation">,</span>                         <span class="token punctuation">{</span><span class="token string">"min"</span><span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token string">"max"</span><span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token string">"label"</span><span class="token punctuation">:</span> <span class="token string">"1所"</span><span class="token punctuation">,</span> <span class="token string">"color"</span><span class="token punctuation">:</span> <span class="token string">"#FFEBCD"</span><span class="token punctuation">}</span><span class="token punctuation">,</span>                        <span class="token punctuation">{</span><span class="token string">"min"</span><span class="token punctuation">:</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token string">"max"</span><span class="token punctuation">:</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token string">"label"</span><span class="token punctuation">:</span> <span class="token string">"2所"</span><span class="token punctuation">,</span> <span class="token string">"color"</span><span class="token punctuation">:</span> <span class="token string">"#FFA07A"</span><span class="token punctuation">}</span><span class="token punctuation">,</span>                        <span class="token punctuation">{</span><span class="token string">"min"</span><span class="token punctuation">:</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token string">"max"</span><span class="token punctuation">:</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token string">"label"</span><span class="token punctuation">:</span> <span class="token string">"3-5所"</span><span class="token punctuation">,</span> <span class="token string">"color"</span><span class="token punctuation">:</span> <span class="token string">"#EE5C42"</span><span class="token punctuation">}</span><span class="token punctuation">,</span>                        <span class="token punctuation">{</span><span class="token string">"min"</span><span class="token punctuation">:</span> <span class="token number">6</span><span class="token punctuation">,</span> <span class="token string">"max"</span><span class="token punctuation">:</span> <span class="token number">10</span><span class="token punctuation">,</span> <span class="token string">"label"</span><span class="token punctuation">:</span> <span class="token string">"6-10所"</span><span class="token punctuation">,</span> <span class="token string">"color"</span><span class="token punctuation">:</span> <span class="token string">"#CD3333"</span><span class="token punctuation">}</span><span class="token punctuation">,</span>                        <span class="token punctuation">{</span><span class="token string">"min"</span><span class="token punctuation">:</span> <span class="token number">11</span><span class="token punctuation">,</span> <span class="token string">"max"</span><span class="token punctuation">:</span> <span class="token number">20</span><span class="token punctuation">,</span> <span class="token string">"label"</span><span class="token punctuation">:</span> <span class="token string">"11-20所"</span><span class="token punctuation">,</span> <span class="token string">"color"</span><span class="token punctuation">:</span> <span class="token string">"#A52A2A"</span><span class="token punctuation">}</span><span class="token punctuation">,</span>                        <span class="token punctuation">{</span><span class="token string">"min"</span><span class="token punctuation">:</span> <span class="token number">21</span><span class="token punctuation">,</span> <span class="token string">"label"</span><span class="token punctuation">:</span> <span class="token string">"20所以上"</span><span class="token punctuation">,</span> <span class="token string">"color"</span><span class="token punctuation">:</span> <span class="token string">"#8B0000"</span><span class="token punctuation">}</span>  # 不指定 max，表示 max 为无穷大                <span class="token punctuation">]</span>        <span class="token punctuation">)</span><span class="token punctuation">)</span>map1<span class="token punctuation">.</span>add<span class="token punctuation">(</span>        <span class="token string">"211&amp;985大学数量"</span><span class="token punctuation">,</span>        <span class="token punctuation">[</span>list<span class="token punctuation">(</span>z<span class="token punctuation">)</span> <span class="token keyword">for</span> z <span class="token keyword">in</span> zip<span class="token punctuation">(</span>list<span class="token punctuation">(</span>df<span class="token punctuation">[</span><span class="token string">'省/市'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span> list<span class="token punctuation">(</span>df<span class="token punctuation">[</span><span class="token string">'211&amp;985大学数量'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">,</span>        <span class="token string">"china"</span><span class="token punctuation">,</span>        is_map_symbol_show<span class="token operator">=</span><span class="token boolean">False</span>  <span class="token comment" spellcheck="true"># 不显示省会的小红点</span><span class="token punctuation">)</span>map1<span class="token punctuation">.</span>render<span class="token punctuation">(</span><span class="token string">"map1.html"</span><span class="token punctuation">)</span>map2 <span class="token operator">=</span> Map<span class="token punctuation">(</span><span class="token punctuation">)</span>map2<span class="token punctuation">.</span>set_global_opts<span class="token punctuation">(</span>        title_opts<span class="token operator">=</span>opts<span class="token punctuation">.</span>TitleOpts<span class="token punctuation">(</span>title<span class="token operator">=</span><span class="token string">"全国各省份大学数量"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>        visualmap_opts<span class="token operator">=</span>opts<span class="token punctuation">.</span>VisualMapOpts<span class="token punctuation">(</span>min_<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">,</span> max_<span class="token operator">=</span><span class="token number">60</span><span class="token punctuation">)</span><span class="token punctuation">)</span>map2<span class="token punctuation">.</span>add<span class="token punctuation">(</span><span class="token string">"公办本科大学数量"</span><span class="token punctuation">,</span>         <span class="token punctuation">[</span>list<span class="token punctuation">(</span>z<span class="token punctuation">)</span> <span class="token keyword">for</span> z <span class="token keyword">in</span> zip<span class="token punctuation">(</span>list<span class="token punctuation">(</span>df<span class="token punctuation">[</span><span class="token string">'省/市'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span> list<span class="token punctuation">(</span>df<span class="token punctuation">[</span><span class="token string">'公办本科大学数量'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">,</span>         <span class="token string">"china"</span><span class="token punctuation">,</span>         is_map_symbol_show<span class="token operator">=</span><span class="token boolean">False</span>  <span class="token comment" spellcheck="true"># 不显示省会的小红点</span><span class="token punctuation">)</span>map2<span class="token punctuation">.</span>render<span class="token punctuation">(</span><span class="token string">"map2.html"</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="结果展示"><a href="#结果展示" class="headerlink" title="结果展示"></a>结果展示</h2><h3 id="map0"><a href="#map0" class="headerlink" title="map0"></a>map0</h3><p><img src="https://boyinthesun.oss-cn-beijing.aliyuncs.com/img/python-pyecharts(1).PNG?x-oss-process=style/watermark" alt=""><br><img src="https://boyinthesun.oss-cn-beijing.aliyuncs.com/img/python-pyecharts(2).PNG?x-oss-process=style/watermark" alt=""></p><h3 id="map1"><a href="#map1" class="headerlink" title="map1"></a>map1</h3><p><img src="https://boyinthesun.oss-cn-beijing.aliyuncs.com/img/python-pyecharts(3).PNG?x-oss-process=style/watermark" alt=""></p><h3 id="map2"><a href="#map2" class="headerlink" title="map2"></a>map2</h3><p><img src="https://boyinthesun.oss-cn-beijing.aliyuncs.com/img/python-pyecharts(4).PNG?x-oss-process=style/watermark" alt=""></p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> 编程实例 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
            <tag> 学堂在线《Python数据分析与可视化》 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Windows启动pycharm报错：Failed to load JVM DLL</title>
      <link href="/post/error-pycharm/"/>
      <url>/post/error-pycharm/</url>
      
        <content type="html"><![CDATA[<h2 id="问题出现"><a href="#问题出现" class="headerlink" title="问题出现"></a>问题出现</h2><p>安装好pycharm后，启动主程序时报错：</p><pre><code>Failed to load JVM DLL C:\Program Files\JetBrain.s＼PyCharm Community Edition 2020.1.1\jbr\ \bin\server\jvm.dll If you already have a 64-bit JDK installed, define a JAVA_HOME variable in Computer &gt; System Properties &gt; System Settings &gt; Environment Variables. </code></pre><p><img src="https://boyinthesun.oss-cn-beijing.aliyuncs.com/img/error-pycharm.png?x-oss-process=style/watermark" alt=""></p><h2 id="通用解决方案"><a href="#通用解决方案" class="headerlink" title="通用解决方案"></a>通用解决方案</h2><p>经查阅资料，发现是因为系统缺少<code>Microsoft Visual C++ 2010 Redistributable Package</code><br>于是进行安装：</p><blockquote><p>32 bit: <a href="http://www.microsoft.com/download/en/details.aspx?id=5555" target="_blank" rel="noopener">http://www.microsoft.com/download/en/details.aspx?id=5555</a><br>64 bit: <a href="http://www.microsoft.com/download/en/details.aspx?id=14632" target="_blank" rel="noopener">http://www.microsoft.com/download/en/details.aspx?id=14632</a><br>参考网址：<a href="https://www.cnblogs.com/whu-2017/p/8984038.html" target="_blank" rel="noopener">https://www.cnblogs.com/whu-2017/p/8984038.html</a></p></blockquote><h2 id="我的解决方案"><a href="#我的解决方案" class="headerlink" title="我的解决方案"></a>我的解决方案</h2><p>我正确安装<code>Microsoft Visual C++ 2010 Redistributable Package</code>又重启后，<strong>相同错误依然存在</strong>。<br>于是尝试<strong>以管理员身份运行主程序</strong>，程序正常运行。<br>目前未知导致此问题的原因。<br>为了方便，你也可以更改快捷方式的选项，使其自动以管理员身份运行。</p><h2 id="其他解决方案"><a href="#其他解决方案" class="headerlink" title="其他解决方案"></a>其他解决方案</h2><p>博主未尝试该方案，请自行判断。</p><blockquote><p>1.下载JDK_8.0.1310.11_32bit；（下载链接：<a href="https://pan.baidu.com/s/16Wsq3S1isYAHLIPEJujymw" target="_blank" rel="noopener">https://pan.baidu.com/s/16Wsq3S1isYAHLIPEJujymw</a> 密码：hf2n）<br>2.配置环境变量：JAVA_HOME；<br>3.重启电脑让配置的环境变量生效；<br>4.运行PyCharm，问题解决。<br>————————————————<br>版权声明：本文为CSDN博主「望见明月」的原创文章，遵循CC 4.0 BY-SA版权协议，转载请附上原文出处链接及本声明。<br>原文链接：<a href="https://blog.csdn.net/u013751642/article/details/82659091" target="_blank" rel="noopener">https://blog.csdn.net/u013751642/article/details/82659091</a></p></blockquote><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> 踩坑 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Windows </tag>
            
            <tag> python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>通过高级启动拯救损坏的Windows10系统</title>
      <link href="/post/win10-advanced-startup/"/>
      <url>/post/win10-advanced-startup/</url>
      
        <content type="html"><![CDATA[<h2 id="进入安全模式"><a href="#进入安全模式" class="headerlink" title="进入安全模式"></a>进入安全模式</h2><p><img src="https://boyinthesun.oss-cn-beijing.aliyuncs.com/img/win10-advanced-startup(2).png?x-oss-process=style/watermark" alt=""><br>Windows10自发布以来，各种bug从未间断，系统损坏也是常有的事。如果你随身携带pe系统，那么无需阅读此文。<br>拯救的第一步就是<strong>进入Win10高级启动</strong>，一般的，如果系统损坏，会<strong>自动进入</strong>，如果没有自动进入，可以<strong>连续异常关机</strong>（按电源键七秒）<strong>三次</strong>。如果你闲来无事，可通过<code>Windows设置-&gt;更新和安全-&gt;恢复-&gt;高级启动-&gt;立即重新启动</code>进入。<br><img src="https://boyinthesun.oss-cn-beijing.aliyuncs.com/img/win10-advanced-startup(1).png?x-oss-process=style/watermark" alt=""><br>进入<code>疑难解答-&gt;高级选项</code></p><h2 id="开始尝试"><a href="#开始尝试" class="headerlink" title="开始尝试"></a>开始尝试</h2><p><img src="https://boyinthesun.oss-cn-beijing.aliyuncs.com/img/win10-advanced-startup(5).png?x-oss-process=style/watermark" alt=""><br>在尝试终极方案之前，可先尝试以下以下方法。这些操作均不会对数据产生影响，大可放心操作。但千万不要选择<code>重置此电脑</code>。</p><h3 id="启动修复"><a href="#启动修复" class="headerlink" title="启动修复"></a>启动修复</h3><p>这能解决一部分系统故障，只需耐心等待即可。</p><h3 id="卸载更新"><a href="#卸载更新" class="headerlink" title="卸载更新"></a>卸载更新</h3><p>如果你是在安装更新后系统出现故障，卸载更新很大几率可以解决问题。</p><h3 id="系统还原"><a href="#系统还原" class="headerlink" title="系统还原"></a>系统还原</h3><p>如果你有良好的习惯，设立了还原点，很大几率可以恢复成功。</p><h3 id="启动设置"><a href="#启动设置" class="headerlink" title="启动设置"></a>启动设置</h3><p>点击后进入启动设置选择，这里按<code>F5</code>选择<code>5) 启用安全模式</code>。<br><img src="https://boyinthesun.oss-cn-beijing.aliyuncs.com/img/win10-advanced-startup(3).png?x-oss-process=style/watermark" alt=""><br>如果你知道导致如何排除系统故障，比如卸载错误的显卡驱动、进行病毒查杀、卸载更新等，尽可以操作。如果无法解决，也可以救急，将c盘文件拷贝至u盘，连接网络制作pe盘等等。</p><h2 id="终极方案————CMD"><a href="#终极方案————CMD" class="headerlink" title="终极方案————CMD"></a>终极方案————CMD</h2><p>如果以上方法均无效，只好上大招了。请确保你已经熟悉基本cmd用法，如<code>cd</code>，<code>dir</code>，<code>copy</code>，<code>C:\</code>来更换盘符，<code>diskpart</code>等，本文不再赘述。<br>可以进入<code>启动设置</code>按<code>F5</code>选择<code>5) 带命令提示符的安全模式</code>，也可进入<code>命令提示符</code>，后者是一定可行的。本地磁盘的盘符会从<code>C</code>开始，寻找你所需文件的盘符，尤其是位于c盘的。如果你的c盘文件不多，可以将有用文件复制到其他盘，然后<code>重置此电脑</code>，崭新的系统就在你面前了。<br><img src="https://boyinthesun.oss-cn-beijing.aliyuncs.com/img/win10-advanced-startup(4).png?x-oss-process=style/watermark" alt=""><br>如图，我通过操作确定了我的系统盘盘符为D。于是便可以输入<code>d:</code>进入c盘，在cd到我需要的目录，拷贝文件。</p><h2 id="说在最后"><a href="#说在最后" class="headerlink" title="说在最后"></a>说在最后</h2><p>作为一名IT工作者，随身携带pe是良好的习惯，但是即便你身边有pe，也不妨先利用自带的工具尝试修复。最好养成定期建立还原点的良好习惯！</p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> 常识 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Windows </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>V2Ray客户端汇总</title>
      <link href="/post/v2ray/"/>
      <url>/post/v2ray/</url>
      
        <content type="html"><![CDATA[<h2 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h2><p>GFW日益强大，传统的代理服务器、VPN方式早已无法使用，甚至连SS和SSR最近也频繁被识别出，V2Ray作为新兴技术，被发现的风险更低。更多可访问<a href="https://v2ray.com/" target="_blank" rel="noopener">项目官网</a>和<a href="https://github.com/v2ray/v2ray-core" target="_blank" rel="noopener">github项目地址</a>，目前官网国内已经无法访问。本文只提供客户端下载，使用方式不再赘述。一般的，可以导入链接或手动填写配置，然后开启全局模式或者PAC模式即可。其中全局模式是所有流量都通过V2Ray，这会导致国内网页访问速度慢或无法访问，而PAC模式则是智能识别，但也可能会出现识别错误的情况，建议使用PAC模式。</p><h2 id="客户端下载"><a href="#客户端下载" class="headerlink" title="客户端下载"></a>客户端下载</h2><p>由于V2Ray核心并不区分客户端与服务端，并且没有可视化的客户端，所以大佬们就写了以下GUI客户端。以下下载链接均为截止发稿时的最新版，若需要最新版，请访问其github地址。</p><h3 id="Windows"><a href="#Windows" class="headerlink" title="Windows"></a>Windows</h3><ul><li>V2RayN（推荐）<a href="https://github.com/2dust/v2rayN" target="_blank" rel="noopener">github项目地址</a> <ul><li>v3.14 <a href="https://pan.boyinthesun.cn/软件/v2ray/v2rayN-Core.zip" target="_blank" rel="noopener">[本地下载]</a> <a href="https://github.com/2dust/v2rayN/releases/download/3.14/v2rayN-Core.zip" target="_blank" rel="noopener">[github下载]</a></li></ul></li><li>V2RayW <a href="https://github.com/Cenmrev/V2RayW" target="_blank" rel="noopener">github项目地址</a> <ul><li>v1.0.0-beta2 <a href="https://pan.boyinthesun.cn/软件/v2ray/V2RayW.zip" target="_blank" rel="noopener">[本地下载]</a> <a href="https://github.com/Cenmrev/V2RayW/releases/download/v1.0.0-beta2/V2RayW.zip" target="_blank" rel="noopener">[github下载]</a></li></ul></li><li>Clash <a href="https://github.com/Fndroid/clash_for_windows_pkg" target="_blank" rel="noopener">github项目地址</a> <ul><li>v0.9.5 压缩包（解压直用） <a href="https://pan.boyinthesun.cn/软件/v2ray/Clash.for.Windows-0.9.5-win.7z" target="_blank" rel="noopener">[本地下载]</a> <a href="https://github.com/Fndroid/clash_for_windows_pkg/releases/download/0.9.5/Clash.for.Windows-0.9.5-win.7z" target="_blank" rel="noopener">[github下载]</a></li><li>v0.9.5 安装程序（可在控制面板卸载）<a href="https://pan.boyinthesun.cn/软件/v2ray/Clash.for.Windows.Setup.0.9.5.exe" target="_blank" rel="noopener">[本地下载]</a> <a href="https://github.com/Fndroid/clash_for_windows_pkg/releases/download/0.9.5/Clash.for.Windows.Setup.0.9.5.exe" target="_blank" rel="noopener">[github下载]</a></li></ul></li><li>Qv2ray（推荐） <a href="https://lhy0403.github.io/Qv2ray" target="_blank" rel="noopener">官网</a> <a href="https://github.com/Qv2ray/Qv2ray" target="_blank" rel="noopener">github项目地址</a> <ul><li>v2.4.1 压缩包（解压直用）<a href="https://pan.boyinthesun.cn/软件/v2ray/Qv2ray.v2.4.1.Windows-x86.7z" target="_blank" rel="noopener">[32位本地下载]</a> <a href="https://github.com/Qv2ray/Qv2ray/releases/download/v2.4.1/Qv2ray.v2.4.1.Windows-x86.7z" target="_blank" rel="noopener">[32位github下载]</a> <a href="https://pan.boyinthesun.cn/软件/v2ray/Qv2ray.v2.4.1.Windows-x64.7z" target="_blank" rel="noopener">[64位本地下载]</a> <a href="https://github.com/Qv2ray/Qv2ray/releases/download/v2.4.1/Qv2ray.v2.4.1.Windows-x64.7z" target="_blank" rel="noopener">[64位github下载]</a></li><li>v2.4.1 安装程序（可在控制面板卸载）<a href="https://pan.boyinthesun.cn/软件/v2ray/qv2ray-2.4.1-win32.exe" target="_blank" rel="noopener">[32位本地下载]</a> <a href="https://github.com/Qv2ray/Qv2ray/releases/download/v2.4.1/qv2ray-2.4.1-win32.exe" target="_blank" rel="noopener">[32位github下载]</a> <a href="https://pan.boyinthesun.cn/软件/v2ray/qv2ray-2.4.1-win64.exe" target="_blank" rel="noopener">[64位本地下载]</a> <a href="https://github.com/Qv2ray/Qv2ray/releases/download/v2.4.1/qv2ray-2.4.1-win64.exe" target="_blank" rel="noopener">[64位github下载]</a></li></ul></li><li>Mellow <a href="https://github.com/mellow-io/mellow" target="_blank" rel="noopener">github项目地址</a><br>Mellow 是一个基于规则的全局透明代理工具，可以运行在 Windows、macOS 和 Linux 上，也可以配置成路由器透明代理或代理网关，简言之，不仅可以代理浏览器，还可以代理游戏等程序，但设置暂无可视化界面。<ul><li>v0.1.19 <a href="https://pan.boyinthesun.cn/软件/v2ray/Mellow.Setup.0.1.19.exe" target="_blank" rel="noopener">[本地下载]</a> <a href="https://github.com/mellow-io/mellow/releases/download/v0.1.19/Mellow.Setup.0.1.19.exe" target="_blank" rel="noopener">[github下载]</a></li></ul></li><li>V2RayS <a href="">github项目地址</a> <ul><li>v1.0.0.3 <a href="https://pan.boyinthesun.cn/软件/v2ray/V2RayS_v1.0.0.3x86.zip" target="_blank" rel="noopener">[32位本地下载]</a> <a href="https://github.com/Shinlor/V2RayS/releases/download/V1.0.0.3/x86.zip" target="_blank" rel="noopener">[32位github下载]</a> <a href="https://pan.boyinthesun.cn/软件/v2ray/V2RayS_v1.0.0.3x64.zip" target="_blank" rel="noopener">[64位本地下载]</a> <a href="https://github.com/Shinlor/V2RayS/releases/download/V1.0.0.3/x64.zip" target="_blank" rel="noopener">[64位github下载]</a></li></ul></li></ul><h3 id="MacOS"><a href="#MacOS" class="headerlink" title="MacOS"></a>MacOS</h3><ul><li>V2RayX <a href="https://github.com/Cenmrev/V2RayX" target="_blank" rel="noopener">github项目地址</a><br>  无中文界面<ul><li>v1.5.1 <a href="https://pan.boyinthesun.cn/软件/v2ray/V2RayX.app.zip" target="_blank" rel="noopener">[本地下载]</a> <a href="https://github.com/Cenmrev/V2RayX/releases/download/v1.5.1/V2RayX.app.zip" target="_blank" rel="noopener">[github下载]</a></li></ul></li><li>V2RayU（推荐）<a href="https://github.com/yanue/V2rayU" target="_blank" rel="noopener">github项目地址</a> <ul><li>v2.1.0 <a href="https://pan.boyinthesun.cn/软件/v2ray/V2rayU.dmg" target="_blank" rel="noopener">[本地下载]</a> <a href="https://github.com/yanue/V2rayU/releases/download/2.1.0/V2rayU.dmg" target="_blank" rel="noopener">[github下载]</a></li></ul></li><li>Qv2ray（推荐）<a href="https://github.com/lhy0403/Qv2ray" target="_blank" rel="noopener">github项目地址</a> <ul><li>v2.4.1 <a href="https://pan.boyinthesun.cn/软件/v2ray/qv2ray-2.4.1-Darwin.dmg" target="_blank" rel="noopener">[本地下载]</a> <a href="https://github.com/Qv2ray/Qv2ray/releases/download/v2.4.1/qv2ray-2.4.1-Darwin.dmg" target="_blank" rel="noopener">[github下载]</a></li></ul></li><li>Mellow <a href="https://github.com/mellow-io/mellow" target="_blank" rel="noopener">github项目地址</a><br>介绍见上<ul><li>v0.1.19 <a href="https://pan.boyinthesun.cn/软件/v2ray/Mellow-0.1.19.dmg" target="_blank" rel="noopener">[本地下载]</a> <a href="https://github.com/mellow-io/mellow/releases/download/v0.1.19/Mellow-0.1.19.dmg" target="_blank" rel="noopener">[github下载]</a></li></ul></li><li>clashX <a href="https://github.com/yichengchen/clashX" target="_blank" rel="noopener">github项目地址</a><br>v1.19.1 <a href="https://pan.boyinthesun.cn/软件/v2ray/ClashX.dmg" target="_blank" rel="noopener">[本地下载]</a> <a href="https://github.com/yichengchen/clashX/releases/download/1.19.1/ClashX.dmg" target="_blank" rel="noopener">[github下载]</a></li></ul><h3 id="Android"><a href="#Android" class="headerlink" title="Android"></a>Android</h3><ul><li>V2RayNG（推荐）<a href="https://github.com/2dust/v2rayNG" target="_blank" rel="noopener">github项目地址</a> <ul><li>v1.2.4 <a href="https://pan.boyinthesun.cn/软件/v2ray/v2rayNG_1.2.4.apk" target="_blank" rel="noopener">[本地下载]</a> <a href="https://github.com/2dust/v2rayNG/releases/download/1.2.4/v2rayNG_1.2.4.apk" target="_blank" rel="noopener">[github下载]</a></li></ul></li><li>Kitsunebi <ul><li>v1.8.0 <a href="https://pan.boyinthesun.cn/软件/v2ray/Kitsunebi_v1.8.0_apkpure.com.apk" target="_blank" rel="noopener">[本地下载]</a> <a href="https://apkpure.com/kitsunebi/fun.kitsunebi.kitsunebi4android" target="_blank" rel="noopener">[apkpure下载]</a></li></ul></li><li>BifrostV <ul><li>v0.6.8 <a href="https://pan.boyinthesun.cn/软件/v2ray/BifrostV_v0.6.8_apkpure.com.apk" target="_blank" rel="noopener">[本地下载]</a> <a href="https://apkpure.com/bifrostv/com.github.dawndiy.bifrostv" target="_blank" rel="noopener">[apkpure下载]</a></li></ul></li></ul><h3 id="Linux"><a href="#Linux" class="headerlink" title="Linux"></a>Linux</h3><ul><li>Qv2ray <a href="https://github.com/lhy0403/Qv2ray" target="_blank" rel="noopener">github项目地址</a> <ul><li>v2.4.1 <a href="https://pan.boyinthesun.cn/软件/v2ray/Qv2ray.v2.4.1.linux-x64.AppImage" target="_blank" rel="noopener">[本地下载]</a> <a href="https://github.com/Qv2ray/Qv2ray/releases/download/v2.4.1/Qv2ray.v2.4.1.linux-x64.AppImage" target="_blank" rel="noopener">[github下载]</a></li></ul></li><li>Mellow <a href="https://github.com/mellow-io/mellow" target="_blank" rel="noopener">github项目地址</a> <ul><li>v0.1.19 <a href="https://pan.boyinthesun.cn/软件/v2ray/Mellow-0.1.19.AppImage" target="_blank" rel="noopener">[本地下载]</a> <a href="https://github.com/mellow-io/mellow/releases/download/v0.1.19/Mellow-0.1.19.AppImage" target="_blank" rel="noopener">[github下载]</a></li></ul></li><li>v2rayL <a href="https://github.com/jiangxufeng/v2rayL" target="_blank" rel="noopener">github项目地址</a> <ul><li>v2.1.3 <a href="v2rayLui-v2.1.3.zip">[本地下载]</a> <a href="https://github.com/jiangxufeng/v2rayL/releases/download/2.1.3/v2rayLui-v2.1.3.zip" target="_blank" rel="noopener">[github下载]</a></li></ul></li></ul><h3 id="IOS"><a href="#IOS" class="headerlink" title="IOS"></a>IOS</h3><p>目前没有发现免费的客户端，当然这也情有可原，因为开发者账号至少需支付<strong>年费$99</strong>，还有严格的审核机制，况且苹果还会抽走一大半的钱，还是应该给作者一杯咖啡钱的。</p><ul><li>Kitsunebi <a href="https://itunes.apple.com/us/app/kitsunebi-proxy-utility/id1446584073?mt=8" target="_blank" rel="noopener">iTunes地址</a></li><li>i2Ray <a href="https://itunes.apple.com/us/app/i2ray/id1445270056?mt=8" target="_blank" rel="noopener">iTunes地址</a></li><li>Shadowrocket <a href="https://itunes.apple.com/us/app/shadowrocket/id932747118?mt=8" target="_blank" rel="noopener">iTunes地址</a></li><li>Pepi（原名ShadowRay）<a href="https://itunes.apple.com/us/app/pepi/id1283082051?mt=8" target="_blank" rel="noopener">iTunes地址</a></li><li>Quantumult <a href="https://itunes.apple.com/us/app/quantumult/id1252015438?mt=8" target="_blank" rel="noopener">iTunes地址</a></li></ul><h2 id="服务器配置"><a href="#服务器配置" class="headerlink" title="服务器配置"></a>服务器配置</h2><p>当然，仅有客户端是<strong>无法使用</strong>的，可以自己搭建，也可以通过页面下方qq联系博主，售价5￥/月，cn2线路！</p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> 软件推荐 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 软件 </tag>
            
            <tag> Windows </tag>
            
            <tag> Linux </tag>
            
            <tag> macOS </tag>
            
            <tag> Android </tag>
            
            <tag> IOS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Pandas实例————分析北京市pm指数</title>
      <link href="/post/python-pd/"/>
      <url>/post/python-pd/</url>
      
        <content type="html"><![CDATA[<h2 id="要求"><a href="#要求" class="headerlink" title="要求"></a>要求</h2><p>根据提供的csv文件，计算北京空气质量数据：</p><blockquote><p>1.<strong>汇总计算PM指数年平均值的变化情况</strong><br>2.<strong>汇总计算每年中1-12月的PM指数数据变化情况</strong></p></blockquote><p>csv文件详见附件</p><h2 id="分析"><a href="#分析" class="headerlink" title="分析"></a>分析</h2><h3 id="分析问题"><a href="#分析问题" class="headerlink" title="分析问题"></a>分析问题</h3><p><code>问题1</code>实际是求PM指数的年平均值，即按年分组计算平均值；<br><code>问题2</code>实际是求PM指数的月平均值，即按年和月分组计算平均值。</p><h3 id="分析csv文件"><a href="#分析csv文件" class="headerlink" title="分析csv文件"></a>分析csv文件</h3><pre class="line-numbers language-python"><code class="language-python"><span class="token keyword">import</span> numpy <span class="token keyword">as</span> np<span class="token keyword">import</span> pandas <span class="token keyword">as</span> pd<span class="token comment" spellcheck="true"># 打开文件</span>FileNameStr <span class="token operator">=</span> <span class="token string">'BeijingPM20100101_20151231.csv'</span>df <span class="token operator">=</span> pd<span class="token punctuation">.</span>read_csv<span class="token punctuation">(</span>FileNameStr<span class="token punctuation">,</span> encoding<span class="token operator">=</span><span class="token string">'utf-8'</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true"># 禁止省略列信息</span>pd<span class="token punctuation">.</span>set_option<span class="token punctuation">(</span><span class="token string">'display.max_columns'</span><span class="token punctuation">,</span> None<span class="token punctuation">)</span> <span class="token comment" spellcheck="true"># 打印信息</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"--------------head--------------"</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>df<span class="token punctuation">.</span>head<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"------------describe------------"</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>df<span class="token punctuation">.</span>describe<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"--------------info--------------"</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>df<span class="token punctuation">.</span>info<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"================================"</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>执行后得到以下信息：</p><pre class="line-numbers language-txt"><code class="language-txt">--------------head--------------   No  year  month  day  hour  season  PM_Dongsi  PM_Dongsihuan  \0   1  2010      1    1     0       4        NaN            NaN   1   2  2010      1    1     1       4        NaN            NaN   2   3  2010      1    1     2       4        NaN            NaN   3   4  2010      1    1     3       4        NaN            NaN   4   5  2010      1    1     4       4        NaN            NaN      PM_Nongzhanguan  PM_US Post  DEWP  HUMI    PRES  TEMP cbwd    Iws  \0              NaN         NaN -21.0  43.0  1021.0 -11.0   NW   1.79   1              NaN         NaN -21.0  47.0  1020.0 -12.0   NW   4.92   2              NaN         NaN -21.0  43.0  1019.0 -11.0   NW   6.71   3              NaN         NaN -21.0  55.0  1019.0 -14.0   NW   9.84   4              NaN         NaN -20.0  51.0  1018.0 -12.0   NW  12.97      precipitation  Iprec  0            0.0    0.0  1            0.0    0.0  2            0.0    0.0  3            0.0    0.0  4            0.0    0.0  ------------describe------------                 No          year         month           day          hour  \count  52584.000000  52584.000000  52584.000000  52584.000000  52584.000000   mean   26292.500000   2012.499772      6.523962     15.726609     11.500000   std    15179.837614      1.707485      3.448452      8.798896      6.922252   min        1.000000   2010.000000      1.000000      1.000000      0.000000   25%    13146.750000   2011.000000      4.000000      8.000000      5.750000   50%    26292.500000   2012.000000      7.000000     16.000000     11.500000   75%    39438.250000   2014.000000     10.000000     23.000000     17.250000   max    52584.000000   2015.000000     12.000000     31.000000     23.000000                season     PM_Dongsi  PM_Dongsihuan  PM_Nongzhanguan  \count  52584.000000  25052.000000   20508.000000     24931.000000   mean       2.491100     89.154439      92.560806        88.643737   std        1.116988     87.239267      88.027434        88.041166   min        1.000000      3.000000       3.000000         3.000000   25%        1.000000     24.000000      28.000000        24.000000   50%        2.000000     64.000000      68.000000        62.000000   75%        3.000000    124.000000     127.000000       122.000000   max        4.000000    737.000000     672.000000       844.000000            PM_US Post          DEWP          HUMI          PRES          TEMP  \count  50387.000000  52579.000000  52245.000000  52245.000000  52579.000000   mean      95.904241      2.074554     54.602421   1016.465442     12.587040   std       91.643772     14.222059     25.991338     10.295070     12.098527   min        1.000000    -40.000000      2.000000    991.000000    -19.000000   25%       27.000000    -10.000000     31.000000   1008.000000      2.000000   50%       69.000000      2.000000     55.000000   1016.000000     14.000000   75%      132.000000     15.000000     78.000000   1025.000000     23.000000   max      994.000000     28.000000    100.000000   1046.000000     42.000000                   Iws  precipitation          Iprec  count  52579.000000   52100.000000   52100.000000  mean      23.261829      19.258683      19.519008  std       49.281706    4381.035532    4381.036040  min        0.450000       0.000000       0.000000  25%        1.790000       0.000000       0.000000  50%        4.920000       0.000000       0.000000  75%       21.020000       0.000000       0.000000  max      585.600000  999990.000000  999990.000000  --------------info--------------<class 'pandas.core.frame.DataFrame'>RangeIndex: 52584 entries, 0 to 52583Data columns (total 18 columns): #   Column           Non-Null Count  Dtype  ---  ------           --------------  -----   0   No               52584 non-null  int64   1   year             52584 non-null  int64   2   month            52584 non-null  int64   3   day              52584 non-null  int64   4   hour             52584 non-null  int64   5   season           52584 non-null  int64   6   PM_Dongsi        25052 non-null  float64 7   PM_Dongsihuan    20508 non-null  float64 8   PM_Nongzhanguan  24931 non-null  float64 9   PM_US Post       50387 non-null  float64 10  DEWP             52579 non-null  float64 11  HUMI             52245 non-null  float64 12  PRES             52245 non-null  float64 13  TEMP             52579 non-null  float64 14  cbwd             52579 non-null  object  15  Iws              52579 non-null  float64 16  precipitation    52100 non-null  float64 17  Iprec            52100 non-null  float64dtypes: float64(11), int64(6), object(1)memory usage: 7.2+ MBNone================================<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>经查阅资料，可知各变量含义：</p><blockquote><p><code>No</code>: 行号<br><code>year</code>: 年份<br><code>month</code>: 月份<br><code>day</code>: 日期<br><code>hour</code>: 小时<br><code>season</code>: 季节<br><code>PM_Dongsi</code>: 来自<code>Dongsi（东四？）</code>的PM2.5浓度 (ug/m^3)<br><code>PM_Dongsihuan</code>: 来自<code>Dongsihuan（东四环？）</code>的PM2.5浓度 (ug/m^3)<br><code>PM_Nongzhanguan</code>: 来自<code>Nongzhanguan（农展馆？）</code>的PM2.5浓度 (ug/m^3)<br><code>PM_US Post</code>: 来自<code>US Post</code>的PM2.5浓度 (ug/m^3)<br><code>DEWP</code>: 露点 (摄氏温度) 指在固定气压之下，空气中所含的气态水达到饱和而凝结成液态水所需要降至的温度。<br><code>TEMP</code>: Temperature (摄氏温度)<br><code>HUMI</code>: 湿度 (%)<br><code>PRES</code>: 气压 (hPa)<br><code>cbwd</code>: 组合风向<br><code>Iws</code>: 累计风速 (m/s)<br><code>precipitation</code>: 降水量/时 (mm)<br><code>Iprec</code>: 累计降水量 (mm)</p></blockquote><p>不难发现，仅有第2, 3, 7, 8, 9, 10列的数据与题目相关。但四列PM数据都存在不同程度的缺失。</p><h3 id="分析缺失数据"><a href="#分析缺失数据" class="headerlink" title="分析缺失数据"></a>分析缺失数据</h3><pre class="line-numbers language-python"><code class="language-python"><span class="token keyword">import</span> numpy <span class="token keyword">as</span> np<span class="token keyword">import</span> pandas <span class="token keyword">as</span> pd<span class="token comment" spellcheck="true"># 打开文件，仅读取第7至第10列</span>FileNameStr <span class="token operator">=</span> <span class="token string">'BeijingPM20100101_20151231.csv'</span>df <span class="token operator">=</span> pd<span class="token punctuation">.</span>read_csv<span class="token punctuation">(</span>FileNameStr<span class="token punctuation">,</span> encoding<span class="token operator">=</span><span class="token string">'utf-8'</span><span class="token punctuation">,</span> usecols<span class="token operator">=</span><span class="token punctuation">[</span><span class="token number">6</span><span class="token punctuation">,</span> <span class="token number">7</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">,</span> <span class="token number">9</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true"># 打印信息</span><span class="token comment" spellcheck="true"># 总行数</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"Total of rows: {}"</span><span class="token punctuation">.</span>format<span class="token punctuation">(</span>len<span class="token punctuation">(</span>df<span class="token punctuation">.</span>index<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true"># 显示某列缺失值个数</span><span class="token comment" spellcheck="true"># print("The number of missing data in PM_Dongsi: {}".format(len(df.index) - len(df['PM_Dongsi'].dropna())))</span><span class="token comment" spellcheck="true"># 为了书写简便，使用循环，遍历所有列，获得每列缺失值个数</span><span class="token keyword">for</span> col <span class="token keyword">in</span> df<span class="token punctuation">:</span>    <span class="token comment" spellcheck="true">#dropna()会去除缺省值的数据，遂得到每列的缺失数据数</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"The number of missing data in {}: {}"</span><span class="token punctuation">.</span>format<span class="token punctuation">(</span>col<span class="token punctuation">,</span> len<span class="token punctuation">(</span>df<span class="token punctuation">.</span>index<span class="token punctuation">)</span> <span class="token operator">-</span> len<span class="token punctuation">(</span>df<span class="token punctuation">[</span>col<span class="token punctuation">]</span><span class="token punctuation">.</span>dropna<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true"># 获取所有列均为缺失值的行的个数，how='all'是限定所有列均为缺省值</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"The number of missing data in ALL: "</span><span class="token punctuation">,</span> len<span class="token punctuation">(</span>df<span class="token punctuation">.</span>index<span class="token punctuation">)</span> <span class="token operator">-</span> len<span class="token punctuation">(</span>df<span class="token punctuation">.</span>dropna<span class="token punctuation">(</span>how<span class="token operator">=</span><span class="token string">'all'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>得到信息：</p><pre class="line-numbers language-txt"><code class="language-txt">Total of rows: 52584The number of missing data in PM_Dongsi: 27532The number of missing data in PM_Dongsihuan: 32076The number of missing data in PM_Nongzhanguan: 27653The number of missing data in PM_US_Post: 2197The number of missing data in ALL:  1894<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>可见PM_US_Post的数据最为完整，但是仍存在部分四个值均缺失的情况。<br>为了数据的可靠性，博主采用四项求平均的方式来确定每日的PM数据。</p><h3 id="注意"><a href="#注意" class="headerlink" title="注意"></a>注意</h3><p>原文件中变量<code>PM_US Post</code>中包含空格，可能会对命令操作造成干扰，建议将<code>' '</code>替换为<code>'_'</code>。</p><h2 id="求解"><a href="#求解" class="headerlink" title="求解"></a>求解</h2><p>问题1：</p><pre class="line-numbers language-python"><code class="language-python"><span class="token keyword">import</span> numpy <span class="token keyword">as</span> np<span class="token keyword">import</span> pandas <span class="token keyword">as</span> pd<span class="token comment" spellcheck="true"># 打开文件，仅读取第7至第10列</span>FileNameStr <span class="token operator">=</span> <span class="token string">'BeijingPM20100101_20151231.csv'</span>df <span class="token operator">=</span> pd<span class="token punctuation">.</span>read_csv<span class="token punctuation">(</span>FileNameStr<span class="token punctuation">,</span> encoding<span class="token operator">=</span><span class="token string">'utf-8'</span><span class="token punctuation">,</span> usecols<span class="token operator">=</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">,</span> <span class="token number">7</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">,</span> <span class="token number">9</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true"># 新建平均值列，并将平均值写入</span><span class="token comment" spellcheck="true"># 其中，iloc[:, 1:5]指第2到第5列，mean(axis=1)为求行平均值</span>df<span class="token punctuation">[</span><span class="token string">'PM_ave'</span><span class="token punctuation">]</span> <span class="token operator">=</span> df<span class="token punctuation">.</span>iloc<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">:</span><span class="token number">5</span><span class="token punctuation">]</span><span class="token punctuation">.</span>mean<span class="token punctuation">(</span>axis<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true"># 保存到文件，其中以'year'分组，计算'PM_ave'列的平均值。</span>df<span class="token punctuation">.</span>groupby<span class="token punctuation">(</span><span class="token string">'year'</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token string">'PM_ave'</span><span class="token punctuation">]</span><span class="token punctuation">.</span>mean<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>to_csv<span class="token punctuation">(</span><span class="token string">"solution1.csv"</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true"># 为方便，再打印一份</span><span class="token keyword">print</span><span class="token punctuation">(</span>df<span class="token punctuation">.</span>groupby<span class="token punctuation">(</span><span class="token string">'year'</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token string">'PM_ave'</span><span class="token punctuation">]</span><span class="token punctuation">.</span>mean<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>得到：</p><pre class="line-numbers language-txt"><code class="language-txt">year    PM_ave2010    104.04572982011    99.093240382012    90.538767642013    98.402663542014    93.91770372015    85.85894216<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>问题2：</p><pre class="line-numbers language-python"><code class="language-python"><span class="token keyword">import</span> numpy <span class="token keyword">as</span> np<span class="token keyword">import</span> pandas <span class="token keyword">as</span> pd<span class="token comment" spellcheck="true"># 打开文件，仅读取第7至第10列</span>FileNameStr <span class="token operator">=</span> <span class="token string">'BeijingPM20100101_20151231.csv'</span>df <span class="token operator">=</span> pd<span class="token punctuation">.</span>read_csv<span class="token punctuation">(</span>FileNameStr<span class="token punctuation">,</span> encoding<span class="token operator">=</span><span class="token string">'utf-8'</span><span class="token punctuation">,</span> usecols<span class="token operator">=</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">,</span> <span class="token number">7</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">,</span> <span class="token number">9</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true"># 新建平均值列，并将平均值写入</span><span class="token comment" spellcheck="true"># 其中，iloc[:, 2:6]指第3到第6列，mean(axis=1)为求行平均值</span>df<span class="token punctuation">[</span><span class="token string">'PM_ave'</span><span class="token punctuation">]</span> <span class="token operator">=</span> df<span class="token punctuation">.</span>iloc<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">:</span><span class="token number">6</span><span class="token punctuation">]</span><span class="token punctuation">.</span>mean<span class="token punctuation">(</span>axis<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true"># 保存到文件，其中以'year'和'month'分组，计算'PM_ave'列的平均值。</span>df<span class="token punctuation">.</span>groupby<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">'year'</span><span class="token punctuation">,</span> <span class="token string">'month'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token string">'PM_ave'</span><span class="token punctuation">]</span><span class="token punctuation">.</span>mean<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>to_csv<span class="token punctuation">(</span><span class="token string">"solution2.csv"</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true"># 为方便，再打印一份</span><span class="token keyword">print</span><span class="token punctuation">(</span>df<span class="token punctuation">.</span>groupby<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">'year'</span><span class="token punctuation">,</span> <span class="token string">'month'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token string">'PM_ave'</span><span class="token punctuation">]</span><span class="token punctuation">.</span>mean<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>得到：</p><pre class="line-numbers language-txt"><code class="language-txt">year    month    PM_ave2010    1    90.403669722010    2    97.239940392010    3    94.046544432010    4    80.07242342010    5    87.071913162010    6    109.03893812010    7    123.42607532010    8    97.683431952010    9    122.7927352010    10    118.78436662010    11    138.38403612010    12    97.115746972011    1    44.873699852011    2    150.29017862011    3    57.991987182011    4    91.720670392011    5    65.108146072011    6    108.79465542011    7    107.38648652011    8    103.73380042011    9    94.969401952011    10    145.55681822011    11    109.4349652011    12    108.72139972012    1    118.92238812012    2    84.442028992012    3    96.474324322012    4    87.835883172012    5    90.966714912012    6    96.634180792012    7    80.64970932012    8    81.165329052012    9    59.952247192012    10    94.951351352012    11    87.436962752012    12    109.18729642013    1    183.19527032013    2    113.56646832013    3    114.57269272013    4    63.047800932013    5    89.148521512013    6    111.35486112013    7    74.932839172013    8    67.923611112013    9    85.717824072013    10    102.20878142013    11    85.14629632013    12    90.317764342014    1    107.91173842014    2    160.51388892014    3    103.18324372014    4    92.160648152014    5    64.958557352014    6    59.154629632014    7    91.79995522014    8    65.668236882014    9    68.232638892014    10    135.26971332014    11    106.33752014    12    76.622535842015    1    110.02273752015    2    103.44556052015    3    94.483422942015    4    79.396990742015    5    61.167562722015    6    60.332407412015    7    60.229502692015    8    45.896057352015    9    50.924768522015    10    77.25784052015    11    125.8031252015    12    162.1789875<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="附件"><a href="#附件" class="headerlink" title="附件"></a>附件</h2><p><a href="https://pan.boyinthesun.cn/%E9%99%84%E4%BB%B6/python-pd.rar" target="_blank" rel="noopener">点击下载</a></p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> 编程实例 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
            <tag> 学堂在线《Python数据分析与可视化》 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Scrapy实例————爬取学堂在线合作院校页面内容</title>
      <link href="/post/python-scrapy1/"/>
      <url>/post/python-scrapy1/</url>
      
        <content type="html"><![CDATA[<h2 id="目标"><a href="#目标" class="headerlink" title="目标"></a>目标</h2><p>通过<code>Scrapy</code>爬取到合作院校的名称及该所院校在学堂在线开课的数量，将爬取到的数据保存到一个json文件中，例如：“清华大学,308”，地址 <a href="http://www.xuetangx.com/partners" target="_blank" rel="noopener">http://www.xuetangx.com/partners</a> 。</p><h2 id="环境"><a href="#环境" class="headerlink" title="环境"></a>环境</h2><p>博主是在<code>Windows</code>平台使用<code>PyCharm</code>基于<code>Python 3.7</code>和<code>Scrapy 2.0.1</code>编写爬虫，不赘述环境配置了。</p><h2 id="建立项目"><a href="#建立项目" class="headerlink" title="建立项目"></a>建立项目</h2><p>右键<code>Scrapy</code>文件夹，选择在终端中打开<br><img src="https://boyinthesun.oss-cn-beijing.aliyuncs.com/img/Python-scrapy(1).png?x-oss-process=style/watermark" alt=""><br>在终端中输入<code>scrapy startproject xtzx</code>，其中<code>xtzx</code>为项目名（忽略图中lianjia，只是博主懒得再重新截图了，下同）。</p><h3 id="新建begin-py"><a href="#新建begin-py" class="headerlink" title="新建begin.py"></a>新建<code>begin.py</code></h3><p><img src="https://boyinthesun.oss-cn-beijing.aliyuncs.com/img/Python-scrapy(2).png?x-oss-process=style/watermark" alt=""><br>在项目文件夹中新建<code>begin.py</code>，内容为：</p><pre class="line-numbers language-python"><code class="language-python"><span class="token keyword">from</span> scrapy <span class="token keyword">import</span> cmdlinecmdline<span class="token punctuation">.</span>execute<span class="token punctuation">(</span><span class="token string">"scrapy crawl xtzx"</span><span class="token punctuation">.</span>split<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>其中<code>xtzx</code>为爬虫名（无须与项目名相同）。目的是为了方便运行爬虫。否则，需要在终端手动输入<code>scrapy crawl xtzx</code>来运行</p><h3 id="更改items-py"><a href="#更改items-py" class="headerlink" title="更改items.py"></a>更改<code>items.py</code></h3><pre class="line-numbers language-python"><code class="language-python"><span class="token keyword">import</span> scrapy<span class="token keyword">class</span> <span class="token class-name">MyItem</span> <span class="token punctuation">(</span>scrapy<span class="token punctuation">.</span>Item<span class="token punctuation">)</span><span class="token punctuation">:</span>    school <span class="token operator">=</span> scrapy<span class="token punctuation">.</span>Field<span class="token punctuation">(</span><span class="token punctuation">)</span>    num <span class="token operator">=</span> scrapy<span class="token punctuation">.</span>Field<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h3 id="分析网页"><a href="#分析网页" class="headerlink" title="分析网页"></a>分析网页</h3><p>右键爬取内容，<code>检查</code>，以下以<code>school</code>为例讲解。<br>复制三个<code>school</code>的xpath路径，不难找到规律。</p><pre class="line-numbers language-xpath"><code class="language-xpath">/html/body/article[1]/section/ul/li[1]/a/div[2]/h3/html/body/article[1]/section/ul/li[2]/a/div[2]/h3/html/body/article[1]/section/ul/li[3]/a/div[2]/h3<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h3 id="新建并更改spider-py"><a href="#新建并更改spider-py" class="headerlink" title="新建并更改spider.py"></a>新建并更改<code>spider.py</code></h3><p>在<code>spider</code>文件夹中新建<code>spider.py</code>，并键入：</p><pre class="line-numbers language-python"><code class="language-python"><span class="token keyword">import</span> scrapy<span class="token keyword">from</span> xtzx<span class="token punctuation">.</span>items <span class="token keyword">import</span> MyItem<span class="token keyword">class</span> <span class="token class-name">mySpider</span><span class="token punctuation">(</span>scrapy<span class="token punctuation">.</span>spiders<span class="token punctuation">.</span>Spider<span class="token punctuation">)</span><span class="token punctuation">:</span>    name <span class="token operator">=</span> <span class="token string">"xtzx"</span>    allowed_domains <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">"xuetangx.com"</span><span class="token punctuation">]</span>    start_urls <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">"http://www.xuetangx.com/partners"</span><span class="token punctuation">]</span>    <span class="token keyword">def</span> <span class="token function">parse</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> response<span class="token punctuation">)</span><span class="token punctuation">:</span>        item <span class="token operator">=</span> MyItem <span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token comment" spellcheck="true"># 开课院校</span>        <span class="token keyword">for</span> each <span class="token keyword">in</span> response<span class="token punctuation">.</span>xpath<span class="token punctuation">(</span><span class="token string">"/html/body/article[1]/section/ul/*"</span><span class="token punctuation">)</span><span class="token punctuation">:</span>             item<span class="token punctuation">[</span><span class="token string">'school'</span><span class="token punctuation">]</span> <span class="token operator">=</span> each<span class="token punctuation">.</span>xpath<span class="token punctuation">(</span><span class="token string">"a/div[2]/h3/text()"</span><span class="token punctuation">)</span><span class="token punctuation">.</span>extract<span class="token punctuation">(</span><span class="token punctuation">)</span>            item<span class="token punctuation">[</span><span class="token string">'num'</span><span class="token punctuation">]</span> <span class="token operator">=</span> each<span class="token punctuation">.</span>xpath<span class="token punctuation">(</span><span class="token string">"a/div[2]/p/text()"</span><span class="token punctuation">)</span><span class="token punctuation">.</span>extract<span class="token punctuation">(</span><span class="token punctuation">)</span>            <span class="token keyword">yield</span> item         <span class="token comment" spellcheck="true"># edX合作院校和伙伴</span>        <span class="token keyword">for</span> each <span class="token keyword">in</span> response<span class="token punctuation">.</span>xpath<span class="token punctuation">(</span><span class="token string">"/html/body/article[2]/section/ul/*"</span><span class="token punctuation">)</span><span class="token punctuation">:</span>             item<span class="token punctuation">[</span><span class="token string">'school'</span><span class="token punctuation">]</span> <span class="token operator">=</span> each<span class="token punctuation">.</span>xpath<span class="token punctuation">(</span><span class="token string">"a/div[2]/h3/text()"</span><span class="token punctuation">)</span><span class="token punctuation">.</span>extract<span class="token punctuation">(</span><span class="token punctuation">)</span>            item<span class="token punctuation">[</span><span class="token string">'num'</span><span class="token punctuation">]</span> <span class="token operator">=</span> each<span class="token punctuation">.</span>xpath<span class="token punctuation">(</span><span class="token string">"a/div[2]/p/text()"</span><span class="token punctuation">)</span><span class="token punctuation">.</span>extract<span class="token punctuation">(</span><span class="token punctuation">)</span>            <span class="token keyword">yield</span> item<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="更改setting-py"><a href="#更改setting-py" class="headerlink" title="更改setting.py"></a>更改<code>setting.py</code></h3><pre class="line-numbers language-python"><code class="language-python"><span class="token comment" spellcheck="true"># 不遵守机器人协议</span>ROBOTSTXT_OBEY <span class="token operator">=</span> <span class="token boolean">False</span>BOT_NAME <span class="token operator">=</span> <span class="token string">'xtzx'</span>SPIDER_MODULES <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">'xtzx.spiders'</span><span class="token punctuation">]</span>NEWSPIDER_MODULE <span class="token operator">=</span> <span class="token string">'xtzx.spiders'</span><span class="token comment" spellcheck="true"># 开启管道</span>ITEM_PIPELINES <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string">'xtzx.pipelines.MyPipeline'</span><span class="token punctuation">:</span> <span class="token number">300</span><span class="token punctuation">,</span><span class="token punctuation">}</span><span class="token comment" spellcheck="true"># 客户端伪装</span>USER_AGENT <span class="token operator">=</span> <span class="token string">'Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/75.0.3770.80 Safari/537.36'</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="更改pipelines-py"><a href="#更改pipelines-py" class="headerlink" title="更改pipelines.py"></a>更改<code>pipelines.py</code></h3><pre class="line-numbers language-python"><code class="language-python"><span class="token keyword">import</span> json<span class="token keyword">class</span> <span class="token class-name">MyPipeline</span> <span class="token punctuation">(</span>object<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token comment" spellcheck="true"># 打开文件</span>    <span class="token keyword">def</span> open_spider <span class="token punctuation">(</span>self<span class="token punctuation">,</span>spider<span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">try</span><span class="token punctuation">:</span>            self<span class="token punctuation">.</span>file <span class="token operator">=</span> open<span class="token punctuation">(</span><span class="token string">'MyData.json '</span><span class="token punctuation">,</span> <span class="token string">"w"</span><span class="token punctuation">,</span> encoding<span class="token operator">=</span><span class="token string">"utf-8"</span><span class="token punctuation">)</span>        <span class="token keyword">except</span> Exception <span class="token keyword">as</span> err<span class="token punctuation">:</span>            <span class="token keyword">print</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span>    <span class="token comment" spellcheck="true"># 写入</span>    <span class="token keyword">def</span> process_item <span class="token punctuation">(</span>self<span class="token punctuation">,</span> item<span class="token punctuation">,</span> spider<span class="token punctuation">)</span><span class="token punctuation">:</span>        dict_item <span class="token operator">=</span> dict <span class="token punctuation">(</span>item<span class="token punctuation">)</span>        <span class="token comment" spellcheck="true"># 生成 json 串</span>        json_str <span class="token operator">=</span> json<span class="token punctuation">.</span>dumps<span class="token punctuation">(</span>dict_item <span class="token punctuation">,</span> ensure_ascii<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">"\n"</span>         self<span class="token punctuation">.</span>file<span class="token punctuation">.</span>write<span class="token punctuation">(</span>json_str<span class="token punctuation">)</span>        <span class="token keyword">return</span> item    <span class="token comment" spellcheck="true"># 关闭文件</span>    <span class="token keyword">def</span> close_spider <span class="token punctuation">(</span>self<span class="token punctuation">,</span>spider<span class="token punctuation">)</span><span class="token punctuation">:</span>        self<span class="token punctuation">.</span>file<span class="token punctuation">.</span>close<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="运行爬虫"><a href="#运行爬虫" class="headerlink" title="运行爬虫"></a>运行爬虫</h2><p>运行<code>begin.py</code>，成功爬取到数据。这里只列举部分数据。</p><pre class="line-numbers language-json"><code class="language-json"><span class="token punctuation">{</span><span class="token property">"school"</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">"清华大学"</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token property">"num"</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">"31门课程"</span><span class="token punctuation">]</span><span class="token punctuation">}</span><span class="token punctuation">{</span><span class="token property">"school"</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">"台湾清华大学"</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token property">"num"</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">"0门课程"</span><span class="token punctuation">]</span><span class="token punctuation">}</span><span class="token punctuation">{</span><span class="token property">"school"</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">"台湾交通大学"</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token property">"num"</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">"0门课程"</span><span class="token punctuation">]</span><span class="token punctuation">}</span><span class="token punctuation">{</span><span class="token property">"school"</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">"斯坦福大学"</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token property">"num"</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">"0门课程"</span><span class="token punctuation">]</span><span class="token punctuation">}</span><span class="token punctuation">{</span><span class="token property">"school"</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">"中央社会主义学院"</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token property">"num"</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">"0门课程"</span><span class="token punctuation">]</span><span class="token punctuation">}</span><span class="token punctuation">{</span><span class="token property">"school"</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">"西安交通大学"</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token property">"num"</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">"16门课程"</span><span class="token punctuation">]</span><span class="token punctuation">}</span><span class="token punctuation">{</span><span class="token property">"school"</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">"中南财经政法大学"</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token property">"num"</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">"3门课程"</span><span class="token punctuation">]</span><span class="token punctuation">}</span><span class="token punctuation">{</span><span class="token property">"school"</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">"复旦大学"</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token property">"num"</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">"0门课程"</span><span class="token punctuation">]</span><span class="token punctuation">}</span><span class="token punctuation">{</span><span class="token property">"school"</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">"北京理工大学"</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token property">"num"</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">"0门课程"</span><span class="token punctuation">]</span><span class="token punctuation">}</span><span class="token punctuation">{</span><span class="token property">"school"</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">"中国科学技术大学"</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token property">"num"</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">"0门课程"</span><span class="token punctuation">]</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> 编程实例 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
            <tag> 学堂在线《Python数据分析与可视化》 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>解决live2d看板娘和busuanzi不蒜子计数冲突</title>
      <link href="/post/error-live2d-busuanzi/"/>
      <url>/post/error-live2d-busuanzi/</url>
      
        <content type="html"><![CDATA[<h2 id="问题描述"><a href="#问题描述" class="headerlink" title="问题描述"></a>问题描述</h2><p>近日安装了live2d看板娘插件，<a href="https://github.com/EYHN/hexo-helper-live2d" target="_blank" rel="noopener">github项目地址</a>，安装后却意外发现busuanzi不蒜子计数失效了,在页面中不显示，但强制刷新后出现，再刷新又消失。经排查，未发现问题，但事实是网站源码出现了变化。<br><em>正常时</em></p><pre class="line-numbers language-HTML"><code class="language-HTML"><xmp><span id="busuanzi_container_site_pv">    |&nbsp;<i class="far fa-eye"></i>&nbsp;总访问量:&nbsp;<span id="busuanzi_value_site_pv"        class="white-color"></span>&nbsp;次    </span><span id="busuanzi_container_site_uv">    |&nbsp;<i class="fas fa-users"></i>&nbsp;总访问人数:&nbsp;<span id="busuanzi_value_site_uv"        class="white-color"></span>&nbsp;人    </span></span></xmp><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><em>异常时</em></p><pre class="line-numbers language-HTML"><code class="language-HTML"><xmp><span id="busuanzi_container_site_pv" style="display: none;">    |&nbsp;<i class="far fa-eye"></i>&nbsp;总访问量:&nbsp;<span id="busuanzi_value_site_pv"         class="white-color">2303950</span>&nbsp;次</span><span id="busuanzi_container_site_uv" style="display: none;">    |&nbsp;<i class="fas fa-users"></i>&nbsp;总访问人数:&nbsp;<span id="busuanzi_value_site_uv"         class="white-color">160644</span>&nbsp;人</span></xmp><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>对比发现出现了多余的<code>style="display: none;</code>。<br>到issues查看，也未发现同类问题。至今博主未找到根本原因，也不懂js语法，只是找到了解决办法，做一个记录，烦请知道具体原因的大佬留言。</p><h2 id="解决方法"><a href="#解决方法" class="headerlink" title="解决方法"></a>解决方法</h2><p>首先是将不蒜子的js插件保存到本地，我的主题中位于<code>\themes\hexo-theme-matery\source\libs\others\busuanzi.pure.mini.js</code>。如果使用的是来自外网的js文件，也请下载到本地。<br>将js文件更改为如下：</p><pre class="line-numbers language-js"><code class="language-js"><span class="token keyword">var</span> bszCaller<span class="token punctuation">,</span>bszTag<span class="token punctuation">;</span><span class="token operator">!</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">var</span> c<span class="token punctuation">,</span>d<span class="token punctuation">,</span>e<span class="token punctuation">,</span>a<span class="token operator">=</span><span class="token operator">!</span><span class="token number">1</span><span class="token punctuation">,</span>b<span class="token operator">=</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>ready<span class="token operator">=</span><span class="token keyword">function</span><span class="token punctuation">(</span>c<span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">return</span> a<span class="token operator">||</span><span class="token string">"interactive"</span><span class="token operator">===</span>document<span class="token punctuation">.</span>readyState<span class="token operator">||</span><span class="token string">"complete"</span><span class="token operator">===</span>document<span class="token punctuation">.</span>readyState<span class="token operator">?</span>c<span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span>document<span class="token punctuation">)</span><span class="token punctuation">:</span>b<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">return</span> c<span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token keyword">this</span><span class="token punctuation">}</span><span class="token punctuation">,</span>d<span class="token operator">=</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">var</span> a<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">,</span>c<span class="token operator">=</span>b<span class="token punctuation">.</span>length<span class="token punctuation">;</span>c<span class="token operator">></span>a<span class="token punctuation">;</span>a<span class="token operator">++</span><span class="token punctuation">)</span>b<span class="token punctuation">[</span>a<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">apply</span><span class="token punctuation">(</span>document<span class="token punctuation">)</span><span class="token punctuation">;</span>b<span class="token operator">=</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">}</span><span class="token punctuation">,</span>e<span class="token operator">=</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>a<span class="token operator">||</span><span class="token punctuation">(</span>a<span class="token operator">=</span><span class="token operator">!</span><span class="token number">0</span><span class="token punctuation">,</span>d<span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span>window<span class="token punctuation">)</span><span class="token punctuation">,</span>document<span class="token punctuation">.</span>removeEventListener<span class="token operator">?</span>document<span class="token punctuation">.</span><span class="token function">removeEventListener</span><span class="token punctuation">(</span><span class="token string">"DOMContentLoaded"</span><span class="token punctuation">,</span>e<span class="token punctuation">,</span><span class="token operator">!</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">:</span>document<span class="token punctuation">.</span>attachEvent<span class="token operator">&amp;&amp;</span><span class="token punctuation">(</span>document<span class="token punctuation">.</span><span class="token function">detachEvent</span><span class="token punctuation">(</span><span class="token string">"onreadystatechange"</span><span class="token punctuation">,</span>e<span class="token punctuation">)</span><span class="token punctuation">,</span>window<span class="token operator">==</span>window<span class="token punctuation">.</span>top<span class="token operator">&amp;&amp;</span><span class="token punctuation">(</span><span class="token function">clearInterval</span><span class="token punctuation">(</span>c<span class="token punctuation">)</span><span class="token punctuation">,</span>c<span class="token operator">=</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">,</span>document<span class="token punctuation">.</span>addEventListener<span class="token operator">?</span>document<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">"DOMContentLoaded"</span><span class="token punctuation">,</span>e<span class="token punctuation">,</span><span class="token operator">!</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">:</span>document<span class="token punctuation">.</span>attachEvent<span class="token operator">&amp;&amp;</span><span class="token punctuation">(</span>document<span class="token punctuation">.</span><span class="token function">attachEvent</span><span class="token punctuation">(</span><span class="token string">"onreadystatechange"</span><span class="token punctuation">,</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token regex">/loaded|complete/</span><span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span>document<span class="token punctuation">.</span>readyState<span class="token punctuation">)</span><span class="token operator">&amp;&amp;</span><span class="token function">e</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>window<span class="token operator">==</span>window<span class="token punctuation">.</span>top<span class="token operator">&amp;&amp;</span><span class="token punctuation">(</span>c<span class="token operator">=</span><span class="token function">setInterval</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">try</span><span class="token punctuation">{</span>a<span class="token operator">||</span>document<span class="token punctuation">.</span>documentElement<span class="token punctuation">.</span><span class="token function">doScroll</span><span class="token punctuation">(</span><span class="token string">"left"</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token keyword">catch</span><span class="token punctuation">(</span>b<span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">return</span><span class="token punctuation">}</span><span class="token function">e</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>bszCaller<span class="token operator">=</span><span class="token punctuation">{</span>fetch<span class="token punctuation">:</span><span class="token keyword">function</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span>b<span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">var</span> c<span class="token operator">=</span><span class="token string">"BusuanziCallback_"</span><span class="token operator">+</span>Math<span class="token punctuation">.</span><span class="token function">floor</span><span class="token punctuation">(</span><span class="token number">1099511627776</span><span class="token operator">*</span>Math<span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>window<span class="token punctuation">[</span>c<span class="token punctuation">]</span><span class="token operator">=</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">evalCall</span><span class="token punctuation">(</span>b<span class="token punctuation">)</span><span class="token punctuation">,</span>a<span class="token operator">=</span>a<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token string">"=BusuanziCallback"</span><span class="token punctuation">,</span><span class="token string">"="</span><span class="token operator">+</span>c<span class="token punctuation">)</span><span class="token punctuation">,</span>scriptTag<span class="token operator">=</span>document<span class="token punctuation">.</span><span class="token function">createElement</span><span class="token punctuation">(</span><span class="token string">"SCRIPT"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>scriptTag<span class="token punctuation">.</span>type<span class="token operator">=</span><span class="token string">"text/javascript"</span><span class="token punctuation">,</span>scriptTag<span class="token punctuation">.</span>defer<span class="token operator">=</span><span class="token operator">!</span><span class="token number">0</span><span class="token punctuation">,</span>scriptTag<span class="token punctuation">.</span>src<span class="token operator">=</span>a<span class="token punctuation">,</span>document<span class="token punctuation">.</span><span class="token function">getElementsByTagName</span><span class="token punctuation">(</span><span class="token string">"HEAD"</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">appendChild</span><span class="token punctuation">(</span>scriptTag<span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">,</span>evalCall<span class="token punctuation">:</span><span class="token keyword">function</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">return</span> <span class="token keyword">function</span><span class="token punctuation">(</span>b<span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token function">ready</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">try</span><span class="token punctuation">{</span><span class="token function">a</span><span class="token punctuation">(</span>b<span class="token punctuation">)</span><span class="token punctuation">,</span>scriptTag<span class="token punctuation">.</span>parentElement<span class="token punctuation">.</span><span class="token function">removeChild</span><span class="token punctuation">(</span>scriptTag<span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token keyword">catch</span><span class="token punctuation">(</span>c<span class="token punctuation">)</span><span class="token punctuation">{</span>bszTag<span class="token punctuation">.</span><span class="token function">hides</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">,</span>bszCaller<span class="token punctuation">.</span><span class="token function">fetch</span><span class="token punctuation">(</span><span class="token string">"//busuanzi.ibruce.info/busuanzi?jsonpCallback=BusuanziCallback"</span><span class="token punctuation">,</span><span class="token keyword">function</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span><span class="token punctuation">{</span>bszTag<span class="token punctuation">.</span><span class="token function">texts</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span><span class="token punctuation">,</span>bszTag<span class="token punctuation">.</span><span class="token function">shows</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>bszTag<span class="token operator">=</span><span class="token punctuation">{</span>bszs<span class="token punctuation">:</span><span class="token punctuation">[</span><span class="token string">"site_pv"</span><span class="token punctuation">,</span><span class="token string">"page_pv"</span><span class="token punctuation">,</span><span class="token string">"site_uv"</span><span class="token punctuation">]</span><span class="token punctuation">,</span>texts<span class="token punctuation">:</span><span class="token keyword">function</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span>bszs<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span>b<span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">var</span> c<span class="token operator">=</span>document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">"busuanzi_value_"</span><span class="token operator">+</span>b<span class="token punctuation">)</span><span class="token punctuation">;</span>c<span class="token operator">&amp;&amp;</span><span class="token punctuation">(</span>c<span class="token punctuation">.</span>innerHTML<span class="token operator">=</span>a<span class="token punctuation">[</span>b<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">,</span>hides<span class="token punctuation">:</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span>bszs<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">var</span> b<span class="token operator">=</span>document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">"busuanzi_container_"</span><span class="token operator">+</span>a<span class="token punctuation">)</span><span class="token punctuation">;</span>b<span class="token operator">&amp;&amp;</span><span class="token punctuation">(</span>b<span class="token punctuation">.</span>style<span class="token punctuation">.</span>display<span class="token operator">=</span><span class="token string">""</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">,</span>shows<span class="token punctuation">:</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span>bszs<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">var</span> b<span class="token operator">=</span>document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">"busuanzi_container_"</span><span class="token operator">+</span>a<span class="token punctuation">)</span><span class="token punctuation">;</span>b<span class="token operator">&amp;&amp;</span><span class="token punctuation">(</span>b<span class="token punctuation">.</span>style<span class="token punctuation">.</span>display<span class="token operator">=</span><span class="token string">"inline"</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>操作其实就是把其中的<code>b.style.display="none"</code>中<code>none</code>去掉。</p><h2 id="最新进展"><a href="#最新进展" class="headerlink" title="最新进展"></a>最新进展</h2><p>我已经向作者提出issue，问题最新进展： <a href="https://github.com/EYHN/hexo-helper-live2d/issues/161" target="_blank" rel="noopener">https://github.com/EYHN/hexo-helper-live2d/issues/161</a></p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> 踩坑 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
            <tag> 前端 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>使用Persepolis Download Manager提升下载速度</title>
      <link href="/post/persepolis/"/>
      <url>/post/persepolis/</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p><code>aria2</code>是程序员们最爱的<strong>多线程</strong>下载工具，甚至还有远程下载，自动执行脚本等等附属功能，而且支持几乎所有平台。但是<strong>命令行</strong>的操作方式让普通用户不习惯，于是便衍生出了一系列套壳GUI程序。<br>这里介绍<code>Persepolis Download Manager</code>，简称PDM，<strong>免费且开源</strong>，你可以查看<a href="https://github.com/persepolisdm/persepolis" target="_blank" rel="noopener">github项目地址</a>。</p><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><h3 id="Windows"><a href="#Windows" class="headerlink" title="Windows"></a>Windows</h3><p>Windows32位 <a href="https://pan.boyinthesun.cn/%E8%BD%AF%E4%BB%B6/PersepolisDownloadManager/persepolis_3.2.0.0_windows_32bit.exe" target="_blank" rel="noopener">[本地下载]</a> <a href="https://github.com/persepolisdm/persepolis/releases/download/3.2.0/persepolis_3.2.0.0_windows_32bit.exe" target="_blank" rel="noopener">[github下载]</a><br>Windows64位 <a href="https://pan.boyinthesun.cn/%E8%BD%AF%E4%BB%B6/PersepolisDownloadManager/persepolis_3.2.0.0_windows_64bit.exe" target="_blank" rel="noopener">[本地下载]</a> <a href="https://github.com/persepolisdm/persepolis/releases/download/3.2.0/persepolis_3.2.0.0_windows_64bit.exe" target="_blank" rel="noopener">[github下载]</a><br>也可以通过<code>Scoop</code>安装，安装方式参见<a href="https://boyinthesun.cn/post/scoop/">传送门</a></p><pre class="line-numbers language-powershell"><code class="language-powershell">scoop bucket add extrasscoop install persepolis<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h3 id="macOS"><a href="#macOS" class="headerlink" title="macOS"></a>macOS</h3><p>macOS <a href="https://pan.boyinthesun.cn/%E8%BD%AF%E4%BB%B6/PersepolisDownloadManager/persepolis_3.2.0_mac.zip" target="_blank" rel="noopener">[本地下载]</a> <a href="https://github.com/persepolisdm/persepolis/releases/download/3.2.0/persepolis_3.2.0_mac.zip" target="_blank" rel="noopener">[github下载]</a><br>如果你安装了<code>brew</code>，也可以通过终端安装</p><pre><code>brew cask install persepolis-download-manager</code></pre><h3 id="Linux"><a href="#Linux" class="headerlink" title="Linux"></a>Linux</h3><p>Debian/Ubuntu <a href="https://pan.boyinthesun.cn/%E8%BD%AF%E4%BB%B6/PersepolisDownloadManager/persepolis_3.2.0.2_all.deb" target="_blank" rel="noopener">[本地下载]</a> <a href="https://github.com/persepolisdm/persepolis/releases/download/3.2.0/persepolis_3.2.0.2_all.deb" target="_blank" rel="noopener">[github下载]</a></p><h3 id="其他系统"><a href="#其他系统" class="headerlink" title="其他系统"></a>其他系统</h3><p>请参见官方wiki <a href="https://github.com/persepolisdm/persepolis/wiki/Home-en" target="_blank" rel="noopener">https://github.com/persepolisdm/persepolis/wiki/Home-en</a></p><h2 id="更改语言"><a href="#更改语言" class="headerlink" title="更改语言"></a>更改语言</h2><p>第一步便是更改到中文。But if you do kown what’s that mean, just pass this step.<br>找到<code>Edit-&gt;Preferences</code><br><img src="https://boyinthesun.oss-cn-beijing.aliyuncs.com/img/persepolis(1).png?x-oss-process=style/watermark" alt=""><br>更改language为中文，如果你喜欢，也可以更改字体和字号<br><img src="https://boyinthesun.oss-cn-beijing.aliyuncs.com/img/persepolis(2).png?x-oss-process=style/watermark" alt=""><br>改完后记得<strong>重新启动程序</strong></p><h2 id="添加浏览器拓展"><a href="#添加浏览器拓展" class="headerlink" title="添加浏览器拓展"></a>添加浏览器拓展</h2><p>这是可选步骤，如果你不安装，则需要手动添加下载链接<br><img src="https://boyinthesun.oss-cn-beijing.aliyuncs.com/img/persepolis(4).png?x-oss-process=style/watermark" alt=""></p><h3 id="网页安装"><a href="#网页安装" class="headerlink" title="网页安装"></a>网页安装</h3><p><a href="https://chrome.google.com/webstore/detail/persepolis-download-manag/legimlagjjoghkoedakdjhocbeomojao?hl=en" target="_blank" rel="noopener">[chrome安装]需梯子</a> 同时支持其他支持chrome扩展的浏览器<br><a href="https://addons.mozilla.org/zh-CN/firefox/addon/persepolis-dlm-integration/" target="_blank" rel="noopener">[firefox安装]</a></p><h3 id="压缩包安装"><a href="#压缩包安装" class="headerlink" title="压缩包安装"></a>压缩包安装</h3><p><a href="https://pan.boyinthesun.cn/%E8%BD%AF%E4%BB%B6/PersepolisDownloadManager/PersepolisDownloadManagerIntegration_v2.2.0_0.rar" target="_blank" rel="noopener">[本地下载]</a><br>下载完成后将压缩包解压到某一个目录，也可将其解压到默认目录<code>C:\Users\%username%\AppData\Local\Google\Chrome\User Data\Default\Extensions</code>，在扩展程序界面打开<code>开发者模式</code>,<code>加载已解压扩展程序</code>，选择根文件夹<br><img src="https://boyinthesun.oss-cn-beijing.aliyuncs.com/img/persepolis(3).png?x-oss-process=style/watermark" alt=""><br><strong>导入扩展后请勿将其删除</strong></p><h3 id="crx格式安装"><a href="#crx格式安装" class="headerlink" title="crx格式安装"></a>crx格式安装</h3><p><a href="https://pan.boyinthesun.cn/%E8%BD%AF%E4%BB%B6/PersepolisDownloadManager/PersepolisDownloadManagerIntegration_v2.2.0_0.crx" target="_blank" rel="noopener">[本地下载]</a><br>一般地，将其拖拽至浏览器即可安装。<br>更多内容请参见<a href="https://github.com/persepolisdm/Persepolis-WebExtension" target="_blank" rel="noopener">github项目地址</a></p><h2 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h2><p>点击加号新建任务便可以使用了，还有很多实用功能，如批量下载网页链接，使用代理下载等。新版本内置了<code>youtube-dl</code>来解析页面视频并下载，理论上不仅支持youtube，也应该支持国内外大部分视频站，博主还没有尝试，感兴趣的自己研究吧。</p><h2 id="说明"><a href="#说明" class="headerlink" title="说明"></a>说明</h2><p>多线程下载，在默写情况下可以跑满宽带，是通过建立多个线程，多线下载来加速。但是对于以下情况无法起到加速作用或效果不好：</p><blockquote><p>1.单线程速度很快，已经跑满宽带<br>2.服务器限制连接线程数<br>3.服务器不支持断点续传，只能单线程一次性下载完毕<br>4.宽带线路差，对总速度产生影响</p></blockquote><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> 软件推荐 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Windows </tag>
            
            <tag> Linux </tag>
            
            <tag> macOS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>proxifier搭配v2ray等实现Windows/macOS全平台代理</title>
      <link href="/post/proxifier/"/>
      <url>/post/proxifier/</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>我们当前在Windows和macOS使用的梯子大多数只能通过<strong>修改代理</strong>使网页访问外网，但无法使程序走梯子。搭配<code>proxifier</code>，可以实现<strong>类似vpn</strong>的全平台代理，也可以分应用代理，功能强大。</p><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><h3 id="Windows"><a href="#Windows" class="headerlink" title="Windows"></a>Windows</h3><p>官网 <a href="https://www.proxifier.com" target="_blank" rel="noopener">https://www.proxifier.com</a> ，需要梯子。可以<a href="https://pan.boyinthesun.cn/%E8%BD%AF%E4%BB%B6/proxifier/ProxifierSetup.exe" target="_blank" rel="noopener">点击这里</a>本地下载<br>序列号:<br><code>T3ZWQ-P2738-3FJWS-YE7HT-6NA3K</code><br><code>SFZHH-2Y246-Z483L-EU92B-LNYUA</code><br><code>5EZ8G-C3WL5-B56YG-SCXM9-6QZAP</code><br><code>L6Z8A-XY2J4-BTZ3P-ZZ7DF-A2Q9C</code><br>或者<a href="https://pan.boyinthesun.cn/%E8%BD%AF%E4%BB%B6//proxifier/Proxifier汉化版.exe" target="_blank" rel="noopener">点击这里</a>下载中文破解版</p><h3 id="macOS"><a href="#macOS" class="headerlink" title="macOS"></a>macOS</h3><p>同样可在官网下载 <a href="https://www.proxifier.com" target="_blank" rel="noopener">https://www.proxifier.com</a> ，或<a href="https://pan.boyinthesun.cn/%E8%BD%AF%E4%BB%B6/proxifier/ProxifierMac.dmg" target="_blank" rel="noopener">点击这里</a>本地下载<br>序列号：<br><code>P427L-9Y552-5433E-8DSR3-58Z68</code></p><h2 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h2><p>首先你需要打开ss/ssr或v2rayN等客户端，并开启代理。</p><h3 id="添加代理服务器"><a href="#添加代理服务器" class="headerlink" title="添加代理服务器"></a>添加代理服务器</h3><p><img src="https://boyinthesun.oss-cn-beijing.aliyuncs.com/img/proxifier(1).png?x-oss-process=style/watermark" alt=""><br>找到<code>代理服务器</code>，添加<br><img src="https://boyinthesun.oss-cn-beijing.aliyuncs.com/img/proxifier(2).png?x-oss-process=style/watermark" alt=""><br>其中<code>127.0.0.1</code>为本机ip地址，<code>10808</code>为v2rayN默认的<code>SOCKS5</code>端口，ssr默认为<code>1080</code>，协议选择<code>SOCKS Verssion 5</code><br>配置完毕后可以点击<code>check</code>来检验是否填写正确</p><h3 id="添加代理规则"><a href="#添加代理规则" class="headerlink" title="添加代理规则"></a>添加代理规则</h3><p>找到添加规则<br><img src="https://boyinthesun.oss-cn-beijing.aliyuncs.com/img/proxifier(3).png?x-oss-process=style/watermark" alt=""><br>可以参考如图设置<br><img src="https://boyinthesun.oss-cn-beijing.aliyuncs.com/img/proxifier(4).png?x-oss-process=style/watermark" alt=""><br>解释一下这五栏的作用</p><blockquote><p>第一栏<code>Rule Name</code>，规则名称，随意设置；<br>第二栏<code>Applications</code>，是遵循此规则的应用；<br>第三栏<code>Target Hosts</code>，是遵循此规则的地址；<br>第四栏<code>Target Posts</code>，是遵循此规则的端口；<br>第五栏<code>Action</code>，是进行的动作，包含三个选项：</p><blockquote><p><code>Driect</code>直连，不起效果，<code>Block</code>拦截，拦截连接流量，其余为用户自行添加的代理服务器</p></blockquote></blockquote><p>你的代理规则至少包含三条</p><blockquote><p>第一是条图中<code>wv2ray</code>，<code>程序(Applications)</code>选择v2rayN程序中起到传输数据的<code>wv2ray.exe</code>，<code>动作(Action)</code>选择<code>直连(Direct)</code>；<br>第二是条图中<code>Localhost</code>，应该已经由程序创建，为的是防止循环代理；<br>第三是条图中<code>Default</code>，已由程序创建且只能修改<code>动作(Action)</code>，因为均不符合上述所有规则的连接将遵循此规则。设置为<code>代理(Proxy SOCKS5 127.0.0.1)</code>可以实现全局店里，设置为<code>直连(Direct)</code>后再添加其他规则可实现分应用代理<br>如果你将<code>Default</code>设置为<code>直连(Direct)</code>，就需要添加其他规则使你想让走梯子的程序走梯子。如果无法找到程序的路径，可以打开任务管理器，右键进程，<code>打开文件所在的位置</code>。一般的，很多程序不只有主程序联网，所以建议写为添加所有exe或者写为<code>*.exe</code></p></blockquote><h3 id="示例"><a href="#示例" class="headerlink" title="示例"></a>示例</h3><p><img src="https://boyinthesun.oss-cn-beijing.aliyuncs.com/img/proxifier(5).png?x-oss-process=style/watermark" alt="如图中日志信息即为正常运行"></p><h2 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h2><p>proxifier功能强大，还可以通过网络获取的SOCKS5代理服务器来隐藏本机地址、穿透内网封锁，监测程序所有连接，配合Fiddler实现抓包等，感兴趣的自己挖掘吧。</p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> 软件推荐 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 软件 </tag>
            
            <tag> Windows </tag>
            
            <tag> macOS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Scrapy实例————爬取链家新房数据</title>
      <link href="/post/python-scrapy/"/>
      <url>/post/python-scrapy/</url>
      
        <content type="html"><![CDATA[<h2 id="目标"><a href="#目标" class="headerlink" title="目标"></a>目标</h2><p>通过<code>Scrapy</code>爬取链家新房数据，地址 <a href="https://bj.fang.lianjia.com/loupan" target="_blank" rel="noopener">https://bj.fang.lianjia.com/loupan</a> ，并将爬取到的数据存储到<code>json</code>文件中。</p><h2 id="环境"><a href="#环境" class="headerlink" title="环境"></a>环境</h2><p>博主是在<code>Windows</code>平台使用<code>PyCharm</code>基于<code>Python 3.7</code>和<code>Scrapy 2.0.1</code>编写爬虫，不赘述环境配置了。</p><h2 id="建立项目"><a href="#建立项目" class="headerlink" title="建立项目"></a>建立项目</h2><p>右键<code>Scrapy</code>文件夹，选择在终端中打开<br><img src="https://boyinthesun.oss-cn-beijing.aliyuncs.com/img/Python-scrapy(1).png?x-oss-process=style/watermark" alt=""><br>在终端中输入<code>scrapy startproject lianjia</code>，其中<code>lianjia</code>为项目名</p><h3 id="新建begin-py"><a href="#新建begin-py" class="headerlink" title="新建begin.py"></a>新建<code>begin.py</code></h3><p><img src="https://boyinthesun.oss-cn-beijing.aliyuncs.com/img/Python-scrapy(2).png?x-oss-process=style/watermark" alt=""><br>在项目文件夹中新建<code>begin.py</code>，内容为：</p><pre class="line-numbers language-python"><code class="language-python"><span class="token keyword">from</span> scrapy <span class="token keyword">import</span> cmdlinecmdline<span class="token punctuation">.</span>execute<span class="token punctuation">(</span><span class="token string">"scrapy crawl lianjia"</span><span class="token punctuation">.</span>split<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>其中<code>lianjia</code>为爬虫名（无须与项目名相同）。目的是为了方便运行爬虫。否则，需要在终端手动输入<code>scrapy crawl lianjia</code>来运行</p><h3 id="更改items-py"><a href="#更改items-py" class="headerlink" title="更改items.py"></a>更改<code>items.py</code></h3><pre class="line-numbers language-python"><code class="language-python"><span class="token keyword">import</span> scrapy<span class="token keyword">class</span> <span class="token class-name">MyItem</span><span class="token punctuation">(</span>scrapy<span class="token punctuation">.</span>Item<span class="token punctuation">)</span><span class="token punctuation">:</span>    name <span class="token operator">=</span> scrapy<span class="token punctuation">.</span>Field<span class="token punctuation">(</span><span class="token punctuation">)</span>    resblock_type <span class="token operator">=</span> scrapy<span class="token punctuation">.</span>Field<span class="token punctuation">(</span><span class="token punctuation">)</span>    sale_status <span class="token operator">=</span> scrapy<span class="token punctuation">.</span>Field<span class="token punctuation">(</span><span class="token punctuation">)</span>    location0 <span class="token operator">=</span> scrapy<span class="token punctuation">.</span>Field<span class="token punctuation">(</span><span class="token punctuation">)</span>    location1 <span class="token operator">=</span> scrapy<span class="token punctuation">.</span>Field<span class="token punctuation">(</span><span class="token punctuation">)</span>    location2 <span class="token operator">=</span> scrapy<span class="token punctuation">.</span>Field<span class="token punctuation">(</span><span class="token punctuation">)</span>    num_room <span class="token operator">=</span> scrapy<span class="token punctuation">.</span>Field<span class="token punctuation">(</span><span class="token punctuation">)</span>    area <span class="token operator">=</span> scrapy<span class="token punctuation">.</span>Field<span class="token punctuation">(</span><span class="token punctuation">)</span>    price_pre_spm <span class="token operator">=</span> scrapy<span class="token punctuation">.</span>Field<span class="token punctuation">(</span><span class="token punctuation">)</span>    price_pre_suite <span class="token operator">=</span> scrapy<span class="token punctuation">.</span>Field<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="分析网页"><a href="#分析网页" class="headerlink" title="分析网页"></a>分析网页</h3><p><img src="https://boyinthesun.oss-cn-beijing.aliyuncs.com/img/Python-scrapy(3).png?x-oss-process=style/watermark" alt=""><br>右键爬取内容，<code>检查</code>，以下以<code>name</code>为例讲解。<br><img src="https://boyinthesun.oss-cn-beijing.aliyuncs.com/img/Python-scrapy(4).png?x-oss-process=style/watermark" alt=""><br>复制三个<code>name</code>的xpath路径，不难找到规律。</p><pre class="line-numbers language-xpath"><code class="language-xpath">/html/body/div[4]/ul[2]/li[1]/div/div[1]/a/html/body/div[4]/ul[2]/li[2]/div/div[1]/a/html/body/div[4]/ul[2]/li[3]/div/div[1]/a<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h3 id="新建并更改spider-py"><a href="#新建并更改spider-py" class="headerlink" title="新建并更改spider.py"></a>新建并更改<code>spider.py</code></h3><p>在<code>spider</code>文件夹中新建<code>spider.py</code>，并键入：</p><pre class="line-numbers language-python"><code class="language-python"><span class="token comment" spellcheck="true"># 为方便更改，设置全局变量，爬取页数</span>page <span class="token operator">=</span> <span class="token number">5</span> <span class="token keyword">import</span> scrapy<span class="token keyword">from</span> lianjia<span class="token punctuation">.</span>items <span class="token keyword">import</span> MyItem<span class="token keyword">class</span> <span class="token class-name">mySpider</span><span class="token punctuation">(</span>scrapy<span class="token punctuation">.</span>spiders<span class="token punctuation">.</span>Spider<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token comment" spellcheck="true"># 爬虫名，须与begin.py中相同。无须和项目名相同，这里只是为了方便</span>    name <span class="token operator">=</span> <span class="token string">"lianjia"</span>    <span class="token comment" spellcheck="true"># 允许域名</span>    allowed_domains <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">"bj.fang.lianjia.com"</span><span class="token punctuation">]</span>    <span class="token comment" spellcheck="true"># 新建爬取链接为空列表</span>    start_urls <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>    <span class="token keyword">if</span> page <span class="token operator">>=</span> <span class="token number">1</span><span class="token punctuation">:</span>        <span class="token keyword">for</span> i <span class="token keyword">in</span> range<span class="token punctuation">(</span><span class="token number">1</span> <span class="token punctuation">,</span> page<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">:</span>            <span class="token comment" spellcheck="true"># 依次将第1页到第page页放入开始连接队列</span>            start_urls<span class="token punctuation">.</span>append<span class="token punctuation">(</span><span class="token string">"https://bj.fang.lianjia.com/loupan/nhs1pg{}"</span><span class="token punctuation">.</span>format<span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token keyword">else</span><span class="token punctuation">:</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"page must >= 1"</span><span class="token punctuation">)</span>    <span class="token keyword">def</span> <span class="token function">parse</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> response<span class="token punctuation">)</span><span class="token punctuation">:</span>        item <span class="token operator">=</span> MyItem <span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token comment" spellcheck="true"># 迭代爬取每个li区块</span>        <span class="token keyword">for</span> each <span class="token keyword">in</span> response<span class="token punctuation">.</span>xpath<span class="token punctuation">(</span><span class="token string">"/html/body/div[4]/ul[2]/*"</span><span class="token punctuation">)</span><span class="token punctuation">:</span>            item<span class="token punctuation">[</span><span class="token string">'name'</span><span class="token punctuation">]</span> <span class="token operator">=</span> each<span class="token punctuation">.</span>xpath<span class="token punctuation">(</span><span class="token string">"div/div[1]/a/text()"</span><span class="token punctuation">)</span><span class="token punctuation">.</span>extract<span class="token punctuation">(</span><span class="token punctuation">)</span>            item<span class="token punctuation">[</span><span class="token string">'resblock_type'</span><span class="token punctuation">]</span> <span class="token operator">=</span> each<span class="token punctuation">.</span>xpath<span class="token punctuation">(</span><span class="token string">'div/div[1]/span[@class="resblock-type"]/text()'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>extract<span class="token punctuation">(</span><span class="token punctuation">)</span>            item<span class="token punctuation">[</span><span class="token string">'sale_status'</span><span class="token punctuation">]</span> <span class="token operator">=</span> each<span class="token punctuation">.</span>xpath<span class="token punctuation">(</span><span class="token string">'div/div[1]/span[@class="sale-status"]/text()'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>extract<span class="token punctuation">(</span><span class="token punctuation">)</span>            item<span class="token punctuation">[</span><span class="token string">'location0'</span><span class="token punctuation">]</span> <span class="token operator">=</span> each<span class="token punctuation">.</span>xpath<span class="token punctuation">(</span><span class="token string">'div/div[2]/span[1]/text()'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>extract<span class="token punctuation">(</span><span class="token punctuation">)</span>            item<span class="token punctuation">[</span><span class="token string">'location1'</span><span class="token punctuation">]</span> <span class="token operator">=</span> each<span class="token punctuation">.</span>xpath<span class="token punctuation">(</span><span class="token string">'div/div[2]/span[2]/text()'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>extract<span class="token punctuation">(</span><span class="token punctuation">)</span>            item<span class="token punctuation">[</span><span class="token string">'location2'</span><span class="token punctuation">]</span> <span class="token operator">=</span> each<span class="token punctuation">.</span>xpath<span class="token punctuation">(</span><span class="token string">'div/div[2]/a/text()'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>extract<span class="token punctuation">(</span><span class="token punctuation">)</span>            item<span class="token punctuation">[</span><span class="token string">'num_room'</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>            <span class="token keyword">for</span> room <span class="token keyword">in</span> each<span class="token punctuation">.</span>xpath<span class="token punctuation">(</span><span class="token string">'div/a/*'</span><span class="token punctuation">)</span><span class="token punctuation">:</span>                item<span class="token punctuation">[</span><span class="token string">'num_room'</span><span class="token punctuation">]</span> <span class="token operator">+=</span> room<span class="token punctuation">.</span>xpath<span class="token punctuation">(</span><span class="token string">'text()'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>extract<span class="token punctuation">(</span><span class="token punctuation">)</span>                <span class="token comment" spellcheck="true"># 去除掉列表中为'/'的元素</span>                <span class="token keyword">if</span> item<span class="token punctuation">[</span><span class="token string">'num_room'</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token string">'/'</span><span class="token punctuation">:</span>                    <span class="token keyword">del</span> item<span class="token punctuation">[</span><span class="token string">'num_room'</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span>            item<span class="token punctuation">[</span><span class="token string">'area'</span><span class="token punctuation">]</span> <span class="token operator">=</span> each<span class="token punctuation">.</span>xpath<span class="token punctuation">(</span><span class="token string">'div/div[3]/span/text()'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>extract<span class="token punctuation">(</span><span class="token punctuation">)</span>            item<span class="token punctuation">[</span><span class="token string">'price_pre_spm'</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">'均价{}元/平方米'</span><span class="token punctuation">.</span>format<span class="token punctuation">(</span>each<span class="token punctuation">.</span>xpath<span class="token punctuation">(</span><span class="token string">'div/div[6]/div[1]/span[1]/text()'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>extract<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">]</span>            item<span class="token punctuation">[</span><span class="token string">'price_pre_suite'</span><span class="token punctuation">]</span> <span class="token operator">=</span> each<span class="token punctuation">.</span>xpath<span class="token punctuation">(</span><span class="token string">'div/div[6]/div[2]/text()'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>extract<span class="token punctuation">(</span><span class="token punctuation">)</span>            <span class="token comment" spellcheck="true"># 传递数据</span>            <span class="token keyword">yield</span> item<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="更改setting-py"><a href="#更改setting-py" class="headerlink" title="更改setting.py"></a>更改<code>setting.py</code></h3><pre class="line-numbers language-python"><code class="language-python"><span class="token comment" spellcheck="true"># 不遵守机器人协议</span>ROBOTSTXT_OBEY <span class="token operator">=</span> <span class="token boolean">False</span>BOT_NAME <span class="token operator">=</span> <span class="token string">'lianjia'</span>SPIDER_MODULES <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">'lianjia.spiders'</span><span class="token punctuation">]</span>NEWSPIDER_MODULE <span class="token operator">=</span> <span class="token string">'lianjia.spiders'</span><span class="token comment" spellcheck="true"># 开启管道</span>ITEM_PIPELINES <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string">'lianjia.pipelines.MyPipeline'</span><span class="token punctuation">:</span> <span class="token number">300</span><span class="token punctuation">,</span><span class="token punctuation">}</span><span class="token comment" spellcheck="true"># 客户端伪装</span>USER_AGENT <span class="token operator">=</span> <span class="token string">'Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/75.0.3770.80 Safari/537.36'</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="更改pipelines-py"><a href="#更改pipelines-py" class="headerlink" title="更改pipelines.py"></a>更改<code>pipelines.py</code></h3><pre class="line-numbers language-python"><code class="language-python"><span class="token keyword">import</span> json<span class="token keyword">class</span> <span class="token class-name">MyPipeline</span> <span class="token punctuation">(</span>object<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token comment" spellcheck="true"># 打开文件</span>    <span class="token keyword">def</span> open_spider <span class="token punctuation">(</span>self<span class="token punctuation">,</span>spider<span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">try</span><span class="token punctuation">:</span>            self<span class="token punctuation">.</span>file <span class="token operator">=</span> open<span class="token punctuation">(</span><span class="token string">'MyData.json '</span><span class="token punctuation">,</span> <span class="token string">"w"</span><span class="token punctuation">,</span> encoding<span class="token operator">=</span><span class="token string">"utf-8"</span><span class="token punctuation">)</span>        <span class="token keyword">except</span> Exception <span class="token keyword">as</span> err<span class="token punctuation">:</span>            <span class="token keyword">print</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span>    <span class="token comment" spellcheck="true"># 写入</span>    <span class="token keyword">def</span> process_item <span class="token punctuation">(</span>self<span class="token punctuation">,</span> item<span class="token punctuation">,</span> spider<span class="token punctuation">)</span><span class="token punctuation">:</span>        dict_item <span class="token operator">=</span> dict <span class="token punctuation">(</span>item<span class="token punctuation">)</span>        <span class="token comment" spellcheck="true"># 生成 json 串</span>        json_str <span class="token operator">=</span> json<span class="token punctuation">.</span>dumps<span class="token punctuation">(</span>dict_item <span class="token punctuation">,</span> ensure_ascii<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">"\n"</span>         self<span class="token punctuation">.</span>file<span class="token punctuation">.</span>write<span class="token punctuation">(</span>json_str<span class="token punctuation">)</span>        <span class="token keyword">return</span> item    <span class="token comment" spellcheck="true"># 关闭文件</span>    <span class="token keyword">def</span> close_spider <span class="token punctuation">(</span>self<span class="token punctuation">,</span>spider<span class="token punctuation">)</span><span class="token punctuation">:</span>        self<span class="token punctuation">.</span>file<span class="token punctuation">.</span>close<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="运行爬虫"><a href="#运行爬虫" class="headerlink" title="运行爬虫"></a>运行爬虫</h2><p>运行<code>begin.py</code>，成功爬取到数据。这里只列举前三条。</p><pre class="line-numbers language-json"><code class="language-json"><span class="token punctuation">{</span><span class="token property">"name"</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">"金地旭辉·江山风华"</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token property">"resblock_type"</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">"住宅"</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token property">"sale_status"</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">"在售"</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token property">"location0"</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">"大兴"</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token property">"location1"</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">"黄村中"</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token property">"location2"</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">"地铁4号线清源路站西侧800米"</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token property">"num_room"</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">"3室"</span><span class="token punctuation">,</span> <span class="token string">"4室"</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token property">"area"</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">"建面 89-136㎡"</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token property">"price_pre_spm"</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">"均价55800元/平方米"</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token property">"price_pre_suite"</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">"总价480万/套"</span><span class="token punctuation">]</span><span class="token punctuation">}</span><span class="token punctuation">{</span><span class="token property">"name"</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">"中海寰宇时代"</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token property">"resblock_type"</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">"住宅"</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token property">"sale_status"</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">"在售"</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token property">"location0"</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">"大兴"</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token property">"location1"</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">"瀛海"</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token property">"location2"</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">"黄亦路与京福路西南口交叉口"</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token property">"num_room"</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">"2室"</span><span class="token punctuation">,</span> <span class="token string">"3室"</span><span class="token punctuation">,</span> <span class="token string">"4室"</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token property">"area"</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">"建面 48-112㎡"</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token property">"price_pre_spm"</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">"均价52449元/平方米"</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token property">"price_pre_suite"</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">"总价350万/套"</span><span class="token punctuation">]</span><span class="token punctuation">}</span><span class="token punctuation">{</span><span class="token property">"name"</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">"合景天汇广场"</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token property">"resblock_type"</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">"住宅"</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token property">"sale_status"</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">"在售"</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token property">"location0"</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">"顺义"</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token property">"location1"</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">"马坡"</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token property">"location2"</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">"昌金路与通顺路交汇处天汇广场售楼处"</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token property">"num_room"</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">"3室"</span><span class="token punctuation">,</span> <span class="token string">"4室"</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token property">"area"</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">"建面 89-117㎡"</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token property">"price_pre_spm"</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">"均价38000元/平方米"</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token property">"price_pre_suite"</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">"总价330万/套"</span><span class="token punctuation">]</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h2 id="提示"><a href="#提示" class="headerlink" title="提示"></a>提示</h2><p>请不要把page改得过大，否则可能会封禁ip。<br>如果有需求，请在setting.py中添加<code>DOWNLOAD_DELAY = 1</code>来设置每页延迟1s爬取。</p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> 编程实例 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
            <tag> 学堂在线《Python数据分析与可视化》 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux安装autosub踩坑“ERROR: Package &#39;cachetools&#39; requires a different Python: 2.7.13 not in &#39;~= 3.5&#39;”</title>
      <link href="/post/error-autosub/"/>
      <url>/post/error-autosub/</url>
      
        <content type="html"><![CDATA[<p>今天心血来潮，想在Debian上安装<code>autosub</code>，项目地址：<a href="https://github.com/agermanidis/autosub" target="_blank" rel="noopener">https://github.com/agermanidis/autosub</a><br>这是一个自动语音转文字的软件，基于python编写，以后有机会再介绍用法。</p><blockquote><p>安装<code>autosub</code>：</p></blockquote><pre class="line-numbers language-shell"><code class="language-shell">pip install autosub<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><blockquote><p>在安装过程中遇到问题，报错：</p></blockquote><pre class="line-numbers language-shell"><code class="language-shell">ERROR: Package 'cachetools' requires a different Python: 2.7.13 not in '~= 3.5'<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>意思是python版本应该是3.5左右而非2.7.13<br><em>这里我疑惑了很久，是因为我英语太差，把它错误理解成了需要2.7.13而不是3.5</em></p><h2 id="踩坑过程，请勿轻易模仿"><a href="#踩坑过程，请勿轻易模仿" class="headerlink" title="踩坑过程，请勿轻易模仿"></a>踩坑过程，请勿轻易模仿</h2><blockquote><p>输入<code>pip -V</code>查看当前的python版本，得到：</p></blockquote><pre class="line-numbers language-shell"><code class="language-shell">pip 20.0.2 from /usr/local/lib/python2.7/dist-packages/pip (python 2.7)<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>可见python版本确实过低。我确定已经安装了python3.5，默认路径在<code>/usr/bin/</code>，请首先确保你已经安装了新版的python</p><blockquote><p>为新版python配置pip：<br>编辑文件<code>/usr/location/bin/pip</code>，第一行改为<code>#!/usr/bin/python3</code><br>如果该版本python未安装pip，执行：</p></blockquote><pre class="line-numbers language-shell"><code class="language-shell">wget https://bootstrap.pypa.io/get-pip.pypython3 get-pip.py<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>再运行autosub安装命令果然没有报错了<br><strong>但是！经判断，autosub是基于python2的项目，在python3.5下无法运行！</strong><br>如果你也不幸踩到这个坑，先把已经安装的autosub卸载</p><h2 id="正确解法"><a href="#正确解法" class="headerlink" title="正确解法"></a>正确解法</h2><p>问题出现的原因是<code>cachetools</code>包更新至<code>4.0.0</code>，此版本不支持2.7。我们<strong>只需手动安装低版本</strong>的<code>cachetools</code>包</p><blockquote><p>查看<code>cachetools</code>包历史版本</p></blockquote><pre class="line-numbers language-shell"><code class="language-shell">pip install cachetools==?<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><blockquote><p>出现信息：</p></blockquote><pre class="line-numbers language-shell"><code class="language-shell">Looking in indexes: https://mirrors.aliyun.com/pypi/simpleERROR: Could not find a version that satisfies the requirement cachetools==? (from versions: 0.0.0, 0.1.0, 0.2.0, 0.3.0, 0.3.1, 0.4.0, 0.5.0, 0.5.1, 0.6.0, 0.7.0, 0.7.1, 0.8.0, 0.8.1, 0.8.2, 1.0.0, 1.0.1, 1.0.2, 1.0.3, 1.1.0, 1.1.1, 1.1.2, 1.1.3, 1.1.4, 1.1.5, 1.1.6, 2.0.0, 2.0.1, 2.1.0, 3.0.0, 3.1.0, 3.1.1, 4.0.0)ERROR: No matching distribution found for cachetools==?<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><blockquote><p>尝试安装<code>3.1.1</code></p></blockquote><pre class="line-numbers language-shell"><code class="language-shell">pip install cachetools==3.1.1<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>安装成功后，再运行安装<code>autosub</code>命令，程序成功安装并正常运行！</p><hr><h2 id="更新"><a href="#更新" class="headerlink" title="更新"></a>更新</h2><p>受大佬<a href="https://github.com/BingLingGroup" target="_blank" rel="noopener">@BingLingGroup</a>指点，得知最新版的autosub支持python3，由于pip源更新慢于作者仓库，所以直接从github获取</p><blockquote><p>运行以下命令执行安装即可</p></blockquote><pre class="line-numbers language-shell"><code class="language-shell">pip3 install git+https://github.com/agermanidis/autosub.git@master<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>问题最新进展 <a href="https://github.com/agermanidis/autosub/issues/171" target="_blank" rel="noopener">https://github.com/agermanidis/autosub/issues/171</a></p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> 踩坑 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 命令行 </tag>
            
            <tag> Linux </tag>
            
            <tag> python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>基于C语言用递归算法实现汉诺塔解法的计算</title>
      <link href="/post/c-hanoi/"/>
      <url>/post/c-hanoi/</url>
      
        <content type="html"><![CDATA[<p>基于C语言用递归算法实现汉诺塔解法的计算<br>如有不懂欢迎提问</p><pre class="line-numbers language-c"><code class="language-c"><span class="token macro property">#<span class="token directive keyword">include</span><span class="token string">&lt;stdio.h></span></span><span class="token keyword">int</span> steps <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//三根柱A(用0表示)，B(用1表示)，C(用2表示)，起始A，目标C</span><span class="token keyword">void</span> <span class="token function">print</span><span class="token punctuation">(</span><span class="token keyword">int</span> num<span class="token punctuation">,</span> <span class="token keyword">int</span> get<span class="token punctuation">,</span> <span class="token keyword">int</span> put<span class="token punctuation">)</span> <span class="token punctuation">{</span>    steps<span class="token operator">++</span><span class="token punctuation">;</span>    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"move disk%3d from %c to %c\n"</span><span class="token punctuation">,</span> num<span class="token punctuation">,</span> get <span class="token operator">==</span> <span class="token number">0</span> <span class="token operator">?</span> <span class="token string">'A'</span> <span class="token punctuation">:</span> get <span class="token operator">==</span> <span class="token number">1</span> <span class="token operator">?</span> <span class="token string">'B'</span> <span class="token punctuation">:</span> <span class="token string">'C'</span><span class="token punctuation">,</span> put <span class="token operator">==</span> <span class="token number">0</span> <span class="token operator">?</span> <span class="token string">'A'</span> <span class="token punctuation">:</span> put <span class="token operator">==</span> <span class="token number">1</span> <span class="token operator">?</span> <span class="token string">'B'</span> <span class="token punctuation">:</span> <span class="token string">'C'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">void</span> <span class="token function">mv</span><span class="token punctuation">(</span><span class="token keyword">int</span> num<span class="token punctuation">,</span><span class="token keyword">int</span> a<span class="token punctuation">,</span><span class="token keyword">int</span> b<span class="token punctuation">,</span><span class="token keyword">int</span> c<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>num <span class="token operator">==</span> <span class="token number">1</span><span class="token punctuation">)</span>        <span class="token function">print</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> a<span class="token punctuation">,</span> c<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">else</span> <span class="token punctuation">{</span>        <span class="token function">mv</span><span class="token punctuation">(</span>num <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">,</span> a<span class="token punctuation">,</span> c<span class="token punctuation">,</span> b<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token function">print</span><span class="token punctuation">(</span>num<span class="token punctuation">,</span> a<span class="token punctuation">,</span> c<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token function">mv</span><span class="token punctuation">(</span>num <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">,</span> b<span class="token punctuation">,</span> a<span class="token punctuation">,</span> c<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">int</span> n<span class="token punctuation">;</span>    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"Input the number of disks:"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">scanf</span><span class="token punctuation">(</span><span class="token string">"%d"</span><span class="token punctuation">,</span> <span class="token operator">&amp;</span>n<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"The setps to moving %3d disks:\n"</span><span class="token punctuation">,</span>n<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">mv</span><span class="token punctuation">(</span>n<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"Complelt in %d steps!\n"</span><span class="token punctuation">,</span>steps<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https://boyinthesun.oss-cn-beijing.aliyuncs.com/img/c-hanoi(1).png?x-oss-process=style/watermark" alt="结果展示"></p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> 编程实例 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C语言 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>基于C语言用递归算法实现马踏棋盘解法的计算</title>
      <link href="/post/c-house/"/>
      <url>/post/c-house/</url>
      
        <content type="html"><![CDATA[<p>基于C语言用递归算法实现马踏棋盘解法的计算<br>如有不懂欢迎提问</p><pre class="line-numbers language-c"><code class="language-c"><span class="token macro property">#<span class="token directive keyword">include</span><span class="token string">&lt;stdio.h></span></span><span class="token macro property">#<span class="token directive keyword">define</span> X 7</span><span class="token comment" spellcheck="true">//棋盘x</span><span class="token macro property">#<span class="token directive keyword">define</span> Y 7</span><span class="token comment" spellcheck="true">//棋盘y</span><span class="token macro property">#<span class="token directive keyword">define</span> A 1</span><span class="token comment" spellcheck="true">//起始横坐标</span><span class="token macro property">#<span class="token directive keyword">define</span> B 1</span><span class="token comment" spellcheck="true">//起始纵坐标</span><span class="token keyword">void</span> <span class="token function">house</span> <span class="token punctuation">(</span><span class="token keyword">int</span> <span class="token punctuation">,</span> <span class="token keyword">int</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//递归求解，依次传入横纵坐标</span><span class="token keyword">void</span> <span class="token function">printboard</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//打印具体解法</span><span class="token keyword">void</span> <span class="token function">initialization</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//棋盘初始化</span><span class="token keyword">int</span> board<span class="token punctuation">[</span>X <span class="token operator">+</span> <span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">[</span>Y <span class="token operator">+</span> <span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//其中下标2至X+1或Y+1为棋盘</span><span class="token keyword">int</span> sum <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//解法总数</span><span class="token keyword">int</span> step <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//已走步数</span><span class="token keyword">int</span> move<span class="token punctuation">[</span><span class="token number">8</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token punctuation">{</span> <span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span> <span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token punctuation">{</span> <span class="token number">2</span><span class="token punctuation">,</span><span class="token number">1</span> <span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token punctuation">{</span> <span class="token number">1</span><span class="token punctuation">,</span><span class="token operator">-</span><span class="token number">2</span> <span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token punctuation">{</span> <span class="token number">2</span><span class="token punctuation">,</span><span class="token operator">-</span><span class="token number">1</span> <span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token punctuation">{</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span> <span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token punctuation">{</span> <span class="token operator">-</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">1</span> <span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token punctuation">{</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token operator">-</span><span class="token number">2</span> <span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token punctuation">{</span> <span class="token operator">-</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token operator">-</span><span class="token number">1</span> <span class="token punctuation">}</span> <span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//八种走法，依次为x坐标，y坐标</span><span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>X <span class="token operator">&lt;=</span> <span class="token number">2</span> <span class="token operator">||</span> Y <span class="token operator">&lt;=</span> <span class="token number">2</span> <span class="token operator">||</span> X <span class="token operator">*</span> Y <span class="token operator">></span> <span class="token number">10000</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token comment" spellcheck="true">//经测试，个人计算机计算10*10已经有些吃力</span>        <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"棋盘不合法!"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>A <span class="token operator">></span> X <span class="token operator">||</span> B <span class="token operator">></span> Y <span class="token operator">||</span> A <span class="token operator">&lt;=</span> <span class="token number">0</span> <span class="token operator">||</span> B <span class="token operator">&lt;=</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"初始坐标不合法!"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"当前为%d*%d棋盘，起始坐标(%d,%d)\n"</span><span class="token punctuation">,</span> X<span class="token punctuation">,</span> Y<span class="token punctuation">,</span> A<span class="token punctuation">,</span> B<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">initialization</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    board<span class="token punctuation">[</span>A <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">[</span>B <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token operator">++</span>step<span class="token punctuation">;</span>    <span class="token function">house</span><span class="token punctuation">(</span>A<span class="token punctuation">,</span> B<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"\n\n计算完毕!\n"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"当前为%d*%d棋盘，起始坐标(%d,%d)\n"</span><span class="token punctuation">,</span> X<span class="token punctuation">,</span> Y<span class="token punctuation">,</span> A<span class="token punctuation">,</span> B<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"共找到%d组解\n"</span><span class="token punctuation">,</span>sum<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">void</span> <span class="token function">initialization</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">int</span> i<span class="token punctuation">,</span> j<span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">//给棋盘赋值0，周围赋值-1即不可走</span>    <span class="token keyword">for</span> <span class="token punctuation">(</span>i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;=</span> X <span class="token operator">+</span> <span class="token number">3</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span>j <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> j <span class="token operator">&lt;=</span> Y <span class="token operator">+</span> <span class="token number">3</span><span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span>i <span class="token operator">==</span> <span class="token number">0</span> <span class="token operator">||</span> i <span class="token operator">==</span> <span class="token number">1</span> <span class="token operator">||</span> i <span class="token operator">==</span> X <span class="token operator">+</span> <span class="token number">3</span> <span class="token operator">||</span> i <span class="token operator">==</span> X <span class="token operator">+</span> <span class="token number">2</span> <span class="token operator">||</span> j <span class="token operator">==</span> <span class="token number">0</span> <span class="token operator">||</span> j <span class="token operator">==</span> <span class="token number">1</span> <span class="token operator">||</span> j <span class="token operator">==</span> Y <span class="token operator">+</span> <span class="token number">3</span> <span class="token operator">||</span> j <span class="token operator">==</span> Y <span class="token operator">+</span> <span class="token number">2</span><span class="token punctuation">)</span>                board<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span>            <span class="token keyword">else</span>                board<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span>    <span class="token keyword">return</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">void</span> <span class="token function">house</span><span class="token punctuation">(</span><span class="token keyword">int</span> a <span class="token punctuation">,</span> <span class="token keyword">int</span> b<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>step <span class="token operator">==</span> X<span class="token operator">*</span>Y<span class="token punctuation">)</span> <span class="token punctuation">{</span>        sum<span class="token operator">++</span><span class="token punctuation">;</span>        <span class="token function">printboard</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;=</span> <span class="token number">7</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>board<span class="token punctuation">[</span>a <span class="token operator">+</span> <span class="token number">1</span> <span class="token operator">+</span> move<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">[</span>b <span class="token operator">+</span> <span class="token number">1</span> <span class="token operator">+</span> move<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            step<span class="token operator">++</span><span class="token punctuation">;</span>            board<span class="token punctuation">[</span>a <span class="token operator">+</span> <span class="token number">1</span> <span class="token operator">+</span> move<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">[</span>b <span class="token operator">+</span> <span class="token number">1</span> <span class="token operator">+</span> move<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">]</span> <span class="token operator">=</span> step<span class="token punctuation">;</span>            <span class="token function">house</span><span class="token punctuation">(</span>a<span class="token operator">+</span>move<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span> b<span class="token operator">+</span>move<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            board<span class="token punctuation">[</span>a <span class="token operator">+</span> <span class="token number">1</span> <span class="token operator">+</span> move<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">[</span>b <span class="token operator">+</span> <span class="token number">1</span> <span class="token operator">+</span> move<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>            step<span class="token operator">--</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token comment" spellcheck="true">//制表符： ┌ ┬ ┐ ├ ┼ ┤ └ ┴ ┘ ─ │</span><span class="token keyword">void</span> <span class="token function">printboard</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">int</span> i<span class="token punctuation">,</span> j<span class="token punctuation">,</span> k<span class="token punctuation">;</span>    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"\n第%d种解法：\n"</span><span class="token punctuation">,</span>sum<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"┌───"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">for</span> <span class="token punctuation">(</span>i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&lt;=</span> Y<span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span>         <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"┬───"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"┐\n"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">for</span> <span class="token punctuation">(</span> i <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">;</span> i <span class="token operator">&lt;=</span> X <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span> j <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">;</span> j <span class="token operator">&lt;=</span> Y <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span>             <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"│%3.2d"</span><span class="token punctuation">,</span> board<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"│\n"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>i <span class="token operator">&lt;=</span> X<span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"├───"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">for</span><span class="token punctuation">(</span>k<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span>k<span class="token operator">&lt;=</span>Y<span class="token number">-1</span><span class="token punctuation">;</span>k<span class="token operator">++</span><span class="token punctuation">)</span>                <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"┼───"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"┤\n"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span>    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"└───"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">for</span> <span class="token punctuation">(</span>i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&lt;=</span> Y <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span>        <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"┴───"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"┘\n"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">return</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>上文为了方便使用define来确定棋盘尺寸X、Y。如果想用scanf来确定，需要用到动态数组，并且需要向函数传递地址</p><pre class="line-numbers language-c"><code class="language-c"><span class="token macro property">#<span class="token directive keyword">include</span><span class="token string">&lt;stdio.h></span></span><span class="token macro property">#<span class="token directive keyword">include</span><span class="token string">&lt;stdlib.h></span></span><span class="token comment" spellcheck="true">//包含malloc</span><span class="token keyword">void</span> <span class="token function">house</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">,</span> <span class="token keyword">int</span><span class="token punctuation">,</span> <span class="token keyword">int</span><span class="token operator">*</span><span class="token operator">*</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//递归求解，依次传入横纵坐标ab，二维数组指针</span><span class="token keyword">void</span> <span class="token function">printboard</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token operator">*</span><span class="token operator">*</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//传入二维数组指针，打印具体解法</span><span class="token keyword">void</span> <span class="token function">initialization</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token operator">*</span><span class="token operator">*</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//棋盘初始化，依次传入二维数组指针</span><span class="token keyword">int</span> sum <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//解法总数</span><span class="token keyword">int</span> step <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//已走步数</span><span class="token keyword">int</span> move<span class="token punctuation">[</span><span class="token number">8</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token punctuation">{</span> <span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span> <span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token punctuation">{</span> <span class="token number">2</span><span class="token punctuation">,</span><span class="token number">1</span> <span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token punctuation">{</span> <span class="token number">1</span><span class="token punctuation">,</span><span class="token operator">-</span><span class="token number">2</span> <span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token punctuation">{</span> <span class="token number">2</span><span class="token punctuation">,</span><span class="token operator">-</span><span class="token number">1</span> <span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token punctuation">{</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span> <span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token punctuation">{</span> <span class="token operator">-</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">1</span> <span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token punctuation">{</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token operator">-</span><span class="token number">2</span> <span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token punctuation">{</span> <span class="token operator">-</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token operator">-</span><span class="token number">1</span> <span class="token punctuation">}</span> <span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//八种走法，依次为x坐标，y坐标</span><span class="token keyword">int</span> x<span class="token punctuation">,</span> y<span class="token punctuation">;</span><span class="token comment" spellcheck="true">//定义全局变量</span><span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"马踏棋盘v2.0\n"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"请输入棋盘大小x*y：\n"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"x="</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">scanf</span><span class="token punctuation">(</span><span class="token string">"%d"</span><span class="token punctuation">,</span> <span class="token operator">&amp;</span>x<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"y="</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">scanf</span><span class="token punctuation">(</span><span class="token string">"%d"</span><span class="token punctuation">,</span> <span class="token operator">&amp;</span>y<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">int</span> a<span class="token punctuation">,</span> b<span class="token punctuation">;</span><span class="token comment" spellcheck="true">//无需全局变量</span>    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"请输入起始位置(a, b)，其中最小为(1, 1)：\n"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"a="</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">scanf</span><span class="token punctuation">(</span><span class="token string">"%d"</span><span class="token punctuation">,</span> <span class="token operator">&amp;</span>a<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"b="</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">scanf</span><span class="token punctuation">(</span><span class="token string">"%d"</span><span class="token punctuation">,</span> <span class="token operator">&amp;</span>b<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">int</span> <span class="token operator">*</span><span class="token operator">*</span>board<span class="token punctuation">;</span>    board <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">int</span><span class="token operator">*</span><span class="token operator">*</span><span class="token punctuation">)</span><span class="token function">malloc</span><span class="token punctuation">(</span><span class="token keyword">sizeof</span><span class="token punctuation">(</span><span class="token keyword">int</span> <span class="token operator">*</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token punctuation">(</span>x <span class="token operator">+</span> <span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> x <span class="token operator">+</span> <span class="token number">4</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        board<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">int</span><span class="token operator">*</span><span class="token punctuation">)</span><span class="token function">malloc</span><span class="token punctuation">(</span><span class="token keyword">sizeof</span><span class="token punctuation">(</span><span class="token keyword">int</span> <span class="token operator">*</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token punctuation">(</span>y <span class="token operator">+</span> <span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">//相当于声明了动态数组board[x + 4][y + 4];其中下标2至X+1或Y+1为棋盘</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>x <span class="token operator">&lt;=</span> <span class="token number">2</span> <span class="token operator">||</span> x <span class="token operator">&lt;=</span> <span class="token number">2</span> <span class="token operator">||</span> x <span class="token operator">*</span> y <span class="token operator">></span> <span class="token number">10000</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token comment" spellcheck="true">//经测试，由于递归算法，计算10*10已经极为吃力</span>        <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"棋盘不合法!"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>a <span class="token operator">></span> x <span class="token operator">||</span> a <span class="token operator">></span> y <span class="token operator">||</span> a <span class="token operator">&lt;=</span> <span class="token number">0</span> <span class="token operator">||</span> a <span class="token operator">&lt;=</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"初始坐标不合法!"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"当前为%d*%d棋盘，起始坐标(%d,%d)\n"</span><span class="token punctuation">,</span> x<span class="token punctuation">,</span> y<span class="token punctuation">,</span> a<span class="token punctuation">,</span> b<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">initialization</span><span class="token punctuation">(</span>board<span class="token punctuation">)</span><span class="token punctuation">;</span>    board<span class="token punctuation">[</span>a <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">[</span>a <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token operator">++</span>step<span class="token punctuation">;</span>    <span class="token function">house</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span> b<span class="token punctuation">,</span> board<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"\n\n计算完毕!\n"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"当前为%d*%d棋盘，起始坐标(%d,%d)\n"</span><span class="token punctuation">,</span> x<span class="token punctuation">,</span> y<span class="token punctuation">,</span> a<span class="token punctuation">,</span> b<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"共找到%d组解\n"</span><span class="token punctuation">,</span> sum<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">void</span> <span class="token function">initialization</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token operator">*</span><span class="token operator">*</span> board<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">int</span> i<span class="token punctuation">,</span> j<span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">//给棋盘赋值0，周围赋值-1即不可走</span>    <span class="token keyword">for</span> <span class="token punctuation">(</span>i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;=</span> x <span class="token operator">+</span> <span class="token number">3</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span>j <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> j <span class="token operator">&lt;=</span> y <span class="token operator">+</span> <span class="token number">3</span><span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span>i <span class="token operator">==</span> <span class="token number">0</span> <span class="token operator">||</span> i <span class="token operator">==</span> <span class="token number">1</span> <span class="token operator">||</span> i <span class="token operator">==</span> x <span class="token operator">+</span> <span class="token number">3</span> <span class="token operator">||</span> i <span class="token operator">==</span> x <span class="token operator">+</span> <span class="token number">2</span> <span class="token operator">||</span> j <span class="token operator">==</span> <span class="token number">0</span> <span class="token operator">||</span> j <span class="token operator">==</span> <span class="token number">1</span> <span class="token operator">||</span> j <span class="token operator">==</span> y <span class="token operator">+</span> <span class="token number">3</span> <span class="token operator">||</span> j <span class="token operator">==</span> y <span class="token operator">+</span> <span class="token number">2</span><span class="token punctuation">)</span>                board<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span>            <span class="token keyword">else</span>                board<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span>    <span class="token keyword">return</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">void</span> <span class="token function">house</span><span class="token punctuation">(</span><span class="token keyword">int</span> a<span class="token punctuation">,</span> <span class="token keyword">int</span> b<span class="token punctuation">,</span> <span class="token keyword">int</span><span class="token operator">*</span><span class="token operator">*</span> board<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>step <span class="token operator">==</span> x<span class="token operator">*</span>y<span class="token punctuation">)</span> <span class="token punctuation">{</span>        sum<span class="token operator">++</span><span class="token punctuation">;</span>        <span class="token function">printboard</span><span class="token punctuation">(</span>board<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;=</span> <span class="token number">7</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>board<span class="token punctuation">[</span>a <span class="token operator">+</span> <span class="token number">1</span> <span class="token operator">+</span> move<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">[</span>b <span class="token operator">+</span> <span class="token number">1</span> <span class="token operator">+</span> move<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            step<span class="token operator">++</span><span class="token punctuation">;</span>            board<span class="token punctuation">[</span>a <span class="token operator">+</span> <span class="token number">1</span> <span class="token operator">+</span> move<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">[</span>b <span class="token operator">+</span> <span class="token number">1</span> <span class="token operator">+</span> move<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">]</span> <span class="token operator">=</span> step<span class="token punctuation">;</span>            <span class="token function">house</span><span class="token punctuation">(</span>a <span class="token operator">+</span> move<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span> b <span class="token operator">+</span> move<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span> board<span class="token punctuation">)</span><span class="token punctuation">;</span>            board<span class="token punctuation">[</span>a <span class="token operator">+</span> <span class="token number">1</span> <span class="token operator">+</span> move<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">[</span>b <span class="token operator">+</span> <span class="token number">1</span> <span class="token operator">+</span> move<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>            step<span class="token operator">--</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token comment" spellcheck="true">//制表符： ┌ ┬ ┐ ├ ┼ ┤ └ ┴ ┘ ─ │</span><span class="token keyword">void</span> <span class="token function">printboard</span><span class="token punctuation">(</span><span class="token keyword">int</span> <span class="token operator">*</span><span class="token operator">*</span>board<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">int</span> i<span class="token punctuation">,</span> j<span class="token punctuation">,</span> k<span class="token punctuation">;</span>    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"\n第%d种解法：\n"</span><span class="token punctuation">,</span> sum<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"┌───"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">for</span> <span class="token punctuation">(</span>i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&lt;=</span> y <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span>        <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"┬───"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"┐\n"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">for</span> <span class="token punctuation">(</span>i <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">;</span> i <span class="token operator">&lt;=</span> x <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span>j <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">;</span> j <span class="token operator">&lt;=</span> y <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span>            <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"│%3.2d"</span><span class="token punctuation">,</span> board<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"│\n"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>i <span class="token operator">&lt;=</span> x<span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"├───"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">for</span> <span class="token punctuation">(</span>k <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> k <span class="token operator">&lt;=</span> y <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span> k<span class="token operator">++</span><span class="token punctuation">)</span>                <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"┼───"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"┤\n"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span>    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"└───"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">for</span> <span class="token punctuation">(</span>i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&lt;=</span> y <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span>        <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"┴───"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"┘\n"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">return</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https://boyinthesun.oss-cn-beijing.aliyuncs.com/img/c_house(1).png?x-oss-process=style/watermark" alt="结果展示"></p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> 编程实例 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C语言 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Windows共享文件夹————Windows互传文件</title>
      <link href="/post/sharefolder/"/>
      <url>/post/sharefolder/</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>在同一局域网下，或其中一台电脑有热点功能，甚至只有一根网线时，在Windows互传文件最方便的方式便是利用共享文件夹。共享文件夹支持的系统很多，从WinME到Win10都可以相互传输文件。在win7时微软推出家庭组以方便家庭或办公环境下互传文件，可惜到了win10就被废弃了。本文以win10为例，其他系统大同小异。<strong>仅限两台或以上Windows系统电脑</strong></p><h2 id="配置到同一网段"><a href="#配置到同一网段" class="headerlink" title="配置到同一网段"></a>配置到同一网段</h2><p>首先要保证两机处于<strong>同一局域网</strong>下。如果是使用路由器或热点<strong>务必跳过</strong>以下步骤。<strong>直接使用网线连接时需要额外配置</strong>。<br>在以前，两台电脑连接需使用双绞线。但是现在的网卡一般都有倒置功能，使用普通网线即可。<br>连接后，在任意机上找到<code>控制面板-&gt;网络和 Internet-&gt;网络和共享中心</code>，点击<code>以太网</code><br><img src="https://boyinthesun.oss-cn-beijing.aliyuncs.com/img/sharefolder(1).png?x-oss-process=style/watermark" alt=""><br>点击<code>属性</code><br><img src="https://boyinthesun.oss-cn-beijing.aliyuncs.com/img/sharefolder(2).png?x-oss-process=style/watermark" alt=""><br>选择<code>IPV4协议</code>，点击<code>属性</code><br><img src="https://boyinthesun.oss-cn-beijing.aliyuncs.com/img/sharefolder(3).png?x-oss-process=style/watermark" alt=""><br>按照如图填写，DNS留空即可<br><img src="https://boyinthesun.oss-cn-beijing.aliyuncs.com/img/sharefolder(4).png?x-oss-process=style/watermark" alt=""><br>到另一机上到同样界面，如图填写，仅更改IP地址。最后一位也可以改成大于1小于255的任意值<br><img src="https://boyinthesun.oss-cn-beijing.aliyuncs.com/img/sharefolder(5).png?x-oss-process=style/watermark" alt=""><br><strong>最后别忘了确定并关闭页面，否则不会生效</strong></p><h2 id="设置共享文件夹"><a href="#设置共享文件夹" class="headerlink" title="设置共享文件夹"></a>设置共享文件夹</h2><p>到要共享文件夹的电脑上，<code>右键文件夹-&gt;属性-&gt;共享-&gt;共享</code>，选择everyone后点击共享即可，<strong>此时无需密码，整个网络的设备都可访问甚至更改文件</strong>。如果想设置成需要密码，可使用本机用户或者新建用户。若想改为仅读取等，更改权限级别即可。<br><img src="https://boyinthesun.oss-cn-beijing.aliyuncs.com/img/sharefolder(8).png?x-oss-process=style/watermark" alt=""></p><h2 id="查看IP地址"><a href="#查看IP地址" class="headerlink" title="查看IP地址"></a>查看IP地址</h2><p>找到<code>控制面板-&gt;网络和 Internet-&gt;网络和共享中心</code>，点击正在使用的网络，点击详情<br><img src="https://boyinthesun.oss-cn-beijing.aliyuncs.com/img/sharefolder(6).png?x-oss-process=style/watermark" alt=""><br>我们需要的是IPv4地址，记录下来，<strong>每人显示是不同的</strong>，如果按照上文来操作，应为<code>192.168.8.1</code>。图中是<code>192.168.1.100</code>。<br><img src="https://boyinthesun.oss-cn-beijing.aliyuncs.com/img/sharefolder(7).png?x-oss-process=style/watermark" alt=""><br>到另一台机子上，按快捷键<code>Win+R</code>打开运行窗口，输入IP地址并回车，要加上<code>\\</code>，如<code>\\192.168.1.100</code>。<br><img src="https://boyinthesun.oss-cn-beijing.aliyuncs.com/img/sharefolder(9).png?x-oss-process=style/watermark" alt=""><br>如果需要，输入该机用户名密码。至此，<strong>共享文件夹配置完成</strong>。为了方便，还可以将文件夹<strong>设置快捷方式</strong>。</p><h2 id="说在最后"><a href="#说在最后" class="headerlink" title="说在最后"></a>说在最后</h2><p>如果你<strong>手动配置了IP地址</strong>，可能会导致下次连接其他网络出现无法访问的情况，别忘了改为<code>自动获得IP地址</code>。</p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> 小技巧 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Windows </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Vmware安装详解</title>
      <link href="/post/vm/"/>
      <url>/post/vm/</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p><strong>Vmware Workstation</strong>几乎是目前公认的Windows系统最好用的虚拟机软件，简称vm。</p><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p>目前计算机的硬件基本都符合要求，对于虚拟机，影响性能的主要是内存的大小和频率（推荐2GB以上）、存储介质（固态硬盘最好）、cpu、显卡等。请确认操作系统是<strong>64位</strong>，否则请下载<strong>vm10</strong>版本<br>下载<strong>vm15安装包</strong>，[<a href="https://my.vmware.com/cn/web/vmware/details?downloadGroup=WKST-1551-WIN&amp;productId=799&amp;rPId=39513" target="_blank" rel="noopener">官方下载链接</a>][<a href="http://down-ww3.newasp.net/pcdown/big/vmware15pro.rar" target="_blank" rel="noopener">备用下载链接1</a>][<a href="http://down-ww3.7down.net/pcdown/soft/xiazai/vmware-pro15.zip" target="_blank" rel="noopener">备用下载链接2</a>]<br>然后运行.exe安装程序<br>一直下一步，别忘了勾选<strong>接受条款</strong><br><img src="https://boyinthesun.oss-cn-beijing.aliyuncs.com/img/vm(1).png?x-oss-process=style/watermark" alt=""><br>安装路径自己选择，只是程序本体的安装路径，虚拟机路径可在以后单独设置。<br>增强型键盘可以不勾选，影响不大。勾选后可以绕过Windows系统直接把按键传输给虚拟机，比如当按下Cltr+Alt+Delete只会打开虚拟机中的任务管理器。安装后也可以通过再次运行安装包更改相关设置。<br>继续下一步，根据个人需求勾选选项。<br><img src="https://boyinthesun.oss-cn-beijing.aliyuncs.com/img/vm(2).png?x-oss-process=style/watermark" alt="等待安装"><br><img src="https://boyinthesun.oss-cn-beijing.aliyuncs.com/img/vm(3).png?x-oss-process=style/watermark" alt=""><br>点击许可证，在框内输入密匙<code>FC7D0-D1YDL-M8DXZ-CYPZE-P2AY6</code>，重新启动。</p><h2 id="添加虚拟机"><a href="#添加虚拟机" class="headerlink" title="添加虚拟机"></a>添加虚拟机</h2><p><img src="https://boyinthesun.oss-cn-beijing.aliyuncs.com/img/vm(4).png?x-oss-process=style/watermark" alt="创建新的虚拟机"><br>一般地，选择典型即可。<br>下文以安装Windows 7为例<br><img src="https://boyinthesun.oss-cn-beijing.aliyuncs.com/img/vm(5).png?x-oss-process=style/watermark" alt=""><br>选择iso格式的原版镜像镜像，Windows镜像推荐到<a href="https://msdn.itellyou.cn/" target="_blank" rel="noopener">MSDN我告诉你</a>下载，汇总了微软几乎所有的ed2k下载链接，使用电驴、迅雷等下载。正常应出现<code>快速安装</code>，省去大部分手动操作。<br><img src="https://boyinthesun.oss-cn-beijing.aliyuncs.com/img/vm(6).png?x-oss-process=style/watermark" alt=""><br>版本要选择正确。建议留空序列号，因为此时无法验证序列号是否可用。可以安装后以激活物理机的方式激活虚拟机。<br><img src="https://boyinthesun.oss-cn-beijing.aliyuncs.com/img/vm(7).png?x-oss-process=style/watermark" alt=""><br>位置建议安装到固态硬盘，但不要在C盘。当然普通磁盘也可，只是速度感人。<br><img src="https://boyinthesun.oss-cn-beijing.aliyuncs.com/img/vm(8).png?x-oss-process=style/watermark" alt=""><br>根据自己需求选择<br>完成后就由vm自动安装操作系统，静观其变即可。安装完成后别忘了激活系统。</p><h2 id="VMware-Tools"><a href="#VMware-Tools" class="headerlink" title="VMware Tools"></a>VMware Tools</h2><p>VMware Tools是一个实用插件，支持现有绝大多数系统。一般会自动安装，也可手动安装或更新。安装后可以支持直接拖拽传输文件、同步剪切板信息、任意分辨率显示、鼠标直接跨屏幕操作等等实用功能。</p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> 软件推荐 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 软件 </tag>
            
            <tag> Windows </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>硕鼠——前些年很好用的视频下载神器</title>
      <link href="/post/flvcd/"/>
      <url>/post/flvcd/</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>首先解释一下为什么要说是前几年。因为它太好用，知道的人越来越多，导致引起了视频平台的注意，以<strong>版权为由禁止自己的视频从硕鼠下载</strong>。这里推荐小众软件Annie，在我的另一篇中有介绍，<a href="https://boyinthesun.cn/post/annie/">传送门</a>。<br><img src="https://boyinthesun.oss-cn-beijing.aliyuncs.com/img/flvcd.png?x-oss-process=style/watermark" alt=""></p><h2 id="官方网站"><a href="#官方网站" class="headerlink" title="官方网站"></a>官方网站</h2><p><a href="http://www.flvcd.com" target="_blank" rel="noopener">http://www.flvcd.com</a><br>这是很成熟的软件，虽然有付费vip，但是基本上免费功能就足够使用了，只是限制批量解析最多20个，不支持自动解析剧集。</p><h2 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h2><p>具体方法就不介绍了，很简单，比较人性化。<br>可以下载其浏览器和下载器，不下载也可，直接在网页解析链接再下载即可，但是不建议。硕鼠浏览器还支持所有网页链接解析，可以通过此方法下载剧集，很好用。<br>同时还内置视频合并工具，可以进行简单的视频剪辑。</p><h2 id="支持网站"><a href="#支持网站" class="headerlink" title="支持网站"></a>支持网站</h2><p>主流视频网站(16)：<br>搜狐视频、乐视网、酷6网、56网、响巢看看、美拍、新浪视频、网易视频、激动网、糖豆网、华数TV、暴风影音、微博视频、秒拍、小咖秀、开眼视频<br>网络电视台(13)：<br>中国网络电视台、CCTV、凤凰宽频、江苏网络电视台、城市联合网络电视台、齐鲁网、北京网络广播电视台、广州电视台    浙江网络电视台、TVS南方电视台、台海宽频、中国时刻网、蓝天下<br>综合视频网站(29)：<br>优米网、时光网、播视网、淘米视频、豆瓣预告片、新华网、第一视频、中关村在线、TOM视频酷、搜房网、华录坞、爆米花、琥珀网、偶偶网、CC视频、中经播客、11688、视友网、艺术中国、知音视频网、MSN直播频道、ACFUN、嗶哩嗶哩、看看新闻网、酷米网、6平米、品善网、人民网、第一财经<br>教程视频网站(4)：<br>超星大讲堂、网易公开课、星火视频教程、51CTO学院<br>游戏视频网站(7)：<br>17173游戏视频、Replays.Net、星际视频网、太平洋游戏网、爱拍游戏、PLU游戏、4399游戏视频<br>音乐MV网站(10)：<br>音悦台、百度音乐掌门人、巨鲸MV、谷歌音乐、一听音乐、虾米网、巨鲸音乐、SoGua、5721儿歌、酷狗MV<br>国外视频网站(5)：<br>YouTube(专用下载器)、WAT TV、ESL TV    5min、Howcast</p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> 软件推荐 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 软件 </tag>
            
            <tag> Windows </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Byte VS bit</title>
      <link href="/post/ByteVSbits/"/>
      <url>/post/ByteVSbits/</url>
      
        <content type="html"><![CDATA[<h2 id="存储量单位"><a href="#存储量单位" class="headerlink" title="存储量单位"></a>存储量单位</h2><h3 id="Byte-字节"><a href="#Byte-字节" class="headerlink" title="Byte 字节"></a>Byte 字节</h3><p><strong>字节</strong>是计算机常用的表示信息量大小的计量单位，一个字节包含八位二进制数，即包含8比特（位）。一字节数据可以表示0至9、a至z、A至Z等一个字符，或半个汉字。<strong>缩写为B</strong>。</p><h3 id="bit-位（比特）"><a href="#bit-位（比特）" class="headerlink" title="bit 位（比特）"></a>bit 位（比特）</h3><p><strong>位</strong>是最小的单位，有音译<strong>比特</strong>，表示一个二进制数，为0或1。<strong>缩写为b</strong>。</p><p>不难看出，1Byte = 8bits，1字节等于8位。</p><h2 id="速度常用单位"><a href="#速度常用单位" class="headerlink" title="速度常用单位"></a>速度常用单位</h2><p>对于宽带，常用的单位有两套。</p><h3 id="Mbps"><a href="#Mbps" class="headerlink" title="Mbps"></a>Mbps</h3><p>目前普及的百兆宽带，运营商通常写为100M，实际上是100<strong>Mbps</strong>，拆开来看，100 Million bits per second，100兆比特每秒。</p><h3 id="MB-s"><a href="#MB-s" class="headerlink" title="MB/s"></a>MB/s</h3><p>实际传输速度大概是10<strong>MB/s</strong>，这里是10MByte/s，10兆字节每秒。</p><p>两个单位换算也是八倍关系，8Mbps=1MB/s。所以100M宽带的理论速度为12.5MB/s，达到10MB/s就符合要求了。</p><h2 id="存储设备常用单位"><a href="#存储设备常用单位" class="headerlink" title="存储设备常用单位"></a>存储设备常用单位</h2><p>我们买到一块硬盘，上面标注1000GB，但是插到电脑上只显示953GB，难道是伪劣产品？</p><h3 id="GiB"><a href="#GiB" class="headerlink" title="GiB"></a>GiB</h3><p>GiB是1024进制的单位，<strong>1 GiB=1,024 MGiB=1,048,576 ‬KiB=1,073,741,824‬ Byte</strong>。但是Windows及大部分常用操作系统<strong>混淆了GB和GiB的概念</strong>，Windows系统中出现的GB实际上都是GiB，采用1024进制，因为对于操作系统，1024进制更为方便。上文中提到的单位在大多数情境下也都是1024进制。而Apple的OS X和其他某些系统中的GB却是1000进制（从mac OS 10.6开始），这也导致了同一文件在不同系统中看似大小不同的原因。</p><h3 id="GB"><a href="#GB" class="headerlink" title="GB"></a>GB</h3><p>GB是1000进制的单位，<strong>1 GB=1,000MB=1,000,000KB=1,000,000,000Byte</strong>。一般上在硬盘，u盘的单位均为1000进制，因为对于厂家，存储设备的大小都是10的整数倍。上文提到的1000GB硬盘，大小为1,000,000,000,000‬ Byte，在Windows上显示为953.7GB，缺少的50G并不是凭空消失，而是进制不同的缘故。<br>类似地，有<strong>1TiB=0.909TB, 1GiB=0.954, 1MiB=MB, 1KiB=0.977KB。</strong></p><h3 id="乌龙"><a href="#乌龙" class="headerlink" title="乌龙"></a>乌龙</h3><p>在计算机进入家庭的时候，<strong>这种差异无伤大雅</strong>。早期的存储设备出厂时是1024进制而不是1000进制。软盘在出厂的时候就是1024进制的，如3.5寸软盘大小为1440*1024Byte，标注为1.44MB。后期出现了光盘、磁盘、u盘、固态硬盘等等新的存储设备为了生产方便使用了1000进制，问题便出现了。<strong>如果存储设备不大，用户也难以感受到差别</strong>，但是现在的桌面级硬盘甚至出现了16TB的惊人容量，可是在系统上却显示14.5TB，消失的1.5TB引来消费者不满，实则是因为乱用单位的乌龙。</p><p>但是，也不乏商家利用消费者对于各种单位的混淆不清来欺骗消费者，此时就需要自己掌握以上进制知识，躲避陷阱。</p><p>参考链接：<a href="https://searchstorage.techtarget.com/definition/tebibyte-TiB" target="_blank" rel="noopener">https://searchstorage.techtarget.com/definition/tebibyte-TiB</a></p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> 科普小文 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 常识 </tag>
            
            <tag> 文件 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>博主提供的帮助</title>
      <link href="/post/myskill/"/>
      <url>/post/myskill/</url>
      
        <content type="html"><![CDATA[<p>博主可以提供以下帮助，只要不过分，帮忙宣传就免费！请<a href="tencent://AddContact/?fromId=50&amp;fromSubId=1&amp;subcmd=all&amp;uin=3527857306">qq联系</a></p><h2 id="网络"><a href="#网络" class="headerlink" title="网络"></a>网络</h2><p>各类资源查找，视频音频下载，搭建梯子</p><h2 id="视频"><a href="#视频" class="headerlink" title="视频"></a>视频</h2><p>各种基本处理，剪辑，美化，转场，消音，降噪，字幕等</p><h2 id="图片"><a href="#图片" class="headerlink" title="图片"></a>图片</h2><p>各种基本处理，裁切，美化，抠图，去除物件，除水印，海报制作等</p><h2 id="音频"><a href="#音频" class="headerlink" title="音频"></a>音频</h2><p>各种基本处理，剪辑，降噪，消音，字幕等</p><h2 id="系统"><a href="#系统" class="headerlink" title="系统"></a>系统</h2><p>Windows各种疑难杂症，重装系统<br>linux基本使用</p><h2 id="存储设备"><a href="#存储设备" class="headerlink" title="存储设备"></a>存储设备</h2><p>数据恢复，u盘维修，固态硬盘维修，废固态硬盘改u盘</p><h2 id="计算机语言"><a href="#计算机语言" class="headerlink" title="计算机语言"></a>计算机语言</h2><p>C，Python</p><h2 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h2><p>万一你问的我会呢<br>想不起来我还会啥了</p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> 杂文 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 杂文 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>5G VS 5GHz</title>
      <link href="/post/5g/"/>
      <url>/post/5g/</url>
      
        <content type="html"><![CDATA[<p>正像3G时代的远去，5G将取代4G，以提供速度更快的移动网络。而现今很多路由器产品都声称支持5G，这又是怎么回事呢？<br>事实上两者是完全不同的概念</p><h2 id="5G——一种新的蜂窝网络标准"><a href="#5G——一种新的蜂窝网络标准" class="headerlink" title="5G——一种新的蜂窝网络标准"></a>5G——一种新的蜂窝网络标准</h2><p><img src="https://boyinthesun.oss-cn-beijing.aliyuncs.com/img/5g(1).jpg?x-oss-process=style/watermark" alt=""><br>5G的英文全称是5th generation mobile networks或5th generation wireless systems，即第五代移动通信技术。其理论峰值速度可达1000Mbps，甚至比现在大部分家用宽带还快。由于5G网络的诞生，对企业、对行业，车联网、物联网、工业互联网等都将开辟新的大陆。原来在4G下需要下载十分钟的高清电影，在5g只需要1秒钟！<br><img src="https://boyinthesun.oss-cn-beijing.aliyuncs.com/img/5g(3).png?x-oss-process=style/watermark" alt=""></p><h2 id="5GHz——一种WiFi频率"><a href="#5GHz——一种WiFi频率" class="headerlink" title="5GHz——一种WiFi频率"></a>5GHz——一种WiFi频率</h2><p>以前的路由器WiFi频率都是2.4GHz，而因为5GHz可以有更高的速度，市面上便出现了双频路由器（即支持2.4GHz和5GHz）。这里稍作解释，频率单位Hz即每秒钟次数，5GHz是2.4GHz的两倍，所以在同样的传输协议下，5GHz大概有2.4GHz的两倍速度。另一方面，如今我们的生活已经被电磁波充斥，工作频率在2.4GHz的设备很多，除了WiFi，还有蓝牙等无线协议，且发出2.4GHz的可不止路由器，比如微波炉这类也会对信号造成干扰。5GHz像是一片净土，没有被污染。<br>但是缺点也是有的。我们在中学学过，频率越小，衍射能力越强，穿透能力越强。同样功率下，2.4GHz轻松穿过两堵墙，5GHz过一堵墙就没信号了，是正常现象。</p><h2 id="5G-WiFi——一种新的WiFi标准"><a href="#5G-WiFi——一种新的WiFi标准" class="headerlink" title="5G WiFi——一种新的WiFi标准"></a>5G WiFi——一种新的WiFi标准</h2><p><img src="https://boyinthesun.oss-cn-beijing.aliyuncs.com/img/5g(2).jpg?x-oss-process=style/watermark" alt=""><br>5G WiFi即第五代WiFi传输技术。博主认为这是一个很易混淆的概念。并不是运行在5Ghz频段的Wi-Fi就是5G Wi-Fi了，运行在5Ghz频段的Wi-Fi协议标准包括802.11a（第一代）、802.11n（第四代，同时运行在2.4Ghz和5Ghz双频段）和802.11ac（第五代），而只有采用802.11ac协议的Wi-Fi才是真正5G Wi-Fi。对应地，也有1GWiFi、2GWiFi等等。此概念被应用并不是很多。</p><h2 id="相同点"><a href="#相同点" class="headerlink" title="相同点"></a>相同点</h2><p>虽然三者由概念上看相去甚远，但也有共同点。三者都是网络上的概念，目的都是最求更快速度，都采用了高频信号（5G网络的频率为3300-3400MHz、3400-3600MHz和4800-5000MHz，5GHz即5000MHz），又是同一时期诞生的新概念，也是因为这些原因，很多人将两者混淆。</p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> 科普小文 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 常识 </tag>
            
            <tag> 网络 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>破解器汇总</title>
      <link href="/post/Universal/"/>
      <url>/post/Universal/</url>
      
        <content type="html"><![CDATA[<p>此文的目的是汇总博主用过的破解器，不定期更新，如有需求请在文末留言，<strong>不保证绝对安全</strong>，但是我个人一直在使用，没有出现问题。<br><strong>如果涉及到版权问题，请联系我，我会在24小时内删除。</strong></p><h2 id="解压密码boyinthesun-cn"><a href="#解压密码boyinthesun-cn" class="headerlink" title="解压密码boyinthesun.cn"></a>解压密码<code>boyinthesun.cn</code></h2><h2 id="两句话"><a href="#两句话" class="headerlink" title="两句话"></a>两句话</h2><h3 id="支持正版"><a href="#支持正版" class="headerlink" title="支持正版"></a>支持正版</h3><h3 id="信杀软无破解"><a href="#信杀软无破解" class="headerlink" title="信杀软无破解"></a>信杀软无破解</h3><p>废话不多说，直接放下载链接<br>Corel全家桶算号器：<a href="https://boyinthesun.oss-cn-beijing.aliyuncs.com/files/Corel.X5-X9.All.Products.Universal%20keygen.rar" target="_blank" rel="noopener">Corel keygen</a><br>Adobe全家桶破解器：<a href="https://boyinthesun.oss-cn-beijing.aliyuncs.com/files/amtemu.v0.9.2-painter.rar" target="_blank" rel="noopener">amtemu</a>只支持cc2018及以前版本 </p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> 杂文 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 杂文 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>格式工厂——难得一见的强大免费格式转换工具</title>
      <link href="/post/formatfactory/"/>
      <url>/post/formatfactory/</url>
      
        <content type="html"><![CDATA[<h2 id="说明"><a href="#说明" class="headerlink" title="说明"></a>说明</h2><p>首先贴上官网地址：<a href="http://www.pcfreetime.com/formatfactory/CN/index.html" target="_blank" rel="noopener">传送门</a><br>格式工厂是一个格式转换神器，功能强大，没有水印等烦人的机制，且没有付费版，没有广告，还译为多国文字，简直是当代软件中一股清流。从2008年至今，已经更新到版本5.0，支持视频、图片、音频格式转换以及简单处理。</p><h2 id="功能介绍"><a href="#功能介绍" class="headerlink" title="功能介绍"></a>功能介绍</h2><h3 id="视频"><a href="#视频" class="headerlink" title="视频"></a>视频</h3><p><img src="https://boyinthesun.oss-cn-beijing.aliyuncs.com/img/formatfactory(1).png?x-oss-process=style/watermark" alt=""></p><h4 id="格式转换"><a href="#格式转换" class="headerlink" title="格式转换"></a>格式转换</h4><p>可以转换到各种常用格式：<em>MP4, MKV, WebM, GIF, FLV, MOV, OGG, AVI, 3GP, WMV, MPG, VOB, SWF</em><br>选择转换到的格式，如我要转换到mp4，就点击mp4，再添加文件，选择要转换的文件<br><img src="https://boyinthesun.oss-cn-beijing.aliyuncs.com/img/formatfactory(7).png?x-oss-process=style/watermark" alt=""><br>在输出配置中可以更改视频和音频的大小，添加字幕等，可以自己研究。<br>特别说一下，这里的<code>大小限制</code>不建议填写，因为如果转换的大小超过这个数字，会直接终止转化，即丢弃后面超出文件大小的部分，而不是压缩到指定大小。<br>添加后点击<code>开始</code>即可开始转换，结束后文件会在输出文件夹中（默认<code>D:\FFOutput</code>）。<br>但是，<strong>通过视频客户端下载的视频可能无法转换</strong>，如优酷的kux等，这里建议通过Annie下载：<a href="https://boyinthesun.cn/post/annie/">传送门</a></p><h4 id="视频合并"><a href="#视频合并" class="headerlink" title="视频合并"></a>视频合并</h4><p>通过该功能，可以进行基础的视频剪辑。每段视频都可以设置开始时间和结束时间，再通过该工具整合即可。</p><h4 id="去水印"><a href="#去水印" class="headerlink" title="去水印"></a>去水印</h4><p>按照提示用方框选中水印即可，效果还可<br><video id="video" controls="" preload="none"><br>    <source id="mp4" src="https://boyinthesun.oss-cn-beijing.aliyuncs.com/video/formatfactory%281%29.mp4" type="video/mp4"><br></video><br><video id="video" controls="" preload="none"><br>    <source id="mp4" src="https://boyinthesun.oss-cn-beijing.aliyuncs.com/video/formatfactory%282%29.mp4" type="video/mp4"><br></video></p><h4 id="屏幕录像，画面裁剪"><a href="#屏幕录像，画面裁剪" class="headerlink" title="屏幕录像，画面裁剪"></a>屏幕录像，画面裁剪</h4><p>这里不赘述了，操作不是很难，自己摸索吧。</p><h3 id="音频"><a href="#音频" class="headerlink" title="音频"></a>音频</h3><p><img src="https://boyinthesun.oss-cn-beijing.aliyuncs.com/img/formatfactory(2).png?x-oss-process=style/watermark" alt=""><br>支持转换到各种常用格式：<em>MP3, WMA, APE, FLAC, AAC, AC3, MMF, AMR, M4A, M4R, OGG, WAV, WavPack, MP2</em><br>使用方法见上，没什么区别。</p><h3 id="图片"><a href="#图片" class="headerlink" title="图片"></a>图片</h3><p><img src="https://boyinthesun.oss-cn-beijing.aliyuncs.com/img/formatfactory(3).png?x-oss-process=style/watermark" alt=""><br>支持转换到各种常用格式：<em>WebP, JPG, PNG, ICO, BMP, GIF, TIF, TGA</em><br>使用方法见上，没什么区别。<br>这里还有他的姊妹软件：<strong>图片工厂</strong>，除了格式转换，还有各种图片处理工具。</p><h3 id="文档"><a href="#文档" class="headerlink" title="文档"></a>文档</h3><p><img src="https://boyinthesun.oss-cn-beijing.aliyuncs.com/img/formatfactory(4).png?x-oss-process=style/watermark" alt=""><br>支持由PDF转换到各种文件，效果一般，西文推荐用adobe的Acrobat DC（中文错误率较高），中文的话微软的Word就不错。还有转换到各种文本格式，估计一般人不会用到，会用到的也不会这个软件了。</p><h3 id="光盘"><a href="#光盘" class="headerlink" title="光盘"></a>光盘</h3><p><img src="https://boyinthesun.oss-cn-beijing.aliyuncs.com/img/formatfactory(5).png?x-oss-process=style/watermark" alt=""><br>这年头应该没什么人用光盘了吧，十多年前还是很流行的。光驱软件推荐UltraISO。</p><h3 id="工具集"><a href="#工具集" class="headerlink" title="工具集"></a>工具集</h3><p><img src="https://boyinthesun.oss-cn-beijing.aliyuncs.com/img/formatfactory(6).png?x-oss-process=style/watermark" alt=""><br>没什么可说的，只是把上面的工具搬了下来。</p><h2 id="以下内容搬运自官网："><a href="#以下内容搬运自官网：" class="headerlink" title="以下内容搬运自官网："></a>以下内容搬运自官网：</h2><p><img src="http://www.pcfreetime.com/formatfactory/CN/img/index.png" alt="主页"><br><img src="http://www.pcfreetime.com/formatfactory/CN/img/screen2.jpg" alt="CD音轨转换到MP3,WMA,OGG,AAC...."><br><img src="http://www.pcfreetime.com/formatfactory/CN/img/screen3.jpg" alt="视频DVD转换到MP4,AVI,3GP,WMV....."></p><h3 id="我们是谁？"><a href="#我们是谁？" class="headerlink" title="我们是谁？"></a>我们是谁？</h3><p>上海格诗网络科技有限公司创立于2008年2月，是面向全球用户的互联网软件公司。<br>旗下主打产品“格式工厂”发展至今，已经成为全球领先的视频图片等格式转换客户端。<br>格式工厂致力于帮用户更好的解决文件使用问题，现拥有在音乐、视频、图片等领域庞大的忠实用户，在该软件行业内位于领先地位，并保持高速发展趋势。<br>我们是一群有激情有理想的80后创业团队，因为理想我们聚集在一起，致力于为大家提供实用、简单、方便的互联网软件！<br>欢迎在不修改官方发布包的前提下，自由传播格式工厂。 你可以在任何环境下使用本软件，包括商业环境，不用通知我们。</p><h3 id="联系我们"><a href="#联系我们" class="headerlink" title="联系我们"></a>联系我们</h3><p>格式工厂是深受大家欢迎的一款软件，实用、方便、安全、快速的特点，受到越来越多人的认可！同时也是国内最大的格式转换软件，并受到多家软件媒体的推荐与评奖。<br>如果你希望与我们建立商务合作请通过以下方式与我们联系<br>QQ: 147489914<br>E-mail: <a href="mailto:pcfreetime@126.com">pcfreetime@126.com</a><br>感谢！</p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> 软件推荐 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 软件 </tag>
            
            <tag> Windows </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>键盘不为人知的一面（一）</title>
      <link href="/post/keyboard/"/>
      <url>/post/keyboard/</url>
      
        <content type="html"><![CDATA[<h1 id="概况篇"><a href="#概况篇" class="headerlink" title="概况篇"></a>概况篇</h1><p>作为计算机的输入设备，我们无法避免地要使用<strong>键盘</strong>来操作系统。但你真的了解键盘吗？博主将以<strong>windows10系统104键盘布局</strong>为例，介绍键盘使用小技巧。此篇将着重介绍单按键。组合按键将于后续文章中介绍。<br><img src="https://boyinthesun.oss-cn-beijing.aliyuncs.com/img/keybroad1_func.jpg?x-oss-process=style/watermark" alt=""></p><h2 id="功能键区"><a href="#功能键区" class="headerlink" title="功能键区"></a>功能键区</h2><p><em>部分功能区按键在Windows系统中几乎无功能，在此文中不做介绍。</em></p><h3 id="ESC"><a href="#ESC" class="headerlink" title="ESC"></a>ESC</h3><p><img src="https://boyinthesun.oss-cn-beijing.aliyuncs.com/img/keybroad1_Esc.jpg?x-oss-process=style/watermark" alt=""><br>来源于英文单词escape，在大多数应用中有<strong>返回、退出、终止</strong>等意。</p><h3 id="F1"><a href="#F1" class="headerlink" title="F1"></a>F1</h3><p><img src="https://boyinthesun.oss-cn-beijing.aliyuncs.com/img/keybroad1_F1.jpg?x-oss-process=style/watermark" alt=""><br>在程序中<strong>显示帮助</strong>。</p><h3 id="F2"><a href="#F2" class="headerlink" title="F2"></a>F2</h3><p><img src="https://boyinthesun.oss-cn-beijing.aliyuncs.com/img/keybroad1_F2.jpg?x-oss-process=style/watermark" alt=""><br>在资源管理器中选中文件(夹)，进行<strong>重命名</strong>操作。</p><h3 id="F3"><a href="#F3" class="headerlink" title="F3"></a>F3</h3><p><img src="https://boyinthesun.oss-cn-beijing.aliyuncs.com/img/keybroad1_F3.jpg?x-oss-process=style/watermark" alt=""><br>在资源管理器、IE(等主流浏览器)、Word等程序中打开<strong>搜索框</strong>。</p><h3 id="F5"><a href="#F5" class="headerlink" title="F5"></a>F5</h3><p><img src="https://boyinthesun.oss-cn-beijing.aliyuncs.com/img/keybroad1_F5.jpg?x-oss-process=style/watermark" alt=""><br>在资源管理器、IE(等主流浏览器)中刷新，在word等程序中弹出<strong>查找和替换</strong>。</p><h3 id="F6"><a href="#F6" class="headerlink" title="F6"></a>F6</h3><p><img src="https://boyinthesun.oss-cn-beijing.aliyuncs.com/img/keybroad1_F6.jpg?x-oss-process=style/watermark" alt=""><br>在资源管理器、IE(等主流浏览器)中快速定位到<strong>地址栏</strong>。</p><h3 id="F11"><a href="#F11" class="headerlink" title="F11"></a>F11</h3><p><img src="https://boyinthesun.oss-cn-beijing.aliyuncs.com/img/keybroad1_F11.jpg?x-oss-process=style/watermark" alt=""><br>在资源管理器、IE(等主流浏览器)中<strong>全屏显示</strong>。</p><h3 id="F12"><a href="#F12" class="headerlink" title="F12"></a>F12</h3><p><img src="https://boyinthesun.oss-cn-beijing.aliyuncs.com/img/keybroad1_F12.jpg?x-oss-process=style/watermark" alt=""><br>在IE等程序中打开<strong>开发者模式</strong>，在Word等办公软件中<strong>另存为</strong>。</p><h3 id="PrtSc"><a href="#PrtSc" class="headerlink" title="PrtSc"></a>PrtSc</h3><p><img src="https://boyinthesun.oss-cn-beijing.aliyuncs.com/img/keybroad1_PS.jpg?x-oss-process=style/watermark" alt=""><br>全称PrintScreen，缩写PrintScr、PrtSc或Ps，即<strong>捕获屏幕</strong>，按下后无反应为正常现象，此时屏幕截图已经保存至剪切板，建议打开画图后粘贴，裁取合适大小后保存。也可直接粘贴到qq或微信聊天窗口。<br>Alt+PrtSc可捕获当前窗口，使用方法同上。<br><em>部分键盘在此键位还印有SysRq，全称SystemRequest，是Linux系统特有的“MagicSystemRequestKey”，在此不做介绍。</em><br><em>因Windows系统中使用频率过低，部分键盘已取消该键。</em></p><h3 id="ScrLk"><a href="#ScrLk" class="headerlink" title="ScrLk"></a>ScrLk</h3><p><img src="https://boyinthesun.oss-cn-beijing.aliyuncs.com/img/keybroad1_SL.jpg?x-oss-process=style/watermark" alt=""><br>全称ScrollLock，缩写ScrLk、SL，中文名滚动锁定键。锁定时指示灯亮。在Excle中不锁定时方向键用于移动光标，锁定时方向键用于移动界面。<br>该键应追溯到Dos系统，由于当时显示技术，限制了屏幕只能显示宽25行、长80个字符的文字，在阅读文档时，使用该键能非常方便地翻滚页面。<br><em>因Windows系统中使用频率过低，部分键盘已取消该键。</em></p><h3 id="Pause"><a href="#Pause" class="headerlink" title="Pause"></a>Pause</h3><p><img src="https://boyinthesun.oss-cn-beijing.aliyuncs.com/img/keybroad1_PB.jpg?x-oss-process=style/watermark" alt=""><br>部分键盘印为Pause|Break，缩写Pau、PB，中文名中断暂停键，主要用于<strong>暂停Dos程序运行</strong>，以便查看显示内容，按任意键恢复。<br>在此特别提醒，该键对dos程序有效，如cmd窗口。该键作用相当于语句<code>system("pause")</code>;，但不会出现类似于“Press any key to exit…”或“请按任意键继续…”的字样。<br><em>因Windows系统中使用频率过低，部分键盘已取消该键。</em></p><h2 id="主键盘区"><a href="#主键盘区" class="headerlink" title="主键盘区"></a>主键盘区</h2><h3 id="Tab"><a href="#Tab" class="headerlink" title="Tab"></a>Tab</h3><p><img src="https://boyinthesun.oss-cn-beijing.aliyuncs.com/img/keybroad1_Tab.jpg?x-oss-process=style/watermark" alt=""><br>全称Tabulator或Tabular，中文名制表键，一般印有类似|&lt;— —&gt;|符号。打印出的字符称为制表符（\t）。一般的，一个制表符相当于4或8个空格。<br>在文字处理程序中，Tab键通常用以将游标推进到下一个定位点上。在Word中使用可使每行文字对齐于某位置（不论前面为0~3个空格均显示4个空格）。在Excle中会跳转到右侧单元格。<br>在其他图形应用程序（GUI）中，Tab键会将输入焦点移到下一个控件。该功能常用于输入用户名后跳转到密码栏。</p><h3 id="CapsLock"><a href="#CapsLock" class="headerlink" title="CapsLock"></a>CapsLock</h3><p><img src="https://boyinthesun.oss-cn-beijing.aliyuncs.com/img/keybroad1_Cpas.jpg?x-oss-process=style/watermark" alt=""><br>全称CapitalsLock，中文名大写锁定，一般印有A。锁定时指示灯亮。众所周知，锁定时打印大写字符，不锁定时打印小写字符。</p><h3 id="Shift"><a href="#Shift" class="headerlink" title="Shift"></a>Shift</h3><p><img src="https://boyinthesun.oss-cn-beijing.aliyuncs.com/img/keybroad1_Shift.jpg?x-oss-process=style/watermark" alt="">*注：左右Shift功能一致，使用时可根据个人喜好。但事实上这两个键是有区别的，系统可以分辨出两键，在某些程序（如大型游戏）中可以定义不同的功能。Ctrl、Alr、Win和Enter同。<br>中文名上档键，一般印有上箭头。除了众所周知的切换中英文/全角半角，还有较多实用功能，将在后续文章中介绍。</p><h3 id="Ctrl"><a href="#Ctrl" class="headerlink" title="Ctrl"></a>Ctrl</h3><p><img src="https://boyinthesun.oss-cn-beijing.aliyuncs.com/img/keybroad1_Ctrl.jpg?x-oss-process=style/watermark" alt=""><br>全称Control，中文名控制键。主要用于组合键，将在后续文章中着重介绍。</p><h3 id="Win"><a href="#Win" class="headerlink" title="Win"></a>Win</h3><p><img src="https://boyinthesun.oss-cn-beijing.aliyuncs.com/img/keybroad1_Win.jpg?x-oss-process=style/watermark" alt=""><br>Windows徽标键，一般印为windows视窗徽标。按下可以打开开始菜单。全屏时按下可推出全屏。该键主要用于组合键，将在后续文章中介绍。<br><em>因Windows系统中使用频率较低，部分键盘仅保留一侧按键。</em></p><h3 id="Alt"><a href="#Alt" class="headerlink" title="Alt"></a>Alt</h3><p><img src="https://boyinthesun.oss-cn-beijing.aliyuncs.com/img/keybroad1_Alt.jpg?x-oss-process=style/watermark" alt=""><br>全称Alter，中文名交替换档键。主要用于组合键，将在后续文章中着重介绍。</p><h3 id="Spacebar"><a href="#Spacebar" class="headerlink" title="Spacebar"></a>Spacebar</h3><p><img src="https://boyinthesun.oss-cn-beijing.aliyuncs.com/img/keybroad1_Space.jpg?x-oss-process=style/watermark" alt=""><br>中文名空格键，是键盘中最长的键，大部分键盘空格键不印任何标志。除了输入空格，在对话框中如果有“下一步”“确定”等选项，空格键的作用就相当于鼠标左键或回车键。在某些播放器中可以播放/暂停。<br>作为使用频率较高的按键，有些人习惯大力敲打空格。为了键盘的安全，请轻轻按下即可。</p><h3 id="Fn"><a href="#Fn" class="headerlink" title="Fn"></a>Fn</h3><p><img src="https://boyinthesun.oss-cn-beijing.aliyuncs.com/img/keybroad1_Fn.jpg?x-oss-process=style/watermark" alt=""><br>来源于英文单词Function，即功能键。主要用于笔记本，通过组合键实现各种功能，如调节亮度、音量，多媒体播放、暂停、停止等。对于该键的定义各键盘不尽相同，但一般在某一品牌中是统一的。具体在此不作赘述，请参见说明书。<br>和Ctrl、Alt、Shift、Win等键不同，在系统中不存在Fn的概念，即系统无法得知Fn是否按下。组合键由键盘直接向操作系统发送对应指令而非发送按键。<br><em>部分品牌（如Thinkpad）定义为按下F区按键为对应功能，按下Fn+F区按键为F区按键。</em><br><em>在戴尔Del的部分笔记本中可以通过操作系统设置Fn组合的功能，但如鸡肋，几乎无人知晓。</em></p><h3 id="Application"><a href="#Application" class="headerlink" title="Application"></a>Application</h3><p><img src="https://boyinthesun.oss-cn-beijing.aliyuncs.com/img/keybroad1_ap(1).jpg?x-oss-process=style/watermark" alt=""><br><img src="https://boyinthesun.oss-cn-beijing.aliyuncs.com/img/keybroad1_ap(2).jpg?x-oss-process=style/watermark" alt=""><br><img src="https://boyinthesun.oss-cn-beijing.aliyuncs.com/img/keybroad1_ap(3).jpg?x-oss-process=style/watermark" alt=""><br><img src="https://boyinthesun.oss-cn-beijing.aliyuncs.com/img/keybroad1_ap(4).jpg?x-oss-process=style/watermark" alt="常见的Application键图案"><br>标准键盘上只有这个键的图标，而没有名称。该键为鼠标右键的快捷键，作用与<strong>鼠标右键</strong>一致。<br><em>如图键盘以Fn键代替该键。因Windows系统中使用频率过低，部分键盘已取消该键。</em></p><h3 id="Enter"><a href="#Enter" class="headerlink" title="Enter"></a>Enter</h3><p><img src="https://boyinthesun.oss-cn-beijing.aliyuncs.com/img/keybroad1_Enter.jpg?x-oss-process=style/watermark" alt=""><br>缩写Ent，中文名回车键，一般印有下左箭头。有两个作用,一是确认输入的执行命令,二是在文字处理中起换行的作用。<br>同作为使用频率较高的按键，有些人习惯大力敲打Enter。为了键盘的安全，请轻轻按下即可。</p><h3 id="BackSpace"><a href="#BackSpace" class="headerlink" title="BackSpace"></a>BackSpace</h3><p><img src="https://boyinthesun.oss-cn-beijing.aliyuncs.com/img/keybroad1_BackSpace.jpg?x-oss-process=style/watermark" alt=""><br>中文名退格键，一般印有向左箭头。顾名思义，与空格键(Space)相反。值得注意的是，BackSpace为向左删除，区别于删除键(Delete)。</p><h2 id="编辑键区"><a href="#编辑键区" class="headerlink" title="编辑键区"></a>编辑键区</h2><h3 id="Insert"><a href="#Insert" class="headerlink" title="Insert"></a>Insert</h3><p><img src="https://boyinthesun.oss-cn-beijing.aliyuncs.com/img/keybroad1_Ins.jpg?x-oss-process=style/watermark" alt="">缩写Ins，中文名插入键。该键切换文字输入模式插入模式或覆盖模式。默认为插入模式，及在光标位置插入字符。覆盖模式及以新字符替代右侧字符。值得注意的是，该键一般不设指示灯，如意外进入覆盖模式，请尝试按下Insert恢复。<br>在早期系统或某些程序中，进入覆盖模式后光标会从竖线变为方框。<br><em>因Windows系统中使用频率过低，部分键盘已取消该键。</em></p><h3 id="Delete"><a href="#Delete" class="headerlink" title="Delete"></a>Delete</h3><p><img src="https://boyinthesun.oss-cn-beijing.aliyuncs.com/img/keybroad1_Del.jpg?x-oss-process=style/watermark" alt=""><br>缩写Del，中文名删除键。在文字编辑时，Delete为向右删除(区别于BackSpace)。此外，选中文件(夹)时，按下Delete为删除文件(夹)。<br><em>在某些系统（如macOS）中没有BackSpace键，而Delete键为向左删除。</em></p><h3 id="Home"><a href="#Home" class="headerlink" title="Home"></a>Home</h3><p><img src="https://boyinthesun.oss-cn-beijing.aliyuncs.com/img/keybroad1_Home.jpg?x-oss-process=style/watermark" alt="">中文名起始键，主要用于在文字编辑时跳至行首。在资源管理器中跳至第一个图标。<br><em>因Windows系统中使用频率过低，部分键盘已取消该键。</em></p><h3 id="End"><a href="#End" class="headerlink" title="End"></a>End</h3><p><img src="https://boyinthesun.oss-cn-beijing.aliyuncs.com/img/keybroad1_End.jpg?x-oss-process=style/watermark" alt=""><br>中文名终止键，主要用于在文字编辑时跳至行末。在资源管理器中跳至最后一个图标。与Home键对应。<br><em>因Windows系统中使用频率过低，部分键盘已取消该键。</em></p><h3 id="PageUp"><a href="#PageUp" class="headerlink" title="PageUp"></a>PageUp</h3><p><img src="https://boyinthesun.oss-cn-beijing.aliyuncs.com/img/keybroad1_Pgup.jpg?x-oss-process=style/watermark" alt=""><br>缩写PgUp，中文名向上翻页，在Word中可以准确移至上一页同一位置。<br><em>因Windows系统中使用频率过低，部分键盘已取消该键。</em></p><h3 id="PageDown"><a href="#PageDown" class="headerlink" title="PageDown"></a>PageDown</h3><p><img src="https://boyinthesun.oss-cn-beijing.aliyuncs.com/img/keybroad1_PgDn.jpg?x-oss-process=style/watermark" alt=""><br>缩写PgDown、PageDn或PgDn，中文名向下翻页，在Word中可以准确移至下一页同一位置。<br><em>因Windows系统中使用频率过低，部分键盘已取消该键。</em></p><h2 id="小键盘区"><a href="#小键盘区" class="headerlink" title="小键盘区"></a>小键盘区</h2><h3 id="NumLock"><a href="#NumLock" class="headerlink" title="NumLock"></a>NumLock</h3><p><img src="https://boyinthesun.oss-cn-beijing.aliyuncs.com/img/keybroad1_Num.jpg?x-oss-process=style/watermark" alt=""><br>全称NumberLock，中文名数字键盘锁定键。锁定时指示灯亮。仅针对小键盘区，锁定时（上）和不锁定时（下）的按键如下图所示。<br><img width="300" src="https://boyinthesun.oss-cn-beijing.aliyuncs.com/img/keybroad1_Numkey.jpg?x-oss-process=style/watermark"><br>关于功能更加强大的组合键，将在后续文章中介绍。由于笔记本空间有限，部分按键被省略，给操作带来不便，关于如何解决按键缺少问题，后续文章中也会作介绍。<br>如有错误，欢迎指正！</p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> 科普小文 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 常识 </tag>
            
            <tag> Windows </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Windows沙盒——系统自带的一次性虚拟机</title>
      <link href="/post/winsandbox/"/>
      <url>/post/winsandbox/</url>
      
        <content type="html"><![CDATA[<h2 id="说明"><a href="#说明" class="headerlink" title="说明"></a>说明</h2><p>在我们使用Windows的过程中，不可避免的要接触一些安全性未知的文件，比如破解软件、带有宏的文件<del>以及一些不可描述的文件</del>。虽然现在杀毒软件较为强大，但是万一更强大的病毒劫持了杀毒软件，那后果就严重了。新功能<strong>Windows沙盒(Windows Sandbox)</strong>可有效解决这一问题，这是一个隔离于用户操作系统的环境，和正常系统一样可以运行绝大多数程序，同时保证了用户操作系统的安全，即使沙盒被病毒攻陷或系统文件损坏，也丝毫不会影响到用户的系统，用户的文件也不会被访问。且打开速度很快，不到五秒即可使用，比VMware新建虚拟机要快得多。<strong>非固态硬盘不建议尝试</strong>，会卡到你怀疑人生。</p><h2 id="要求"><a href="#要求" class="headerlink" title="要求"></a>要求</h2><p>必须是Windows10专业版（或教育专业版，工作站专业版）1903及以上</p><h3 id="查看自己的操作系统"><a href="#查看自己的操作系统" class="headerlink" title="查看自己的操作系统"></a>查看自己的操作系统</h3><p>按快捷键<code>Win+R</code>打开运行窗口，输入<code>winver</code>并回车。<br><img src="https://boyinthesun.oss-cn-beijing.aliyuncs.com/img/winsandbox(1).png?x-oss-process=style/watermark" alt=""><br><img src="https://boyinthesun.oss-cn-beijing.aliyuncs.com/img/winsandbox(2).png?x-oss-process=style/watermark" alt="如图符合要求"></p><h3 id="升级操作系统"><a href="#升级操作系统" class="headerlink" title="升级操作系统"></a>升级操作系统</h3><h4 id="非专业版"><a href="#非专业版" class="headerlink" title="非专业版"></a>非专业版</h4><p>博主这里提供一个亲测可用的序列号<code>W4W7H-BCH7V-C62CW-2GDXK-DCPW4</code>，可以直接升级到专业版。若序列号失效，可以自己上网搜索或某宝购买<em>(这里欢迎友链，请私聊)</em>，二三十就能搞到一个。</p><h4 id="低于1903"><a href="#低于1903" class="headerlink" title="低于1903"></a>低于1903</h4><p>如果你的系统是1803甚至更低，我不建议升级，因为目前已知的升级可能会带来操作系统响应变慢，开始菜单异常，某些程序异常等问题，而Microsoft支持给出的建议是直接重装系统解决。当然如果你想试试也无妨，反正可以直接一键回滚到原操作系统。<br>按快捷键<code>Win+I</code>打开<code>Windows设置</code>，<code>更新与安全-&gt;Windows更新-&gt;检查更新</code>，即可自动下载最新版本。<br>或使用Win10<a href="https://www.microsoft.com/zh-cn/software-download/windows10?OCID=WIP_r_Win10_Body_AddPC" target="_blank" rel="noopener">官方升级工具</a><br>重装系统就不说了，找到1903专业版的镜像即可。</p><h2 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h2><p>首次使用需要先在功能列表中启用，打开<code>控制面板-&gt;程序-&gt;程序与功能-&gt;启用或关闭Windows功能</code>，在<code>Windows沙盒</code>打钩。<br><img src="https://boyinthesun.oss-cn-beijing.aliyuncs.com/img/winsandbox(3).png?x-oss-process=style/watermark" alt=""><br>重新启动后，就可以在开始菜单启动了。<br><img src="https://boyinthesun.oss-cn-beijing.aliyuncs.com/img/winsandbox.png?x-oss-process=style/watermark" alt="Windows沙盒"></p><h2 id="注意"><a href="#注意" class="headerlink" title="注意"></a>注意</h2><p><strong>所有更改在关闭Windows沙盒后消失</strong>，再次打开还是全新的系统<br><strong>不同虚拟机软件并不兼容</strong>，比如启用Windows沙盒后会导致VMware运行异常：<br><img src="https://boyinthesun.oss-cn-beijing.aliyuncs.com/img/winsandbox(5).png?x-oss-process=style/watermark" alt=""><br><strong>解决方法如下</strong></p><ol><li>进入<code>Windows安全中心</code>，<code>设备安全性-&gt;内存隔离详情</code>，将其关闭<br><img src="https://boyinthesun.oss-cn-beijing.aliyuncs.com/img/winsandbox(6).png?x-oss-process=style/watermark" alt=""></li><li>按快捷键<code>Win+R</code>打开运行窗口，输入<code>gpedit.msc</code>并回车，打开<code>组策略编辑器</code>，<code>计算机配置-&gt;管理模板-&gt;系统-&gt;Device Guard-&gt;打开基于虚拟化的安全</code>，改为<code>已禁用</code><br><img src="https://boyinthesun.oss-cn-beijing.aliyuncs.com/img/winsandbox(7).png?x-oss-process=style/watermark" alt=""></li><li>然后以管理员运行CMD（或powershell），输入<code>bcdedit /set hypervisorlaunchtype off</code></li><li>还需要在Windows功能中取消勾选<code>Hyper-v</code>。</li><li><strong>重启</strong>之后就可以了</li><li>此时只能运行windows沙盒，如果想运行VMware或Hyper-v，需要以管理员运行CMD（或powershell）<code>bcdedit /set hypervisorlaunchtype auto</code></li></ol><hr><p>关于windows沙盒沙盒中不能更改语言的bug已经修复：<a href="https://support.microsoft.com/zh-cn/help/4512941/windows-10-update-kb4512941" target="_blank" rel="noopener">https://support.microsoft.com/zh-cn/help/4512941/windows-10-update-kb4512941</a></p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> 软件推荐 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 软件 </tag>
            
            <tag> Windows </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>TrafficMonitor——简洁实用的网速/cpu/内存监控器</title>
      <link href="/post/TrafficMonitor/"/>
      <url>/post/TrafficMonitor/</url>
      
        <content type="html"><![CDATA[<h2 id="说明"><a href="#说明" class="headerlink" title="说明"></a>说明</h2><p>项目地址：<a href="https://github.com/zhongyang219/TrafficMonitor" target="_blank" rel="noopener">https://github.com/zhongyang219/TrafficMonitor</a><br>自从卸载了360，一直想找一个性能监控小程序，终于我看上了这个。<br>有两种模式，悬浮窗或内嵌到任务栏，均可以自定义颜色，悬浮窗还可更换皮肤。<br>可以显示<strong>上下行网速</strong>、<strong>cpu使用率</strong>和<strong>内存使用率</strong>，自定义的功能很多，还有历史流量统计等等<br>具体功能详见项目地址，作者写的非常详细。</p><h2 id="下载"><a href="#下载" class="headerlink" title="下载"></a>下载</h2><p><strong>64位</strong> <a href="https://github.com/zhongyang219/TrafficMonitor/releases/download/V1.78/TrafficMonitor_V1.78_x64.7z" target="_blank" rel="noopener">[github下载]</a> <a href="https://pan.boyinthesun.cn/%E8%BD%AF%E4%BB%B6/TrafficMonitor/TrafficMonitor_V1.78_x64.7z" target="_blank" rel="noopener">[本地下载]</a><br><strong>32位</strong> <a href="https://github.com/zhongyang219/TrafficMonitor/releases/download/V1.78/TrafficMonitor_V1.78_x86.7z" target="_blank" rel="noopener">[github下载]</a> <a href="https://pan.boyinthesun.cn/%E8%BD%AF%E4%BB%B6/TrafficMonitor/TrafficMonitor_V1.78_x86.7z" target="_blank" rel="noopener">[本地下载]</a></p><h2 id="以下是搬运内容"><a href="#以下是搬运内容" class="headerlink" title="以下是搬运内容"></a>以下是搬运内容</h2><h3 id="TrafficMonitor-简介"><a href="#TrafficMonitor-简介" class="headerlink" title="TrafficMonitor 简介"></a>TrafficMonitor 简介</h3><p>Traffic Monitor是一款用于Windows平台的网速监控悬浮窗软件，可以显示当前网速、CPU及内存利用率，支持嵌入到任务栏显示，支持更换皮肤、历史流量统计等功能。<br></p><h3 id="相关链接："><a href="#相关链接：" class="headerlink" title="相关链接："></a>相关链接：<br></h3><p>请<a href="https://github.com/zhongyang219/TrafficMonitor/releases" target="_blank" rel="noopener">点击此处</a>下载TrafficMonitor的最新版本。<br><br>备用链接：<a href="https://pan.baidu.com/s/1c1LkPQ4" target="_blank" rel="noopener">百度网盘下载</a><br><br>如果遇到问题，请<a href="https://github.com/zhongyang219/TrafficMonitor/blob/master/Help.md" target="_blank" rel="noopener">点击此处</a>。</p><h3 id="主要特性"><a href="#主要特性" class="headerlink" title="主要特性"></a>主要特性</h3><ul><li>显示当前实现网络传输速率、CPU和内存占用率<br></li><li>如果电脑有多个网卡，支持自动和手动选择网络连接<br></li><li>查看网络详细信息<br></li><li>支持嵌入到任务栏显示<br></li><li>支持更换皮肤和自定义皮肤<br></li><li>历史流量统计<br><h3 id="截图"><a href="#截图" class="headerlink" title="截图"></a>截图</h3>主悬浮窗：<br><br><img src="https://github.com/zhongyang219/TrafficMonitor/raw/master/Screenshots/main1.png" alt=""><br><br>右键菜单：<br><br><img src="https://github.com/zhongyang219/TrafficMonitor/raw/master/Screenshots/main.png" alt=""><br><br>任务栏窗口：<br><br><img src="https://github.com/zhongyang219/TrafficMonitor/raw/master/Screenshots/taskbar.PNG" alt=""><br><br>多彩皮肤：<br><br><img src="https://github.com/zhongyang219/TrafficMonitor/raw/master/Screenshots/skins.PNG" alt=""><br><h3 id="使用方法"><a href="#使用方法" class="headerlink" title="使用方法"></a>使用方法</h3>程序启动后在窗口点击鼠标右键可以弹出右键菜单，主要功能都集中在这个菜单中。如果需要让它嵌入到任务栏显示，请勾选“显示任务栏窗口”。要显示CPU和内存利用率，请勾选“显示更多信息”。<h3 id="自定义皮肤"><a href="#自定义皮肤" class="headerlink" title="自定义皮肤"></a>自定义皮肤</h3><img src="https://github.com/zhongyang219/TrafficMonitor/raw/master/Screenshots/selecte_skin.png" alt=""><br><br>在主窗口或通知区图标右键菜单上选择“其他功能”——“更换皮肤”可以打开更换皮肤界面。<a href="https://github.com/zhongyang219/TrafficMonitorSkin/blob/master/皮肤下载.md" target="_blank" rel="noopener">点击此处</a>可以下载更多皮肤。用户还可以根据自己的需要编辑自己的皮肤。<br><br>皮肤文件放在程序所在目录的<code>skins</code>目录下，每个皮肤被放到单独的文件夹下，文件夹的名称就是皮肤的名称。<br><br>其中<code>background.bmp</code>和<code>background_l.bmp</code>是背景图片，<code>skin.ini</code>是皮肤的配置文件，可以通过<code>skin.ini</code>指定文本颜色、字体、皮肤作者、每个项目的大小和位置等信息。<br><br>详细的皮肤制作教程请<a href="https://github.com/zhongyang219/TrafficMonitor/blob/master/皮肤制作教程.md" target="_blank" rel="noopener">点击此处</a>。<br><br>推荐使用<a href="https://github.com/zhongyang219/TrafficMonitorSkinEditor/releases" target="_blank" rel="noopener">皮肤编辑器</a>来创建或编辑皮肤。<br><h3 id="选项设置"><a href="#选项设置" class="headerlink" title="选项设置"></a>选项设置</h3><img src="https://github.com/zhongyang219/TrafficMonitor/raw/master/Screenshots/option.png" alt=""><br><br>在右键菜单选择“选项…”可以进入选项设置。在选项设置对话框中，可以单独设置主窗口和任务栏窗口的文本颜色、字体、背景颜色、网速单位、显示的文本等。<br><br>在“常规设置”选项卡中，可以设置是否在程序时自动检查更新，以及是否需要在开机是自动运行。可以设置在什么时候需要发出消息通知。<br><br>从1.72版本开始，支持每个项目文本颜色单独设置。勾选“指定每个项目的颜色”后，点击“文本颜色”右边的颜色框，会弹出详细颜色设置的对话框，可以在这里单独指定每个项目的颜色。<br><h3 id="更新日志"><a href="#更新日志" class="headerlink" title="更新日志"></a>更新日志</h3><a href="https://github.com/zhongyang219/TrafficMonitor/blob/master/UpdateLog/update_log.md" target="_blank" rel="noopener">点击此处查看更新日志</a></li></ul><hr><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> 软件推荐 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 软件 </tag>
            
            <tag> Windows </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Scoop安装详解</title>
      <link href="/post/scoop/"/>
      <url>/post/scoop/</url>
      
        <content type="html"><![CDATA[<h2 id="说明"><a href="#说明" class="headerlink" title="说明"></a>说明</h2><p><strong>Scoop</strong>是一个强大的<strong>Windows包管理工具</strong>，这里有<a href="https://scoop.sh/" target="_blank" rel="noopener">Scoop官网</a>以及<a href="https://github.com/lukesampson/scoop" target="_blank" rel="noopener">github上的项目地址</a>，具体功能便是<strong>用一行命令安装程序</strong>。<br>这里使用Windows预装的<strong>PowerShell</strong>进行操作，可以在程序搜索框搜索PowerShell，或在运行窗口输入<code>powershell</code>，Win10也可右键开始按钮-&gt;Windows PowerShell。<br><img src="https://boyinthesun.oss-cn-beijing.aliyuncs.com/img/scoop(1).png?x-oss-process=style/watermark" alt="Windows PowerShell"></p><h2 id="环境配置"><a href="#环境配置" class="headerlink" title="环境配置"></a>环境配置</h2><p><strong>①Windows 7 SP1 + / Windows Server 2008+</strong><br><strong>②.NET Framework 4.5+</strong>和<strong>PowerShell 5+</strong>，<br>一般的<strong>Win10系统符合要求可直接跳过</strong>。<br><strong>查看.NET Framework版本：</strong>在PowerShell窗口中输入</p><pre class="line-numbers language-powershell"><code class="language-powershell"><span class="token variable">$PSVersionTable</span><span class="token punctuation">.</span>CLRVersion<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>或打开`控制面板-&gt;程序-&gt;启用或关闭 Windows 功能<br><img src="https://boyinthesun.oss-cn-beijing.aliyuncs.com/img/scoop(2).png?x-oss-process=style/watermark" alt="图中版本为4.8"><br>若版本过低，请点击下载<a href="https://dotnet.microsoft.com/download/dotnet-framework/thank-you/net452-developer-pack-offline-installer" target="_blank" rel="noopener">.NET Framework 4.5.2</a>并安装。<br><strong>查看PowerShell版本：</strong>在PowerShell窗口中输入</p><pre class="line-numbers language-powershell"><code class="language-powershell"><span class="token variable">$PSVersionTable</span><span class="token punctuation">.</span>PSVersion<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><strong>Major</strong>为版本号。<br><img src="https://boyinthesun.oss-cn-beijing.aliyuncs.com/img/scoop(3).png?x-oss-process=style/watermark" alt="如图版本号为5"><br>若版本过低，则需下载。这里有微软官方说明<a href="https://docs.microsoft.com/zh-cn/skypeforbusiness/set-up-your-computer-for-windows-powershell/download-and-install-windows-powershell-5-1" target="_blank" rel="noopener">下载并安装 Windows PowerShell 5.1</a></p><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p>在PowerShell窗口中输入</p><pre class="line-numbers language-powershell"><code class="language-powershell"><span class="token function">iex</span> <span class="token punctuation">(</span><span class="token function">new-object</span> net<span class="token punctuation">.</span>webclient<span class="token punctuation">)</span><span class="token punctuation">.</span>downloadstring<span class="token punctuation">(</span><span class="token string">'https://get.scoop.sh'</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>如果<strong>下载scoop的过程中断，那么必须先删除</strong><code>C:\Users&lt;user&gt;\scoop</code>文件夹(如我的用户名是sunboy，那么文件夹就是<code>C:\Users\sunboy\scoop</code>)，再执行以上命令安装。</p><h5 id="我在这里遇到一个报错："><a href="#我在这里遇到一个报错：" class="headerlink" title="我在这里遇到一个报错："></a>我在这里遇到一个报错：</h5><pre class="line-numbers language-powershell"><code class="language-powershell">PowerShell requires an execution policy in <span class="token namespace">[Unrestricted, RemoteSigned, ByPass]</span> to run Scoop<span class="token punctuation">.</span><span class="token keyword">For</span> example<span class="token punctuation">,</span> to <span class="token function">set</span> the execution policy to <span class="token string">'RemoteSigned'</span> please run :<span class="token string">'Set-ExecutionPolicy RemoteSigned -scope CurrentUser'</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>这时需要修改PowerShell的安全策略</p><pre class="line-numbers language-powershell"><code class="language-powershell"><span class="token function">Set</span><span class="token operator">-</span>ExecutionPolicy RemoteSigned <span class="token operator">-</span>Scope CurrentUser<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>随后输入Y确认</p><h5 id="又一个报错："><a href="#又一个报错：" class="headerlink" title="又一个报错："></a>又一个报错：</h5><pre class="line-numbers language-powershell"><code class="language-powershell">使用“1”个参数调用“DownloadString”时发生异常:“无法连接到远程服务器”所在位置 行:1 字符: 1<span class="token operator">+</span> <span class="token function">iex</span> <span class="token punctuation">(</span><span class="token function">new-object</span> net<span class="token punctuation">.</span>webclient<span class="token punctuation">)</span><span class="token punctuation">.</span>downloadstring<span class="token punctuation">(</span><span class="token string">'https://get.scoop.sh'</span><span class="token punctuation">)</span><span class="token operator">+</span> ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~    <span class="token operator">+</span> CategoryInfo          : NotSpecified: <span class="token punctuation">(</span>:<span class="token punctuation">)</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span> MethodInvocationException    <span class="token operator">+</span> FullyQualifiedErrorId : WebException<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>原因是 <a href="https://get.scoop.sh" target="_blank" rel="noopener">https://get.scoop.sh</a> 无法访问，大概是因为外部链接不稳定，尝试更换命令为：</p><pre class="line-numbers language-powershell"><code class="language-powershell"><span class="token function">iex</span> <span class="token punctuation">(</span><span class="token function">new-object</span> net<span class="token punctuation">.</span>webclient<span class="token punctuation">)</span><span class="token punctuation">.</span>downloadstring<span class="token punctuation">(</span><span class="token string">'https://raw.githubusercontent.com/lukesampson/scoop/master/bin/install.ps1'</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>若依旧报错，建议多尝试几次、更换网络或者挂梯子。我使用的是ShadowSocksR，顺利安装。</p><h5 id="又发现报错…"><a href="#又发现报错…" class="headerlink" title="又发现报错…"></a>又发现报错…</h5><p>提示“基础连接已经关闭: 发送时发生错误。”或“操作超时”<br>同样是网络原因，解决方案同上。</p><h5 id="还有一个报错…"><a href="#还有一个报错…" class="headerlink" title="还有一个报错…"></a>还有一个报错…</h5><pre class="line-numbers language-powershell"><code class="language-powershell"><span class="token function">iex</span> : 使用“2”个参数调用“DownloadFile”是发生异常:“请求被中止: 未能创建 SSL<span class="token operator">/</span>TLS 安全通道。”所在位置 行:1 字符: 1<span class="token operator">+</span> <span class="token function">iex</span> <span class="token punctuation">(</span><span class="token function">new-object</span> net<span class="token punctuation">.</span>webclient<span class="token punctuation">)</span><span class="token punctuation">.</span>downloadstring<span class="token punctuation">(</span><span class="token string">'https://get.scoop.sh'</span><span class="token punctuation">)</span><span class="token operator">+</span> ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~    <span class="token operator">+</span> CategoryInfo          : NotSpecified: <span class="token punctuation">(</span>:<span class="token punctuation">)</span> <span class="token namespace">[Invoke-Expression]</span><span class="token punctuation">,</span> MethodInvocationException    <span class="token operator">+</span> FullyQualifiedErrorId : WebException<span class="token punctuation">,</span> Microsoft<span class="token punctuation">.</span>PowreShell<span class="token punctuation">.</span>Commands<span class="token punctuation">.</span>InvokeExpressionCommand<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>需执行以下命令：</p><pre class="line-numbers language-powershell"><code class="language-powershell"><span class="token namespace">[Net.ServicePointManager]</span>::SecurityProtocol = <span class="token namespace">[Net.SecurityProtocolType]</span>::Tls12<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>如果是新系统，可以尝试以下操作：打开ie，在弹出的窗口点击确定<br><img src="https://boyinthesun.oss-cn-beijing.aliyuncs.com/img/scoop(4).png?x-oss-process=style/watermark" alt=""></p><h5 id="执行以下命令确认安装是否成功"><a href="#执行以下命令确认安装是否成功" class="headerlink" title="执行以下命令确认安装是否成功"></a>执行以下命令确认安装是否成功</h5><pre class="line-numbers language-powershell"><code class="language-powershell">scoop help<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://boyinthesun.oss-cn-beijing.aliyuncs.com/img/scoop(5).png?x-oss-process=style/watermark" alt="scoop help"><br>若正常显示帮助信息则表示安装成功。</p><h2 id="使用技巧"><a href="#使用技巧" class="headerlink" title="使用技巧"></a>使用技巧</h2><p>因为用scoop下载软件大多是从外部链接下载的，网速较慢且容易失败，可以安装aria2来提升下载速度：</p><pre class="line-numbers language-powershell"><code class="language-powershell">scoop install aria2<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>安装完成后下载文件会优先调用aria2进行下载。</p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> 软件推荐 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 软件 </tag>
            
            <tag> Windows </tag>
            
            <tag> 命令行 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Annie——一个简洁强大的轻量级视频下载神器</title>
      <link href="/post/annie/"/>
      <url>/post/annie/</url>
      
        <content type="html"><![CDATA[<h2 id="说明"><a href="#说明" class="headerlink" title="说明"></a>说明</h2><p>项目网站：<a href="https://github.com/iawia002/annie" target="_blank" rel="noopener">https://github.com/iawia002/annie</a><br><img src="https://boyinthesun.oss-cn-beijing.aliyuncs.com/img/Annie.jpg" alt=""><br><strong>Annie</strong>是一个基于go语言编写的<strong>下载器</strong>，先来解释一下这几个形容词。<br><strong>简洁</strong>：程序无UI界面，通过命令行操作，且简单易懂。<br><strong>强大</strong>：支持Windows、macOS、Linux系统，各大视频网站均可下载，且还能下载其他文件如音频，图片等。在项目网站列举的有：<em><a href="https://www.douyin.com" target="_blank" rel="noopener">抖音</a>、<a href="https://www.bilibili.com" target="_blank" rel="noopener">哔哩哔哩</a>、<a href="https://bcy.net" target="_blank" rel="noopener">半次元</a>、<a href="https://www.pixivision.net" target="_blank" rel="noopener">pixivision</a>、<a href="https://www.youku.com" target="_blank" rel="noopener">优酷</a>、<a href="https://www.youtube.com" target="_blank" rel="noopener">YouTube</a>、<a href="https://www.iqiyi.com" target="_blank" rel="noopener">爱奇艺</a>、<a href="https://www.mgtv.com" target="_blank" rel="noopener">芒果TV</a>、<a href="http://www.tangdou.com" target="_blank" rel="noopener">糖豆广场舞</a>、<a href="https://www.tumblr.com" target="_blank" rel="noopener">Tumblr</a>、<a href="https://vimeo.com" target="_blank" rel="noopener">Vimeo</a>、<a href="https://facebook.com" target="_blank" rel="noopener">Facebook</a>、<a href="https://v.douyu.com" target="_blank" rel="noopener">斗鱼视频</a>、<a href="https://weibo.com" target="_blank" rel="noopener">微博</a>、<a href="https://www.instagram.com" target="_blank" rel="noopener">Instagram</a>、<a href="https://twitter.com" target="_blank" rel="noopener">Twitter</a>、<a href="https://v.qq.com" target="_blank" rel="noopener">腾讯视频</a>、<a href="https://music.163.com" target="_blank" rel="noopener">网易云音乐</a>、<a href="https://yinyuetai.com" target="_blank" rel="noopener">音悦台</a>、<a href="https://time.geekbang.org" target="_blank" rel="noopener">极客时间</a>、<a href="https://pornhub.com" target="_blank" rel="noopener">Pornhub</a>、<a href="https://xvideos.com" target="_blank" rel="noopener">XVIDEOS</a>、<a href="https://udn.com" target="_blank" rel="noopener">聯合新聞網</a>、<a href="https://www.tiktok.com" target="_blank" rel="noopener">TikTok</a></em><br><strong>轻量级</strong>：软件本体不到3MB，加上用来合成视频的软件FFmpeg也不过70MB。<br>本文详细介绍Windows，其他系统请查看项目地址，已经很详细了。</p><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><h3 id="Windows"><a href="#Windows" class="headerlink" title="Windows"></a>Windows</h3><p>这里使用Windows预装的<strong>PowerShell</strong>进行操作，可以在程序搜索框搜索PowerShell，Win10也可右键开始按钮-&gt;Windows PowerShell。<br><img src="https://boyinthesun.oss-cn-beijing.aliyuncs.com/img/Annie(1).png?x-oss-process=style/watermark" alt="Windows PowerShell"></p><h4 id="1-环境配置"><a href="#1-环境配置" class="headerlink" title="1. 环境配置"></a>1. 环境配置</h4><p><strong>①Windows 7 SP1 + / Windows Server 2008+</strong><br><strong>②.NET Framework 4.5+</strong>和<strong>PowerShell 5+</strong>，<br>一般的<strong>Win10系统符合要求可直接跳过</strong>。<br><strong>查看.NET Framework版本：</strong>在PowerShell窗口中输入</p><pre class="line-numbers language-powershell"><code class="language-powershell"><span class="token variable">$PSVersionTable</span><span class="token punctuation">.</span>CLRVersion<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>或打开`控制面板-&gt;程序-&gt;启用或关闭 Windows 功能<br><img src="https://boyinthesun.oss-cn-beijing.aliyuncs.com/img/Annie(2).png?x-oss-process=style/watermark" alt="图中版本为4.8"><br>若版本过低，请点击下载<a href="https://dotnet.microsoft.com/download/dotnet-framework/thank-you/net452-developer-pack-offline-installer" target="_blank" rel="noopener">.NET Framework 4.5.2</a>并安装。<br><strong>查看PowerShell版本：</strong>在PowerShell窗口中输入</p><pre class="line-numbers language-powershell"><code class="language-powershell"><span class="token variable">$PSVersionTable</span><span class="token punctuation">.</span>PSVersion<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><strong>Major</strong>为版本号。<br><img src="https://boyinthesun.oss-cn-beijing.aliyuncs.com/img/Annie(3).png?x-oss-process=style/watermark" alt="图中版本号为5"><br>若版本过低，则需下载。这里有微软官方说明<a href="https://docs.microsoft.com/zh-cn/skypeforbusiness/set-up-your-computer-for-windows-powershell/download-and-install-windows-powershell-5-1" target="_blank" rel="noopener">下载并安装 Windows PowerShell 5.1</a></p><h4 id="2-安装scoop"><a href="#2-安装scoop" class="headerlink" title="2. 安装scoop"></a>2. 安装scoop</h4><p>在PowerShell窗口中输入</p><pre class="line-numbers language-powershell"><code class="language-powershell"><span class="token function">iex</span> <span class="token punctuation">(</span><span class="token function">new-object</span> net<span class="token punctuation">.</span>webclient<span class="token punctuation">)</span><span class="token punctuation">.</span>downloadstring<span class="token punctuation">(</span><span class="token string">'https://get.scoop.sh'</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>这是一个强大的命令行包管理工具，在我的另一篇中有介绍。如遇报错，请到这里查看：<a href="http://www.boyinthesun.cn/post/scoop/" target="_blank" rel="noopener">scoop安装详解</a></p><h4 id="3-安装annie"><a href="#3-安装annie" class="headerlink" title="3. 安装annie"></a>3. 安装annie</h4><p>在PowerShell窗口中输入</p><pre class="line-numbers language-powershell"><code class="language-powershell">scoop install annie<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>该命令会为你安装FFmpeg（合并视频用）和Annie<br>同理，<strong>如果下载过程中断，需要删除</strong><code>C:\Users&lt;user&gt;\scoop\app</code>内相应的文件夹。同样建议挂梯子。<br><img src="https://boyinthesun.oss-cn-beijing.aliyuncs.com/img/Annie(4).png?x-oss-process=style/watermark" alt="如图即为安装成功"></p><h3 id="macOS"><a href="#macOS" class="headerlink" title="macOS"></a>macOS</h3><p>在终端输入</p><pre class="line-numbers language-sh"><code class="language-sh">brew install ffmpegbrew install annie<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>由于博主手头没有macOS无法测试，欢迎留言讨论。</p><h3 id="Linux"><a href="#Linux" class="headerlink" title="Linux"></a>Linux</h3><p>首先根据自己的系统构架<strong>选择安装包</strong>：<a href="https://github.com/iawia002/annie/releases" target="_blank" rel="noopener">传送门</a><br>目前最新版是0.9.8，我的系统是64位Debian系统，那么执行命令：</p><pre class="line-numbers language-sh"><code class="language-sh">wget https://github.com/iawia002/annie/releases/download/0.9.8/annie_0.9.8_Linux_64-bit.tar.gztar zxvf annie_*.tar.gzmv annie /usr/local/bin/rm -rf annie_*.tar.gz<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>再安装FFmpeg</p><pre class="line-numbers language-sh"><code class="language-sh">wget https://www.moerats.com/usr/down/ffmpeg/ffmpeg-git-$(getconf LONG_BIT)bit-static.tar.xztar xvf ffmpeg-git-*-static.tar.xzmv ffmpeg-git-*/ffmpeg  ffmpeg-git-*/ffprobe /usr/local/bin/rm -rf ffmpeg-git-*<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h2 id="用法"><a href="#用法" class="headerlink" title="用法"></a>用法</h2><pre class="line-numbers language-txt"><code class="language-txt">annie [OPTIONS] URL [URL...]   Options  -i    Information only  -F string        URLs file path  -d    Debug mode  -j    Print extracted data  -v    Show versionDownload:  -f string        Select specific stream to download  -p    Download playlist  -n int        The number of download thread (only works for multiple-parts video) (default 10)  -c string        Cookie  -r string        Use specified Referrer  -cs int        HTTP chunk size for downloading (in MB) (default 0)Network:  -retry int        How many times to retry when the download failed (default 10)Playlist:  -start int        Playlist video to start at (default 1)  -end int        Playlist video to end at  -items string        Playlist video items to download. Separated by commas like: 1,5,6,8-10Filesystem:  -o string        Specify the output path  -O string        Specify the output file nameSubtitle:  -C    Download captionsYouku:  -ccode string        Youku ccode (default "0590")  -ckey string        Youku ckey (default "7B19C0AB12633B22E7FE81271162026020570708D6CC189E4924503C49D243A0DE6CD84A766832C2C99898FC5ED31F3709BB3CDD82C96492E721BDD381735026")  -password string        Youku passwordaria2:Note: If you use aria2 to download, you need to merge the multi-part videos yourself.  -aria2        Use Aria2 RPC to download  -aria2addr string        Aria2 Address (default "localhost:6800")  -aria2method string        Aria2 Method (default "http")  -aria2token string        Aria2 RPC Token<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="基本用法"><a href="#基本用法" class="headerlink" title="基本用法"></a>基本用法</h3><p><strong>无选项</strong>，直接下载视频，默认是最高清晰度，如:<code>annie https://www.iqiyi.com/v_19rrnqxz7k.html</code><br><img src="https://boyinthesun.oss-cn-beijing.aliyuncs.com/img/Annie(5).png?x-oss-process=style/watermark" alt=""><br><strong>-i选项</strong>，仅显示信息但不下载，如<code>annie -i https://www.iqiyi.com/v_19rrnqxz7k.html</code>：<br><img src="https://boyinthesun.oss-cn-beijing.aliyuncs.com/img/Annie(6).png?x-oss-process=style/watermark" alt=""><br>这时可以根据提示使用<strong>-f选项</strong>来选择清晰度，如我要下载896*376，则<code>annie -f 2 https://www.iqiyi.com/v_19rrnqxz7k.html</code>：<br><img src="https://boyinthesun.oss-cn-beijing.aliyuncs.com/img/Annie(7).png?x-oss-process=style/watermark" alt=""><br>此时文件已经下载至程序运行目录，对于windows即位于<code>C:\Users&lt;user&gt;</code>，我的用户名为Sunboy，则可以找到我的视频：<code>C:\Users\Sunboy\战狼.f4v</code><br>如果你想下载多个视频，那么<strong>用空格隔开网址</strong>。<br>也可以使用<strong>-F选项</strong>下载txt中的所有链接，如我把链接都放到了<code>D:\text.txt</code>，则执行<code>annie -F D:\text.txt -i</code>列举信息，<code>annie -F D:\text.txt -f 80</code>下载指定清晰度<br><strong>-o选项</strong>，用于指定下载目录，如下载到D盘视频文件夹，即<code>annie -o D:\视频\ https://www.iqiyi.com/v_19rrnqxz7k.html</code></p><h3 id="播放列表"><a href="#播放列表" class="headerlink" title="播放列表"></a>播放列表</h3><p>目前播放列表只支持bilibili、youtube和糖豆广场舞，加上<strong>参数-p</strong>即可，如查看所有集：<code>annie -i -p https://www.bilibili.com/bangumi/play/ss20117?spm_id_from=333.851.b_62696c695f7265706f72745f74656c65706c6179.36</code>，再下载指定清晰度：<code>annie -f 80 -p https://www.bilibili.com/bangumi/play/ss20117?spm_id_from=333.851.b_62696c695f7265706f72745f74656c65706c6179.36</code>，也可以下载指定集：<code>annie -f 80 -p -start 1 -end 10 https://www.bilibili.com/bangumi/play/ss20117?spm_id_from=333.851.b_62696c695f7265706f72745f74656c65706c6179.36</code></p><h3 id="会员"><a href="#会员" class="headerlink" title="会员"></a>会员</h3><p>目前会员只支持bilibili和优酷，当然首先你得有个会员才能下载。我刚好有优酷会员，做个一演示。<br>首先在浏览器登陆会员，然后获取<code>cookies</code>的<code>P_pck_rm</code>参数，保存到cookies.txt，格式如：<code>P_pck_rm=woxiaxiede</code>。至于获取<code>cookies</code>，推荐使用<code>EditThisCookie</code>插件，我是用的是Chrome可以直接从插件商店获取（需翻墙）。安装完成后到设置更改导出格式为<code>Semicolon separated name=value paris</code>，复制到txt文件，仅需保留<code>P_pck_rm=woxiaxiede</code>。<br><img src="https://boyinthesun.oss-cn-beijing.aliyuncs.com/img/Annie(10).png?x-oss-process=style/watermark" alt=""><br>使用时添加<strong>-c选项</strong>：<code>annie -c D:\cookies -i https://for.example.com/</code>以查看信息。<br>这里我遇到一个报错<br><img src="https://boyinthesun.oss-cn-beijing.aliyuncs.com/img/Annie(9).png?x-oss-process=style/watermark" alt=""><br>按照提示将<code>&amp;</code>替换为<code>"&amp;"</code>即可。</p><h2 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h2><p>可以使用<strong>-aira2</strong>选项提升下载速度，当然需要首先安装aria2。<br>annie也可以下载普通文件，等同于wget命令。<br>其他用法详见<a href="https://github.com/iawia002/annie" target="_blank" rel="noopener">项目地址</a>。</p><h2 id="推荐"><a href="#推荐" class="headerlink" title="推荐"></a>推荐</h2><p>除了Annie，github上还有不少类似的项目，安装和使用方法也类似，这里就不再赘述了，有兴趣的可以自己尝试。<br><a href="https://github.com/iawia002/Lulu" target="_blank" rel="noopener">lulu</a>来自相同的作者，但似乎支持更多网站，没有细研究。<br><a href="https://github.com/rg3/youtube-dl" target="_blank" rel="noopener">youtube-dl</a><br><a href="https://github.com/rylio/ytdl" target="_blank" rel="noopener">ytdl</a><br><a href="https://github.com/soimort/you-get" target="_blank" rel="noopener">you-get</a></p><h2 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h2><p><a href="https://www.moerats.com/archives/935/" target="_blank" rel="noopener">https://www.moerats.com/archives/935/</a></p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> 软件推荐 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 软件 </tag>
            
            <tag> Windows </tag>
            
            <tag> 命令行 </tag>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>你好，世界！</title>
      <link href="/post/hello-world/"/>
      <url>/post/hello-world/</url>
      
        <content type="html"><![CDATA[<h1 id="Hello-World"><a href="#Hello-World" class="headerlink" title="Hello, World!"></a>Hello, World!</h1><h1 id="你好，世界"><a href="#你好，世界" class="headerlink" title="你好，世界"></a>你好，世界</h1><p><img src="https://boyinthesun.oss-cn-beijing.aliyuncs.com/HelloWorld.jpg?x-oss-process=style/watermark" alt=""><br>1987年，Brian Kernighan 和Dennis M. Ritchie合著的<em>《C语言程序设计(The C Programme Language)》</em>问世并广泛流传，<strong>书中的第一例</strong>写有：</p><pre class="line-numbers language-c"><code class="language-c"><span class="token macro property">#<span class="token directive keyword">include</span> <span class="token string">&lt;stdio.h></span></span><span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"Hello, World!"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>由此，『Hello, World! 』成为程序员们惯用的<strong>调试程序输出的实例</strong>。</p><p>今天，我在此成功输出了『Hello, World! 』，这意味着<strong>我的博客正式开始运行</strong>。我的博客中将会写有我的学习历程，经验分享，踩过的坑，以及自己抛的又跳进去的坑，未来还可能会有我自己的项目。</p><p>博客基于github仓库和hexo搭建，永久域名 <a href="https://boyinthesun.github.io/" target="_blank" rel="noopener">https://boyinthesun.github.io/</a> 和 htpps://<a href="http://www.boyinthesun.cn/" target="_blank" rel="noopener">www.boyinthesun.cn/</a> ，感谢来访。</p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> 杂文 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 杂文 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
